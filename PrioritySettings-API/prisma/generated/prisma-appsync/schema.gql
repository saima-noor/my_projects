input AWSDateTimeFilterInput {
    equals: AWSDateTime
    gt: AWSDateTime
    gte: AWSDateTime
    in: [AWSDateTime!]
    lt: AWSDateTime
    lte: AWSDateTime
    not: AWSDateTimeFilterInput
    notIn: [AWSDateTime!]
}

type AwsDevopsServicesList {
    id: Int!
    service_name: String
    resource_type: String
}

input AwsDevopsServicesListConnectOrCreateInput {
    where: AwsDevopsServicesListWhereUniqueInput!
    create: AwsDevopsServicesListCreateInput!
}

input AwsDevopsServicesListCreateInput {
    service_name: String
    resource_type: String
}

input AwsDevopsServicesListCreateManyInput {
    service_name: String
    resource_type: String
}

input AwsDevopsServicesListDeleteManyInput {
    where: AwsDevopsServicesListWhereFilterInput!
}

input AwsDevopsServicesListDeleteUniqueInput {
    where: AwsDevopsServicesListWhereUniqueInput!
}

input AwsDevopsServicesListFilterRelationsInput {
    every: AwsDevopsServicesListWhereFilterInput
    none: AwsDevopsServicesListWhereFilterInput
    some: AwsDevopsServicesListWhereFilterInput
}

input AwsDevopsServicesListOrderByInput {
    id: OrderByArg
    service_name: OrderByArg
    resource_type: OrderByArg
}

input AwsDevopsServicesListUpdateInput {
    service_name: String
    resource_type: String
}

input AwsDevopsServicesListUpdateManyInput {
    where: AwsDevopsServicesListWhereFilterInput!
    data: AwsDevopsServicesListUpdateInput!
}

input AwsDevopsServicesListUpdateUniqueInput {
    data: AwsDevopsServicesListUpdateInput!
    where: AwsDevopsServicesListWhereUniqueInput!
}

input AwsDevopsServicesListUpsertInput {
    create: AwsDevopsServicesListCreateInput!
    update: AwsDevopsServicesListUpdateInput!
}

input AwsDevopsServicesListUpsertUniqueInput {
    where: AwsDevopsServicesListWhereUniqueInput!
    create: AwsDevopsServicesListCreateInput!
    update: AwsDevopsServicesListUpdateInput!
}

input AwsDevopsServicesListWhereFilterInput {
    OR: [AwsDevopsServicesListWhereFilterInput]
    NOT: [AwsDevopsServicesListWhereFilterInput]
    AND: [AwsDevopsServicesListWhereFilterInput]
    id: IntFilterInput
    service_name: StringFilterInput
    resource_type: StringFilterInput
}

input AwsDevopsServicesListWhereUniqueInput {
    id: Int
}

input AWSEmailFilterInput {
    contains: String
    endsWith: String
    equals: AWSEmail
    in: [AWSEmail!]
    not: AWSEmailFilterInput
    notIn: [AWSEmail!]
    startsWith: String
}

input AWSJSONFilterInput {
    contains: String
    endsWith: String
    equals: AWSJSON
    in: [AWSJSON!]
    not: AWSJSONFilterInput
    notIn: [AWSJSON!]
    startsWith: String
}

input AWSURLFilterInput {
    contains: String
    endsWith: String
    equals: AWSURL
    in: [AWSURL!]
    not: AWSURLFilterInput
    notIn: [AWSURL!]
    startsWith: String
}

type BatchPayload {
    count: Int
}

input BooleanFilterInput {
    equals: Boolean
    not: BooleanFilterInput
}

type CockpitTypes {
    id: Int!
    cockpit_id: String
    cockpit_name: String
}

input CockpitTypesConnectOrCreateInput {
    where: CockpitTypesWhereUniqueInput!
    create: CockpitTypesCreateInput!
}

input CockpitTypesCreateInput {
    cockpit_id: String
    cockpit_name: String
}

input CockpitTypesCreateManyInput {
    cockpit_id: String
    cockpit_name: String
}

input CockpitTypesDeleteManyInput {
    where: CockpitTypesWhereFilterInput!
}

input CockpitTypesDeleteUniqueInput {
    where: CockpitTypesWhereUniqueInput!
}

input CockpitTypesFilterRelationsInput {
    every: CockpitTypesWhereFilterInput
    none: CockpitTypesWhereFilterInput
    some: CockpitTypesWhereFilterInput
}

input CockpitTypesOrderByInput {
    id: OrderByArg
    cockpit_id: OrderByArg
    cockpit_name: OrderByArg
}

input CockpitTypesUpdateInput {
    cockpit_id: String
    cockpit_name: String
}

input CockpitTypesUpdateManyInput {
    where: CockpitTypesWhereFilterInput!
    data: CockpitTypesUpdateInput!
}

input CockpitTypesUpdateUniqueInput {
    data: CockpitTypesUpdateInput!
    where: CockpitTypesWhereUniqueInput!
}

input CockpitTypesUpsertInput {
    create: CockpitTypesCreateInput!
    update: CockpitTypesUpdateInput!
}

input CockpitTypesUpsertUniqueInput {
    where: CockpitTypesWhereUniqueInput!
    create: CockpitTypesCreateInput!
    update: CockpitTypesUpdateInput!
}

input CockpitTypesWhereFilterInput {
    OR: [CockpitTypesWhereFilterInput]
    NOT: [CockpitTypesWhereFilterInput]
    AND: [CockpitTypesWhereFilterInput]
    id: IntFilterInput
    cockpit_id: StringFilterInput
    cockpit_name: StringFilterInput
}

input CockpitTypesWhereUniqueInput {
    id: Int
}

type CodepipelineEvents {
    region: String
    time: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    id: Int!
}

input CodepipelineEventsConnectOrCreateInput {
    where: CodepipelineEventsWhereUniqueInput!
    create: CodepipelineEventsCreateInput!
}

input CodepipelineEventsCreateInput {
    region: String
    time: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
}

input CodepipelineEventsCreateManyInput {
    region: String
    time: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
}

input CodepipelineEventsDeleteManyInput {
    where: CodepipelineEventsWhereFilterInput!
}

input CodepipelineEventsDeleteUniqueInput {
    where: CodepipelineEventsWhereUniqueInput!
}

input CodepipelineEventsFilterRelationsInput {
    every: CodepipelineEventsWhereFilterInput
    none: CodepipelineEventsWhereFilterInput
    some: CodepipelineEventsWhereFilterInput
}

input CodepipelineEventsOrderByInput {
    region: OrderByArg
    time: OrderByArg
    source: OrderByArg
    resource: OrderByArg
    action: OrderByArg
    state: OrderByArg
    costly_resource_avg: OrderByArg
    resource_priority_avg: OrderByArg
    detail_type: OrderByArg
    id: OrderByArg
}

input CodepipelineEventsUpdateInput {
    region: String
    time: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
}

input CodepipelineEventsUpdateManyInput {
    where: CodepipelineEventsWhereFilterInput!
    data: CodepipelineEventsUpdateInput!
}

input CodepipelineEventsUpdateUniqueInput {
    data: CodepipelineEventsUpdateInput!
    where: CodepipelineEventsWhereUniqueInput!
}

input CodepipelineEventsUpsertInput {
    create: CodepipelineEventsCreateInput!
    update: CodepipelineEventsUpdateInput!
}

input CodepipelineEventsUpsertUniqueInput {
    where: CodepipelineEventsWhereUniqueInput!
    create: CodepipelineEventsCreateInput!
    update: CodepipelineEventsUpdateInput!
}

input CodepipelineEventsWhereFilterInput {
    OR: [CodepipelineEventsWhereFilterInput]
    NOT: [CodepipelineEventsWhereFilterInput]
    AND: [CodepipelineEventsWhereFilterInput]
    region: StringFilterInput
    time: StringFilterInput
    source: StringFilterInput
    resource: StringFilterInput
    action: StringFilterInput
    state: StringFilterInput
    costly_resource_avg: IntFilterInput
    resource_priority_avg: IntFilterInput
    detail_type: StringFilterInput
    id: IntFilterInput
}

input CodepipelineEventsWhereUniqueInput {
    id: Int
}

type DevopsCostlyResourceAlarm {
    id: Int!
    alarm_name: String
    cost: String
    alarm_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceAlarmConnectOrCreateInput {
    where: DevopsCostlyResourceAlarmWhereUniqueInput!
    create: DevopsCostlyResourceAlarmCreateInput!
}

input DevopsCostlyResourceAlarmCreateInput {
    alarm_name: String
    cost: String
    alarm_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceAlarmCreateManyInput {
    alarm_name: String
    cost: String
    alarm_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceAlarmDeleteManyInput {
    where: DevopsCostlyResourceAlarmWhereFilterInput!
}

input DevopsCostlyResourceAlarmDeleteUniqueInput {
    where: DevopsCostlyResourceAlarmWhereUniqueInput!
}

input DevopsCostlyResourceAlarmFilterRelationsInput {
    every: DevopsCostlyResourceAlarmWhereFilterInput
    none: DevopsCostlyResourceAlarmWhereFilterInput
    some: DevopsCostlyResourceAlarmWhereFilterInput
}

input DevopsCostlyResourceAlarmOrderByInput {
    id: OrderByArg
    alarm_name: OrderByArg
    cost: OrderByArg
    alarm_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsCostlyResourceAlarmUpdateInput {
    alarm_name: String
    cost: String
    alarm_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceAlarmUpdateManyInput {
    where: DevopsCostlyResourceAlarmWhereFilterInput!
    data: DevopsCostlyResourceAlarmUpdateInput!
}

input DevopsCostlyResourceAlarmUpdateUniqueInput {
    data: DevopsCostlyResourceAlarmUpdateInput!
    where: DevopsCostlyResourceAlarmWhereUniqueInput!
}

input DevopsCostlyResourceAlarmUpsertInput {
    create: DevopsCostlyResourceAlarmCreateInput!
    update: DevopsCostlyResourceAlarmUpdateInput!
}

input DevopsCostlyResourceAlarmUpsertUniqueInput {
    where: DevopsCostlyResourceAlarmWhereUniqueInput!
    create: DevopsCostlyResourceAlarmCreateInput!
    update: DevopsCostlyResourceAlarmUpdateInput!
}

input DevopsCostlyResourceAlarmWhereFilterInput {
    OR: [DevopsCostlyResourceAlarmWhereFilterInput]
    NOT: [DevopsCostlyResourceAlarmWhereFilterInput]
    AND: [DevopsCostlyResourceAlarmWhereFilterInput]
    id: IntFilterInput
    alarm_name: StringFilterInput
    cost: StringFilterInput
    alarm_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsCostlyResourceAlarmWhereUniqueInput {
    id: Int
    alarm_name: String
}

type DevopsCostlyResourceCloudtrail {
    id: Int!
    trail_name: String
    trail_value: Int
    trail_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCloudtrailConnectOrCreateInput {
    where: DevopsCostlyResourceCloudtrailWhereUniqueInput!
    create: DevopsCostlyResourceCloudtrailCreateInput!
}

input DevopsCostlyResourceCloudtrailCreateInput {
    trail_name: String
    trail_value: Int
    trail_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCloudtrailCreateManyInput {
    trail_name: String
    trail_value: Int
    trail_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCloudtrailDeleteManyInput {
    where: DevopsCostlyResourceCloudtrailWhereFilterInput!
}

input DevopsCostlyResourceCloudtrailDeleteUniqueInput {
    where: DevopsCostlyResourceCloudtrailWhereUniqueInput!
}

input DevopsCostlyResourceCloudtrailFilterRelationsInput {
    every: DevopsCostlyResourceCloudtrailWhereFilterInput
    none: DevopsCostlyResourceCloudtrailWhereFilterInput
    some: DevopsCostlyResourceCloudtrailWhereFilterInput
}

input DevopsCostlyResourceCloudtrailOrderByInput {
    id: OrderByArg
    trail_name: OrderByArg
    trail_value: OrderByArg
    trail_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsCostlyResourceCloudtrailUpdateInput {
    trail_name: String
    trail_value: Int
    trail_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCloudtrailUpdateManyInput {
    where: DevopsCostlyResourceCloudtrailWhereFilterInput!
    data: DevopsCostlyResourceCloudtrailUpdateInput!
}

input DevopsCostlyResourceCloudtrailUpdateUniqueInput {
    data: DevopsCostlyResourceCloudtrailUpdateInput!
    where: DevopsCostlyResourceCloudtrailWhereUniqueInput!
}

input DevopsCostlyResourceCloudtrailUpsertInput {
    create: DevopsCostlyResourceCloudtrailCreateInput!
    update: DevopsCostlyResourceCloudtrailUpdateInput!
}

input DevopsCostlyResourceCloudtrailUpsertUniqueInput {
    where: DevopsCostlyResourceCloudtrailWhereUniqueInput!
    create: DevopsCostlyResourceCloudtrailCreateInput!
    update: DevopsCostlyResourceCloudtrailUpdateInput!
}

input DevopsCostlyResourceCloudtrailWhereFilterInput {
    OR: [DevopsCostlyResourceCloudtrailWhereFilterInput]
    NOT: [DevopsCostlyResourceCloudtrailWhereFilterInput]
    AND: [DevopsCostlyResourceCloudtrailWhereFilterInput]
    id: IntFilterInput
    trail_name: StringFilterInput
    trail_value: IntFilterInput
    trail_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsCostlyResourceCloudtrailWhereUniqueInput {
    id: Int
    trail_name: String
}

type DevopsCostlyResourceCodebuild {
    id: Int!
    project_name: String
    failed_count: Int
    build_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCodebuildConnectOrCreateInput {
    where: DevopsCostlyResourceCodebuildWhereUniqueInput!
    create: DevopsCostlyResourceCodebuildCreateInput!
}

input DevopsCostlyResourceCodebuildCreateInput {
    project_name: String
    failed_count: Int
    build_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCodebuildCreateManyInput {
    project_name: String
    failed_count: Int
    build_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCodebuildDeleteManyInput {
    where: DevopsCostlyResourceCodebuildWhereFilterInput!
}

input DevopsCostlyResourceCodebuildDeleteUniqueInput {
    where: DevopsCostlyResourceCodebuildWhereUniqueInput!
}

input DevopsCostlyResourceCodebuildFilterRelationsInput {
    every: DevopsCostlyResourceCodebuildWhereFilterInput
    none: DevopsCostlyResourceCodebuildWhereFilterInput
    some: DevopsCostlyResourceCodebuildWhereFilterInput
}

input DevopsCostlyResourceCodebuildOrderByInput {
    id: OrderByArg
    project_name: OrderByArg
    failed_count: OrderByArg
    build_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsCostlyResourceCodebuildUpdateInput {
    project_name: String
    failed_count: Int
    build_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCodebuildUpdateManyInput {
    where: DevopsCostlyResourceCodebuildWhereFilterInput!
    data: DevopsCostlyResourceCodebuildUpdateInput!
}

input DevopsCostlyResourceCodebuildUpdateUniqueInput {
    data: DevopsCostlyResourceCodebuildUpdateInput!
    where: DevopsCostlyResourceCodebuildWhereUniqueInput!
}

input DevopsCostlyResourceCodebuildUpsertInput {
    create: DevopsCostlyResourceCodebuildCreateInput!
    update: DevopsCostlyResourceCodebuildUpdateInput!
}

input DevopsCostlyResourceCodebuildUpsertUniqueInput {
    where: DevopsCostlyResourceCodebuildWhereUniqueInput!
    create: DevopsCostlyResourceCodebuildCreateInput!
    update: DevopsCostlyResourceCodebuildUpdateInput!
}

input DevopsCostlyResourceCodebuildWhereFilterInput {
    OR: [DevopsCostlyResourceCodebuildWhereFilterInput]
    NOT: [DevopsCostlyResourceCodebuildWhereFilterInput]
    AND: [DevopsCostlyResourceCodebuildWhereFilterInput]
    id: IntFilterInput
    project_name: StringFilterInput
    failed_count: IntFilterInput
    build_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsCostlyResourceCodebuildWhereUniqueInput {
    id: Int
    project_name: String
}

type DevopsCostlyResourceCodecommit {
    id: Int!
    repository_id: String
    repository_name: String
    pull_requests: Int
    pull_request_events: Int
    content_length: Int
    priority: String
}

input DevopsCostlyResourceCodecommitConnectOrCreateInput {
    where: DevopsCostlyResourceCodecommitWhereUniqueInput!
    create: DevopsCostlyResourceCodecommitCreateInput!
}

input DevopsCostlyResourceCodecommitCreateInput {
    repository_id: String
    repository_name: String
    pull_requests: Int
    pull_request_events: Int
    content_length: Int
    priority: String
}

input DevopsCostlyResourceCodecommitCreateManyInput {
    repository_id: String
    repository_name: String
    pull_requests: Int
    pull_request_events: Int
    content_length: Int
    priority: String
}

input DevopsCostlyResourceCodecommitDeleteManyInput {
    where: DevopsCostlyResourceCodecommitWhereFilterInput!
}

input DevopsCostlyResourceCodecommitDeleteUniqueInput {
    where: DevopsCostlyResourceCodecommitWhereUniqueInput!
}

input DevopsCostlyResourceCodecommitFilterRelationsInput {
    every: DevopsCostlyResourceCodecommitWhereFilterInput
    none: DevopsCostlyResourceCodecommitWhereFilterInput
    some: DevopsCostlyResourceCodecommitWhereFilterInput
}

input DevopsCostlyResourceCodecommitOrderByInput {
    id: OrderByArg
    repository_id: OrderByArg
    repository_name: OrderByArg
    pull_requests: OrderByArg
    pull_request_events: OrderByArg
    content_length: OrderByArg
    priority: OrderByArg
}

input DevopsCostlyResourceCodecommitUpdateInput {
    repository_id: String
    repository_name: String
    pull_requests: Int
    pull_request_events: Int
    content_length: Int
    priority: String
}

input DevopsCostlyResourceCodecommitUpdateManyInput {
    where: DevopsCostlyResourceCodecommitWhereFilterInput!
    data: DevopsCostlyResourceCodecommitUpdateInput!
}

input DevopsCostlyResourceCodecommitUpdateUniqueInput {
    data: DevopsCostlyResourceCodecommitUpdateInput!
    where: DevopsCostlyResourceCodecommitWhereUniqueInput!
}

input DevopsCostlyResourceCodecommitUpsertInput {
    create: DevopsCostlyResourceCodecommitCreateInput!
    update: DevopsCostlyResourceCodecommitUpdateInput!
}

input DevopsCostlyResourceCodecommitUpsertUniqueInput {
    where: DevopsCostlyResourceCodecommitWhereUniqueInput!
    create: DevopsCostlyResourceCodecommitCreateInput!
    update: DevopsCostlyResourceCodecommitUpdateInput!
}

input DevopsCostlyResourceCodecommitWhereFilterInput {
    OR: [DevopsCostlyResourceCodecommitWhereFilterInput]
    NOT: [DevopsCostlyResourceCodecommitWhereFilterInput]
    AND: [DevopsCostlyResourceCodecommitWhereFilterInput]
    id: IntFilterInput
    repository_id: StringFilterInput
    repository_name: StringFilterInput
    pull_requests: IntFilterInput
    pull_request_events: IntFilterInput
    content_length: IntFilterInput
    priority: StringFilterInput
}

input DevopsCostlyResourceCodecommitWhereUniqueInput {
    id: Int
}

type DevopsCostlyResourceCodepipeline {
    id: Int!
    pipeline_name: String
    count: Int
    pipe_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCodepipelineConnectOrCreateInput {
    where: DevopsCostlyResourceCodepipelineWhereUniqueInput!
    create: DevopsCostlyResourceCodepipelineCreateInput!
}

input DevopsCostlyResourceCodepipelineCreateInput {
    pipeline_name: String
    count: Int
    pipe_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCodepipelineCreateManyInput {
    pipeline_name: String
    count: Int
    pipe_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCodepipelineDeleteManyInput {
    where: DevopsCostlyResourceCodepipelineWhereFilterInput!
}

input DevopsCostlyResourceCodepipelineDeleteUniqueInput {
    where: DevopsCostlyResourceCodepipelineWhereUniqueInput!
}

input DevopsCostlyResourceCodepipelineFilterRelationsInput {
    every: DevopsCostlyResourceCodepipelineWhereFilterInput
    none: DevopsCostlyResourceCodepipelineWhereFilterInput
    some: DevopsCostlyResourceCodepipelineWhereFilterInput
}

input DevopsCostlyResourceCodepipelineOrderByInput {
    id: OrderByArg
    pipeline_name: OrderByArg
    count: OrderByArg
    pipe_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsCostlyResourceCodepipelineUpdateInput {
    pipeline_name: String
    count: Int
    pipe_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceCodepipelineUpdateManyInput {
    where: DevopsCostlyResourceCodepipelineWhereFilterInput!
    data: DevopsCostlyResourceCodepipelineUpdateInput!
}

input DevopsCostlyResourceCodepipelineUpdateUniqueInput {
    data: DevopsCostlyResourceCodepipelineUpdateInput!
    where: DevopsCostlyResourceCodepipelineWhereUniqueInput!
}

input DevopsCostlyResourceCodepipelineUpsertInput {
    create: DevopsCostlyResourceCodepipelineCreateInput!
    update: DevopsCostlyResourceCodepipelineUpdateInput!
}

input DevopsCostlyResourceCodepipelineUpsertUniqueInput {
    where: DevopsCostlyResourceCodepipelineWhereUniqueInput!
    create: DevopsCostlyResourceCodepipelineCreateInput!
    update: DevopsCostlyResourceCodepipelineUpdateInput!
}

input DevopsCostlyResourceCodepipelineWhereFilterInput {
    OR: [DevopsCostlyResourceCodepipelineWhereFilterInput]
    NOT: [DevopsCostlyResourceCodepipelineWhereFilterInput]
    AND: [DevopsCostlyResourceCodepipelineWhereFilterInput]
    id: IntFilterInput
    pipeline_name: StringFilterInput
    count: IntFilterInput
    pipe_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsCostlyResourceCodepipelineWhereUniqueInput {
    id: Int
    pipeline_name: String
}

type DevopsCostlyResourceEcsService {
    id: Int!
    cluster_name: String
    service_name: String
    total_time_min: Float
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceEcsServiceConnectOrCreateInput {
    where: DevopsCostlyResourceEcsServiceWhereUniqueInput!
    create: DevopsCostlyResourceEcsServiceCreateInput!
}

input DevopsCostlyResourceEcsServiceCreateInput {
    cluster_name: String
    service_name: String
    total_time_min: Float
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceEcsServiceCreateManyInput {
    cluster_name: String
    service_name: String
    total_time_min: Float
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceEcsServiceDeleteManyInput {
    where: DevopsCostlyResourceEcsServiceWhereFilterInput!
}

input DevopsCostlyResourceEcsServiceDeleteUniqueInput {
    where: DevopsCostlyResourceEcsServiceWhereUniqueInput!
}

input DevopsCostlyResourceEcsServiceFilterRelationsInput {
    every: DevopsCostlyResourceEcsServiceWhereFilterInput
    none: DevopsCostlyResourceEcsServiceWhereFilterInput
    some: DevopsCostlyResourceEcsServiceWhereFilterInput
}

input DevopsCostlyResourceEcsServiceOrderByInput {
    id: OrderByArg
    cluster_name: OrderByArg
    service_name: OrderByArg
    total_time_min: OrderByArg
    priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsCostlyResourceEcsServiceUpdateInput {
    cluster_name: String
    service_name: String
    total_time_min: Float
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceEcsServiceUpdateManyInput {
    where: DevopsCostlyResourceEcsServiceWhereFilterInput!
    data: DevopsCostlyResourceEcsServiceUpdateInput!
}

input DevopsCostlyResourceEcsServiceUpdateUniqueInput {
    data: DevopsCostlyResourceEcsServiceUpdateInput!
    where: DevopsCostlyResourceEcsServiceWhereUniqueInput!
}

input DevopsCostlyResourceEcsServiceUpsertInput {
    create: DevopsCostlyResourceEcsServiceCreateInput!
    update: DevopsCostlyResourceEcsServiceUpdateInput!
}

input DevopsCostlyResourceEcsServiceUpsertUniqueInput {
    where: DevopsCostlyResourceEcsServiceWhereUniqueInput!
    create: DevopsCostlyResourceEcsServiceCreateInput!
    update: DevopsCostlyResourceEcsServiceUpdateInput!
}

input DevopsCostlyResourceEcsServiceWhereFilterInput {
    OR: [DevopsCostlyResourceEcsServiceWhereFilterInput]
    NOT: [DevopsCostlyResourceEcsServiceWhereFilterInput]
    AND: [DevopsCostlyResourceEcsServiceWhereFilterInput]
    id: IntFilterInput
    cluster_name: StringFilterInput
    service_name: StringFilterInput
    total_time_min: FloatFilterInput
    priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsCostlyResourceEcsServiceWhereUniqueInput {
    id: Int
}

type DevopsCostlyResourceEcsTask {
    id: Int!
    cluster_name: String
    service_name: String
    task_name: String
    container_count: Int
    start_time: AWSDateTime
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceEcsTaskConnectOrCreateInput {
    where: DevopsCostlyResourceEcsTaskWhereUniqueInput!
    create: DevopsCostlyResourceEcsTaskCreateInput!
}

input DevopsCostlyResourceEcsTaskCreateInput {
    cluster_name: String
    service_name: String
    task_name: String
    container_count: Int
    start_time: AWSDateTime
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceEcsTaskCreateManyInput {
    cluster_name: String
    service_name: String
    task_name: String
    container_count: Int
    start_time: AWSDateTime
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceEcsTaskDeleteManyInput {
    where: DevopsCostlyResourceEcsTaskWhereFilterInput!
}

input DevopsCostlyResourceEcsTaskDeleteUniqueInput {
    where: DevopsCostlyResourceEcsTaskWhereUniqueInput!
}

input DevopsCostlyResourceEcsTaskFilterRelationsInput {
    every: DevopsCostlyResourceEcsTaskWhereFilterInput
    none: DevopsCostlyResourceEcsTaskWhereFilterInput
    some: DevopsCostlyResourceEcsTaskWhereFilterInput
}

input DevopsCostlyResourceEcsTaskOrderByInput {
    id: OrderByArg
    cluster_name: OrderByArg
    service_name: OrderByArg
    task_name: OrderByArg
    container_count: OrderByArg
    start_time: OrderByArg
    priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsCostlyResourceEcsTaskUpdateInput {
    cluster_name: String
    service_name: String
    task_name: String
    container_count: Int
    start_time: AWSDateTime
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceEcsTaskUpdateManyInput {
    where: DevopsCostlyResourceEcsTaskWhereFilterInput!
    data: DevopsCostlyResourceEcsTaskUpdateInput!
}

input DevopsCostlyResourceEcsTaskUpdateUniqueInput {
    data: DevopsCostlyResourceEcsTaskUpdateInput!
    where: DevopsCostlyResourceEcsTaskWhereUniqueInput!
}

input DevopsCostlyResourceEcsTaskUpsertInput {
    create: DevopsCostlyResourceEcsTaskCreateInput!
    update: DevopsCostlyResourceEcsTaskUpdateInput!
}

input DevopsCostlyResourceEcsTaskUpsertUniqueInput {
    where: DevopsCostlyResourceEcsTaskWhereUniqueInput!
    create: DevopsCostlyResourceEcsTaskCreateInput!
    update: DevopsCostlyResourceEcsTaskUpdateInput!
}

input DevopsCostlyResourceEcsTaskWhereFilterInput {
    OR: [DevopsCostlyResourceEcsTaskWhereFilterInput]
    NOT: [DevopsCostlyResourceEcsTaskWhereFilterInput]
    AND: [DevopsCostlyResourceEcsTaskWhereFilterInput]
    id: IntFilterInput
    cluster_name: StringFilterInput
    service_name: StringFilterInput
    task_name: StringFilterInput
    container_count: IntFilterInput
    start_time: AWSDateTimeFilterInput
    priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsCostlyResourceEcsTaskWhereUniqueInput {
    id: Int
}

type DevopsCostlyResourceLambda {
    id: Int!
    function_name: String
    error_count: Int
    function_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceLambdaConnectOrCreateInput {
    where: DevopsCostlyResourceLambdaWhereUniqueInput!
    create: DevopsCostlyResourceLambdaCreateInput!
}

input DevopsCostlyResourceLambdaCreateInput {
    function_name: String
    error_count: Int
    function_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceLambdaCreateManyInput {
    function_name: String
    error_count: Int
    function_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceLambdaDeleteManyInput {
    where: DevopsCostlyResourceLambdaWhereFilterInput!
}

input DevopsCostlyResourceLambdaDeleteUniqueInput {
    where: DevopsCostlyResourceLambdaWhereUniqueInput!
}

input DevopsCostlyResourceLambdaFilterRelationsInput {
    every: DevopsCostlyResourceLambdaWhereFilterInput
    none: DevopsCostlyResourceLambdaWhereFilterInput
    some: DevopsCostlyResourceLambdaWhereFilterInput
}

input DevopsCostlyResourceLambdaOrderByInput {
    id: OrderByArg
    function_name: OrderByArg
    error_count: OrderByArg
    function_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsCostlyResourceLambdaUpdateInput {
    function_name: String
    error_count: Int
    function_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsCostlyResourceLambdaUpdateManyInput {
    where: DevopsCostlyResourceLambdaWhereFilterInput!
    data: DevopsCostlyResourceLambdaUpdateInput!
}

input DevopsCostlyResourceLambdaUpdateUniqueInput {
    data: DevopsCostlyResourceLambdaUpdateInput!
    where: DevopsCostlyResourceLambdaWhereUniqueInput!
}

input DevopsCostlyResourceLambdaUpsertInput {
    create: DevopsCostlyResourceLambdaCreateInput!
    update: DevopsCostlyResourceLambdaUpdateInput!
}

input DevopsCostlyResourceLambdaUpsertUniqueInput {
    where: DevopsCostlyResourceLambdaWhereUniqueInput!
    create: DevopsCostlyResourceLambdaCreateInput!
    update: DevopsCostlyResourceLambdaUpdateInput!
}

input DevopsCostlyResourceLambdaWhereFilterInput {
    OR: [DevopsCostlyResourceLambdaWhereFilterInput]
    NOT: [DevopsCostlyResourceLambdaWhereFilterInput]
    AND: [DevopsCostlyResourceLambdaWhereFilterInput]
    id: IntFilterInput
    function_name: StringFilterInput
    error_count: IntFilterInput
    function_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsCostlyResourceLambdaWhereUniqueInput {
    id: Int
    function_name: String
}

type DevopsCostlyResourceSsm {
    id: Int!
    resource_id: String
    resource_type: String
    followed_action_type: String
    status: String
    costly_priority: String
}

input DevopsCostlyResourceSsmConnectOrCreateInput {
    where: DevopsCostlyResourceSsmWhereUniqueInput!
    create: DevopsCostlyResourceSsmCreateInput!
}

input DevopsCostlyResourceSsmCreateInput {
    resource_id: String
    resource_type: String
    followed_action_type: String
    status: String
    costly_priority: String
}

input DevopsCostlyResourceSsmCreateManyInput {
    resource_id: String
    resource_type: String
    followed_action_type: String
    status: String
    costly_priority: String
}

input DevopsCostlyResourceSsmDeleteManyInput {
    where: DevopsCostlyResourceSsmWhereFilterInput!
}

input DevopsCostlyResourceSsmDeleteUniqueInput {
    where: DevopsCostlyResourceSsmWhereUniqueInput!
}

input DevopsCostlyResourceSsmFilterRelationsInput {
    every: DevopsCostlyResourceSsmWhereFilterInput
    none: DevopsCostlyResourceSsmWhereFilterInput
    some: DevopsCostlyResourceSsmWhereFilterInput
}

input DevopsCostlyResourceSsmOrderByInput {
    id: OrderByArg
    resource_id: OrderByArg
    resource_type: OrderByArg
    followed_action_type: OrderByArg
    status: OrderByArg
    costly_priority: OrderByArg
}

input DevopsCostlyResourceSsmUpdateInput {
    resource_id: String
    resource_type: String
    followed_action_type: String
    status: String
    costly_priority: String
}

input DevopsCostlyResourceSsmUpdateManyInput {
    where: DevopsCostlyResourceSsmWhereFilterInput!
    data: DevopsCostlyResourceSsmUpdateInput!
}

input DevopsCostlyResourceSsmUpdateUniqueInput {
    data: DevopsCostlyResourceSsmUpdateInput!
    where: DevopsCostlyResourceSsmWhereUniqueInput!
}

input DevopsCostlyResourceSsmUpsertInput {
    create: DevopsCostlyResourceSsmCreateInput!
    update: DevopsCostlyResourceSsmUpdateInput!
}

input DevopsCostlyResourceSsmUpsertUniqueInput {
    where: DevopsCostlyResourceSsmWhereUniqueInput!
    create: DevopsCostlyResourceSsmCreateInput!
    update: DevopsCostlyResourceSsmUpdateInput!
}

input DevopsCostlyResourceSsmWhereFilterInput {
    OR: [DevopsCostlyResourceSsmWhereFilterInput]
    NOT: [DevopsCostlyResourceSsmWhereFilterInput]
    AND: [DevopsCostlyResourceSsmWhereFilterInput]
    id: IntFilterInput
    resource_id: StringFilterInput
    resource_type: StringFilterInput
    followed_action_type: StringFilterInput
    status: StringFilterInput
    costly_priority: StringFilterInput
}

input DevopsCostlyResourceSsmWhereUniqueInput {
    id: Int
}

type DevopsDefaultServicePriority {
    id: Int!
    resource_type: String
    count: Int
    service_priority: Int
}

input DevopsDefaultServicePriorityConnectOrCreateInput {
    where: DevopsDefaultServicePriorityWhereUniqueInput!
    create: DevopsDefaultServicePriorityCreateInput!
}

input DevopsDefaultServicePriorityCreateInput {
    resource_type: String
    count: Int
    service_priority: Int
}

input DevopsDefaultServicePriorityCreateManyInput {
    resource_type: String
    count: Int
    service_priority: Int
}

input DevopsDefaultServicePriorityDeleteManyInput {
    where: DevopsDefaultServicePriorityWhereFilterInput!
}

input DevopsDefaultServicePriorityDeleteUniqueInput {
    where: DevopsDefaultServicePriorityWhereUniqueInput!
}

input DevopsDefaultServicePriorityFilterRelationsInput {
    every: DevopsDefaultServicePriorityWhereFilterInput
    none: DevopsDefaultServicePriorityWhereFilterInput
    some: DevopsDefaultServicePriorityWhereFilterInput
}

input DevopsDefaultServicePriorityOrderByInput {
    id: OrderByArg
    resource_type: OrderByArg
    count: OrderByArg
    service_priority: OrderByArg
}

input DevopsDefaultServicePriorityUpdateInput {
    resource_type: String
    count: Int
    service_priority: Int
}

input DevopsDefaultServicePriorityUpdateManyInput {
    where: DevopsDefaultServicePriorityWhereFilterInput!
    data: DevopsDefaultServicePriorityUpdateInput!
}

input DevopsDefaultServicePriorityUpdateUniqueInput {
    data: DevopsDefaultServicePriorityUpdateInput!
    where: DevopsDefaultServicePriorityWhereUniqueInput!
}

input DevopsDefaultServicePriorityUpsertInput {
    create: DevopsDefaultServicePriorityCreateInput!
    update: DevopsDefaultServicePriorityUpdateInput!
}

input DevopsDefaultServicePriorityUpsertUniqueInput {
    where: DevopsDefaultServicePriorityWhereUniqueInput!
    create: DevopsDefaultServicePriorityCreateInput!
    update: DevopsDefaultServicePriorityUpdateInput!
}

input DevopsDefaultServicePriorityWhereFilterInput {
    OR: [DevopsDefaultServicePriorityWhereFilterInput]
    NOT: [DevopsDefaultServicePriorityWhereFilterInput]
    AND: [DevopsDefaultServicePriorityWhereFilterInput]
    id: IntFilterInput
    resource_type: StringFilterInput
    count: IntFilterInput
    service_priority: IntFilterInput
}

input DevopsDefaultServicePriorityWhereUniqueInput {
    id: Int
    resource_type: String
}

type DevopsRegionPriority {
    id: Int!
    region: String
    resource_count: Int
    region_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsRegionPriorityConnectOrCreateInput {
    where: DevopsRegionPriorityWhereUniqueInput!
    create: DevopsRegionPriorityCreateInput!
}

input DevopsRegionPriorityCreateInput {
    region: String
    resource_count: Int
    region_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsRegionPriorityCreateManyInput {
    region: String
    resource_count: Int
    region_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsRegionPriorityDeleteManyInput {
    where: DevopsRegionPriorityWhereFilterInput!
}

input DevopsRegionPriorityDeleteUniqueInput {
    where: DevopsRegionPriorityWhereUniqueInput!
}

input DevopsRegionPriorityFilterRelationsInput {
    every: DevopsRegionPriorityWhereFilterInput
    none: DevopsRegionPriorityWhereFilterInput
    some: DevopsRegionPriorityWhereFilterInput
}

input DevopsRegionPriorityOrderByInput {
    id: OrderByArg
    region: OrderByArg
    resource_count: OrderByArg
    region_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsRegionPriorityUpdateInput {
    region: String
    resource_count: Int
    region_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsRegionPriorityUpdateManyInput {
    where: DevopsRegionPriorityWhereFilterInput!
    data: DevopsRegionPriorityUpdateInput!
}

input DevopsRegionPriorityUpdateUniqueInput {
    data: DevopsRegionPriorityUpdateInput!
    where: DevopsRegionPriorityWhereUniqueInput!
}

input DevopsRegionPriorityUpsertInput {
    create: DevopsRegionPriorityCreateInput!
    update: DevopsRegionPriorityUpdateInput!
}

input DevopsRegionPriorityUpsertUniqueInput {
    where: DevopsRegionPriorityWhereUniqueInput!
    create: DevopsRegionPriorityCreateInput!
    update: DevopsRegionPriorityUpdateInput!
}

input DevopsRegionPriorityWhereFilterInput {
    OR: [DevopsRegionPriorityWhereFilterInput]
    NOT: [DevopsRegionPriorityWhereFilterInput]
    AND: [DevopsRegionPriorityWhereFilterInput]
    id: IntFilterInput
    region: StringFilterInput
    resource_count: IntFilterInput
    region_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsRegionPriorityWhereUniqueInput {
    id: Int
    region: String
}

type DevopsResourcePriorityAlarm {
    id: Int!
    alarm_name: String
    priority_value: Int
    alarm_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityAlarmConnectOrCreateInput {
    where: DevopsResourcePriorityAlarmWhereUniqueInput!
    create: DevopsResourcePriorityAlarmCreateInput!
}

input DevopsResourcePriorityAlarmCreateInput {
    alarm_name: String
    priority_value: Int
    alarm_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityAlarmCreateManyInput {
    alarm_name: String
    priority_value: Int
    alarm_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityAlarmDeleteManyInput {
    where: DevopsResourcePriorityAlarmWhereFilterInput!
}

input DevopsResourcePriorityAlarmDeleteUniqueInput {
    where: DevopsResourcePriorityAlarmWhereUniqueInput!
}

input DevopsResourcePriorityAlarmFilterRelationsInput {
    every: DevopsResourcePriorityAlarmWhereFilterInput
    none: DevopsResourcePriorityAlarmWhereFilterInput
    some: DevopsResourcePriorityAlarmWhereFilterInput
}

input DevopsResourcePriorityAlarmOrderByInput {
    id: OrderByArg
    alarm_name: OrderByArg
    priority_value: OrderByArg
    alarm_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsResourcePriorityAlarmUpdateInput {
    alarm_name: String
    priority_value: Int
    alarm_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityAlarmUpdateManyInput {
    where: DevopsResourcePriorityAlarmWhereFilterInput!
    data: DevopsResourcePriorityAlarmUpdateInput!
}

input DevopsResourcePriorityAlarmUpdateUniqueInput {
    data: DevopsResourcePriorityAlarmUpdateInput!
    where: DevopsResourcePriorityAlarmWhereUniqueInput!
}

input DevopsResourcePriorityAlarmUpsertInput {
    create: DevopsResourcePriorityAlarmCreateInput!
    update: DevopsResourcePriorityAlarmUpdateInput!
}

input DevopsResourcePriorityAlarmUpsertUniqueInput {
    where: DevopsResourcePriorityAlarmWhereUniqueInput!
    create: DevopsResourcePriorityAlarmCreateInput!
    update: DevopsResourcePriorityAlarmUpdateInput!
}

input DevopsResourcePriorityAlarmWhereFilterInput {
    OR: [DevopsResourcePriorityAlarmWhereFilterInput]
    NOT: [DevopsResourcePriorityAlarmWhereFilterInput]
    AND: [DevopsResourcePriorityAlarmWhereFilterInput]
    id: IntFilterInput
    alarm_name: StringFilterInput
    priority_value: IntFilterInput
    alarm_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsResourcePriorityAlarmWhereUniqueInput {
    id: Int
    alarm_name: String
}

type DevopsResourcePriorityCloudformation {
    id: Int!
    stack_name: String
    priority_value: Int
    stack_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCloudformationConnectOrCreateInput {
    where: DevopsResourcePriorityCloudformationWhereUniqueInput!
    create: DevopsResourcePriorityCloudformationCreateInput!
}

input DevopsResourcePriorityCloudformationCreateInput {
    stack_name: String
    priority_value: Int
    stack_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCloudformationCreateManyInput {
    stack_name: String
    priority_value: Int
    stack_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCloudformationDeleteManyInput {
    where: DevopsResourcePriorityCloudformationWhereFilterInput!
}

input DevopsResourcePriorityCloudformationDeleteUniqueInput {
    where: DevopsResourcePriorityCloudformationWhereUniqueInput!
}

input DevopsResourcePriorityCloudformationFilterRelationsInput {
    every: DevopsResourcePriorityCloudformationWhereFilterInput
    none: DevopsResourcePriorityCloudformationWhereFilterInput
    some: DevopsResourcePriorityCloudformationWhereFilterInput
}

input DevopsResourcePriorityCloudformationOrderByInput {
    id: OrderByArg
    stack_name: OrderByArg
    priority_value: OrderByArg
    stack_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsResourcePriorityCloudformationUpdateInput {
    stack_name: String
    priority_value: Int
    stack_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCloudformationUpdateManyInput {
    where: DevopsResourcePriorityCloudformationWhereFilterInput!
    data: DevopsResourcePriorityCloudformationUpdateInput!
}

input DevopsResourcePriorityCloudformationUpdateUniqueInput {
    data: DevopsResourcePriorityCloudformationUpdateInput!
    where: DevopsResourcePriorityCloudformationWhereUniqueInput!
}

input DevopsResourcePriorityCloudformationUpsertInput {
    create: DevopsResourcePriorityCloudformationCreateInput!
    update: DevopsResourcePriorityCloudformationUpdateInput!
}

input DevopsResourcePriorityCloudformationUpsertUniqueInput {
    where: DevopsResourcePriorityCloudformationWhereUniqueInput!
    create: DevopsResourcePriorityCloudformationCreateInput!
    update: DevopsResourcePriorityCloudformationUpdateInput!
}

input DevopsResourcePriorityCloudformationWhereFilterInput {
    OR: [DevopsResourcePriorityCloudformationWhereFilterInput]
    NOT: [DevopsResourcePriorityCloudformationWhereFilterInput]
    AND: [DevopsResourcePriorityCloudformationWhereFilterInput]
    id: IntFilterInput
    stack_name: StringFilterInput
    priority_value: IntFilterInput
    stack_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsResourcePriorityCloudformationWhereUniqueInput {
    id: Int
    stack_name: String
}

type DevopsResourcePriorityCloudtrail {
    id: Int!
    trail_name: String
    trail_value: Int
    trail_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCloudtrailConnectOrCreateInput {
    where: DevopsResourcePriorityCloudtrailWhereUniqueInput!
    create: DevopsResourcePriorityCloudtrailCreateInput!
}

input DevopsResourcePriorityCloudtrailCreateInput {
    trail_name: String
    trail_value: Int
    trail_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCloudtrailCreateManyInput {
    trail_name: String
    trail_value: Int
    trail_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCloudtrailDeleteManyInput {
    where: DevopsResourcePriorityCloudtrailWhereFilterInput!
}

input DevopsResourcePriorityCloudtrailDeleteUniqueInput {
    where: DevopsResourcePriorityCloudtrailWhereUniqueInput!
}

input DevopsResourcePriorityCloudtrailFilterRelationsInput {
    every: DevopsResourcePriorityCloudtrailWhereFilterInput
    none: DevopsResourcePriorityCloudtrailWhereFilterInput
    some: DevopsResourcePriorityCloudtrailWhereFilterInput
}

input DevopsResourcePriorityCloudtrailOrderByInput {
    id: OrderByArg
    trail_name: OrderByArg
    trail_value: OrderByArg
    trail_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsResourcePriorityCloudtrailUpdateInput {
    trail_name: String
    trail_value: Int
    trail_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCloudtrailUpdateManyInput {
    where: DevopsResourcePriorityCloudtrailWhereFilterInput!
    data: DevopsResourcePriorityCloudtrailUpdateInput!
}

input DevopsResourcePriorityCloudtrailUpdateUniqueInput {
    data: DevopsResourcePriorityCloudtrailUpdateInput!
    where: DevopsResourcePriorityCloudtrailWhereUniqueInput!
}

input DevopsResourcePriorityCloudtrailUpsertInput {
    create: DevopsResourcePriorityCloudtrailCreateInput!
    update: DevopsResourcePriorityCloudtrailUpdateInput!
}

input DevopsResourcePriorityCloudtrailUpsertUniqueInput {
    where: DevopsResourcePriorityCloudtrailWhereUniqueInput!
    create: DevopsResourcePriorityCloudtrailCreateInput!
    update: DevopsResourcePriorityCloudtrailUpdateInput!
}

input DevopsResourcePriorityCloudtrailWhereFilterInput {
    OR: [DevopsResourcePriorityCloudtrailWhereFilterInput]
    NOT: [DevopsResourcePriorityCloudtrailWhereFilterInput]
    AND: [DevopsResourcePriorityCloudtrailWhereFilterInput]
    id: IntFilterInput
    trail_name: StringFilterInput
    trail_value: IntFilterInput
    trail_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsResourcePriorityCloudtrailWhereUniqueInput {
    id: Int
    trail_name: String
}

type DevopsResourcePriorityCodebuild {
    id: Int!
    project_name: String
    succeed_count: Int
    build_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCodebuildConnectOrCreateInput {
    where: DevopsResourcePriorityCodebuildWhereUniqueInput!
    create: DevopsResourcePriorityCodebuildCreateInput!
}

input DevopsResourcePriorityCodebuildCreateInput {
    project_name: String
    succeed_count: Int
    build_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCodebuildCreateManyInput {
    project_name: String
    succeed_count: Int
    build_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCodebuildDeleteManyInput {
    where: DevopsResourcePriorityCodebuildWhereFilterInput!
}

input DevopsResourcePriorityCodebuildDeleteUniqueInput {
    where: DevopsResourcePriorityCodebuildWhereUniqueInput!
}

input DevopsResourcePriorityCodebuildFilterRelationsInput {
    every: DevopsResourcePriorityCodebuildWhereFilterInput
    none: DevopsResourcePriorityCodebuildWhereFilterInput
    some: DevopsResourcePriorityCodebuildWhereFilterInput
}

input DevopsResourcePriorityCodebuildOrderByInput {
    id: OrderByArg
    project_name: OrderByArg
    succeed_count: OrderByArg
    build_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsResourcePriorityCodebuildUpdateInput {
    project_name: String
    succeed_count: Int
    build_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCodebuildUpdateManyInput {
    where: DevopsResourcePriorityCodebuildWhereFilterInput!
    data: DevopsResourcePriorityCodebuildUpdateInput!
}

input DevopsResourcePriorityCodebuildUpdateUniqueInput {
    data: DevopsResourcePriorityCodebuildUpdateInput!
    where: DevopsResourcePriorityCodebuildWhereUniqueInput!
}

input DevopsResourcePriorityCodebuildUpsertInput {
    create: DevopsResourcePriorityCodebuildCreateInput!
    update: DevopsResourcePriorityCodebuildUpdateInput!
}

input DevopsResourcePriorityCodebuildUpsertUniqueInput {
    where: DevopsResourcePriorityCodebuildWhereUniqueInput!
    create: DevopsResourcePriorityCodebuildCreateInput!
    update: DevopsResourcePriorityCodebuildUpdateInput!
}

input DevopsResourcePriorityCodebuildWhereFilterInput {
    OR: [DevopsResourcePriorityCodebuildWhereFilterInput]
    NOT: [DevopsResourcePriorityCodebuildWhereFilterInput]
    AND: [DevopsResourcePriorityCodebuildWhereFilterInput]
    id: IntFilterInput
    project_name: StringFilterInput
    succeed_count: IntFilterInput
    build_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsResourcePriorityCodebuildWhereUniqueInput {
    id: Int
    project_name: String
}

type DevopsResourcePriorityCodepipeline {
    id: Int!
    pipeline_name: String
    count: Int
    pipe_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCodepipelineConnectOrCreateInput {
    where: DevopsResourcePriorityCodepipelineWhereUniqueInput!
    create: DevopsResourcePriorityCodepipelineCreateInput!
}

input DevopsResourcePriorityCodepipelineCreateInput {
    pipeline_name: String
    count: Int
    pipe_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCodepipelineCreateManyInput {
    pipeline_name: String
    count: Int
    pipe_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCodepipelineDeleteManyInput {
    where: DevopsResourcePriorityCodepipelineWhereFilterInput!
}

input DevopsResourcePriorityCodepipelineDeleteUniqueInput {
    where: DevopsResourcePriorityCodepipelineWhereUniqueInput!
}

input DevopsResourcePriorityCodepipelineFilterRelationsInput {
    every: DevopsResourcePriorityCodepipelineWhereFilterInput
    none: DevopsResourcePriorityCodepipelineWhereFilterInput
    some: DevopsResourcePriorityCodepipelineWhereFilterInput
}

input DevopsResourcePriorityCodepipelineOrderByInput {
    id: OrderByArg
    pipeline_name: OrderByArg
    count: OrderByArg
    pipe_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsResourcePriorityCodepipelineUpdateInput {
    pipeline_name: String
    count: Int
    pipe_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityCodepipelineUpdateManyInput {
    where: DevopsResourcePriorityCodepipelineWhereFilterInput!
    data: DevopsResourcePriorityCodepipelineUpdateInput!
}

input DevopsResourcePriorityCodepipelineUpdateUniqueInput {
    data: DevopsResourcePriorityCodepipelineUpdateInput!
    where: DevopsResourcePriorityCodepipelineWhereUniqueInput!
}

input DevopsResourcePriorityCodepipelineUpsertInput {
    create: DevopsResourcePriorityCodepipelineCreateInput!
    update: DevopsResourcePriorityCodepipelineUpdateInput!
}

input DevopsResourcePriorityCodepipelineUpsertUniqueInput {
    where: DevopsResourcePriorityCodepipelineWhereUniqueInput!
    create: DevopsResourcePriorityCodepipelineCreateInput!
    update: DevopsResourcePriorityCodepipelineUpdateInput!
}

input DevopsResourcePriorityCodepipelineWhereFilterInput {
    OR: [DevopsResourcePriorityCodepipelineWhereFilterInput]
    NOT: [DevopsResourcePriorityCodepipelineWhereFilterInput]
    AND: [DevopsResourcePriorityCodepipelineWhereFilterInput]
    id: IntFilterInput
    pipeline_name: StringFilterInput
    count: IntFilterInput
    pipe_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsResourcePriorityCodepipelineWhereUniqueInput {
    id: Int
    pipeline_name: String
}

type DevopsResourcePriorityEcsService {
    id: Int!
    cluster_name: String
    service_name: String
    cpu: Float
    memory: Float
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityEcsServiceConnectOrCreateInput {
    where: DevopsResourcePriorityEcsServiceWhereUniqueInput!
    create: DevopsResourcePriorityEcsServiceCreateInput!
}

input DevopsResourcePriorityEcsServiceCreateInput {
    cluster_name: String
    service_name: String
    cpu: Float
    memory: Float
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityEcsServiceCreateManyInput {
    cluster_name: String
    service_name: String
    cpu: Float
    memory: Float
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityEcsServiceDeleteManyInput {
    where: DevopsResourcePriorityEcsServiceWhereFilterInput!
}

input DevopsResourcePriorityEcsServiceDeleteUniqueInput {
    where: DevopsResourcePriorityEcsServiceWhereUniqueInput!
}

input DevopsResourcePriorityEcsServiceFilterRelationsInput {
    every: DevopsResourcePriorityEcsServiceWhereFilterInput
    none: DevopsResourcePriorityEcsServiceWhereFilterInput
    some: DevopsResourcePriorityEcsServiceWhereFilterInput
}

input DevopsResourcePriorityEcsServiceOrderByInput {
    id: OrderByArg
    cluster_name: OrderByArg
    service_name: OrderByArg
    cpu: OrderByArg
    memory: OrderByArg
    priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsResourcePriorityEcsServiceUpdateInput {
    cluster_name: String
    service_name: String
    cpu: Float
    memory: Float
    priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityEcsServiceUpdateManyInput {
    where: DevopsResourcePriorityEcsServiceWhereFilterInput!
    data: DevopsResourcePriorityEcsServiceUpdateInput!
}

input DevopsResourcePriorityEcsServiceUpdateUniqueInput {
    data: DevopsResourcePriorityEcsServiceUpdateInput!
    where: DevopsResourcePriorityEcsServiceWhereUniqueInput!
}

input DevopsResourcePriorityEcsServiceUpsertInput {
    create: DevopsResourcePriorityEcsServiceCreateInput!
    update: DevopsResourcePriorityEcsServiceUpdateInput!
}

input DevopsResourcePriorityEcsServiceUpsertUniqueInput {
    where: DevopsResourcePriorityEcsServiceWhereUniqueInput!
    create: DevopsResourcePriorityEcsServiceCreateInput!
    update: DevopsResourcePriorityEcsServiceUpdateInput!
}

input DevopsResourcePriorityEcsServiceWhereFilterInput {
    OR: [DevopsResourcePriorityEcsServiceWhereFilterInput]
    NOT: [DevopsResourcePriorityEcsServiceWhereFilterInput]
    AND: [DevopsResourcePriorityEcsServiceWhereFilterInput]
    id: IntFilterInput
    cluster_name: StringFilterInput
    service_name: StringFilterInput
    cpu: FloatFilterInput
    memory: FloatFilterInput
    priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsResourcePriorityEcsServiceWhereUniqueInput {
    id: Int
}

type DevopsResourcePriorityLambda {
    id: Int!
    function_name: String
    frequency: Int
    function_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityLambdaConnectOrCreateInput {
    where: DevopsResourcePriorityLambdaWhereUniqueInput!
    create: DevopsResourcePriorityLambdaCreateInput!
}

input DevopsResourcePriorityLambdaCreateInput {
    function_name: String
    frequency: Int
    function_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityLambdaCreateManyInput {
    function_name: String
    frequency: Int
    function_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityLambdaDeleteManyInput {
    where: DevopsResourcePriorityLambdaWhereFilterInput!
}

input DevopsResourcePriorityLambdaDeleteUniqueInput {
    where: DevopsResourcePriorityLambdaWhereUniqueInput!
}

input DevopsResourcePriorityLambdaFilterRelationsInput {
    every: DevopsResourcePriorityLambdaWhereFilterInput
    none: DevopsResourcePriorityLambdaWhereFilterInput
    some: DevopsResourcePriorityLambdaWhereFilterInput
}

input DevopsResourcePriorityLambdaOrderByInput {
    id: OrderByArg
    function_name: OrderByArg
    frequency: OrderByArg
    function_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsResourcePriorityLambdaUpdateInput {
    function_name: String
    frequency: Int
    function_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityLambdaUpdateManyInput {
    where: DevopsResourcePriorityLambdaWhereFilterInput!
    data: DevopsResourcePriorityLambdaUpdateInput!
}

input DevopsResourcePriorityLambdaUpdateUniqueInput {
    data: DevopsResourcePriorityLambdaUpdateInput!
    where: DevopsResourcePriorityLambdaWhereUniqueInput!
}

input DevopsResourcePriorityLambdaUpsertInput {
    create: DevopsResourcePriorityLambdaCreateInput!
    update: DevopsResourcePriorityLambdaUpdateInput!
}

input DevopsResourcePriorityLambdaUpsertUniqueInput {
    where: DevopsResourcePriorityLambdaWhereUniqueInput!
    create: DevopsResourcePriorityLambdaCreateInput!
    update: DevopsResourcePriorityLambdaUpdateInput!
}

input DevopsResourcePriorityLambdaWhereFilterInput {
    OR: [DevopsResourcePriorityLambdaWhereFilterInput]
    NOT: [DevopsResourcePriorityLambdaWhereFilterInput]
    AND: [DevopsResourcePriorityLambdaWhereFilterInput]
    id: IntFilterInput
    function_name: StringFilterInput
    frequency: IntFilterInput
    function_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsResourcePriorityLambdaWhereUniqueInput {
    id: Int
    function_name: String
}

type DevopsResourcePrioritySsm {
    id: Int!
    resource_id: String
    resource_type: String
    compliance_or_doc_type: String
    status: String
    priority: String
}

input DevopsResourcePrioritySsmConnectOrCreateInput {
    where: DevopsResourcePrioritySsmWhereUniqueInput!
    create: DevopsResourcePrioritySsmCreateInput!
}

input DevopsResourcePrioritySsmCreateInput {
    resource_id: String
    resource_type: String
    compliance_or_doc_type: String
    status: String
    priority: String
}

input DevopsResourcePrioritySsmCreateManyInput {
    resource_id: String
    resource_type: String
    compliance_or_doc_type: String
    status: String
    priority: String
}

input DevopsResourcePrioritySsmDeleteManyInput {
    where: DevopsResourcePrioritySsmWhereFilterInput!
}

input DevopsResourcePrioritySsmDeleteUniqueInput {
    where: DevopsResourcePrioritySsmWhereUniqueInput!
}

input DevopsResourcePrioritySsmFilterRelationsInput {
    every: DevopsResourcePrioritySsmWhereFilterInput
    none: DevopsResourcePrioritySsmWhereFilterInput
    some: DevopsResourcePrioritySsmWhereFilterInput
}

input DevopsResourcePrioritySsmOrderByInput {
    id: OrderByArg
    resource_id: OrderByArg
    resource_type: OrderByArg
    compliance_or_doc_type: OrderByArg
    status: OrderByArg
    priority: OrderByArg
}

input DevopsResourcePrioritySsmUpdateInput {
    resource_id: String
    resource_type: String
    compliance_or_doc_type: String
    status: String
    priority: String
}

input DevopsResourcePrioritySsmUpdateManyInput {
    where: DevopsResourcePrioritySsmWhereFilterInput!
    data: DevopsResourcePrioritySsmUpdateInput!
}

input DevopsResourcePrioritySsmUpdateUniqueInput {
    data: DevopsResourcePrioritySsmUpdateInput!
    where: DevopsResourcePrioritySsmWhereUniqueInput!
}

input DevopsResourcePrioritySsmUpsertInput {
    create: DevopsResourcePrioritySsmCreateInput!
    update: DevopsResourcePrioritySsmUpdateInput!
}

input DevopsResourcePrioritySsmUpsertUniqueInput {
    where: DevopsResourcePrioritySsmWhereUniqueInput!
    create: DevopsResourcePrioritySsmCreateInput!
    update: DevopsResourcePrioritySsmUpdateInput!
}

input DevopsResourcePrioritySsmWhereFilterInput {
    OR: [DevopsResourcePrioritySsmWhereFilterInput]
    NOT: [DevopsResourcePrioritySsmWhereFilterInput]
    AND: [DevopsResourcePrioritySsmWhereFilterInput]
    id: IntFilterInput
    resource_id: StringFilterInput
    resource_type: StringFilterInput
    compliance_or_doc_type: StringFilterInput
    status: StringFilterInput
    priority: StringFilterInput
}

input DevopsResourcePrioritySsmWhereUniqueInput {
    id: Int
}

type DevopsResourcePriorityTags {
    id: Int!
    key: String
    value: String
    count: Int
    tag_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityTagsConnectOrCreateInput {
    where: DevopsResourcePriorityTagsWhereUniqueInput!
    create: DevopsResourcePriorityTagsCreateInput!
}

input DevopsResourcePriorityTagsCreateInput {
    key: String
    value: String
    count: Int
    tag_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityTagsCreateManyInput {
    key: String
    value: String
    count: Int
    tag_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityTagsDeleteManyInput {
    where: DevopsResourcePriorityTagsWhereFilterInput!
}

input DevopsResourcePriorityTagsDeleteUniqueInput {
    where: DevopsResourcePriorityTagsWhereUniqueInput!
}

input DevopsResourcePriorityTagsFilterRelationsInput {
    every: DevopsResourcePriorityTagsWhereFilterInput
    none: DevopsResourcePriorityTagsWhereFilterInput
    some: DevopsResourcePriorityTagsWhereFilterInput
}

input DevopsResourcePriorityTagsOrderByInput {
    id: OrderByArg
    key: OrderByArg
    value: OrderByArg
    count: OrderByArg
    tag_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsResourcePriorityTagsUpdateInput {
    key: String
    value: String
    count: Int
    tag_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsResourcePriorityTagsUpdateManyInput {
    where: DevopsResourcePriorityTagsWhereFilterInput!
    data: DevopsResourcePriorityTagsUpdateInput!
}

input DevopsResourcePriorityTagsUpdateUniqueInput {
    data: DevopsResourcePriorityTagsUpdateInput!
    where: DevopsResourcePriorityTagsWhereUniqueInput!
}

input DevopsResourcePriorityTagsUpsertInput {
    create: DevopsResourcePriorityTagsCreateInput!
    update: DevopsResourcePriorityTagsUpdateInput!
}

input DevopsResourcePriorityTagsUpsertUniqueInput {
    where: DevopsResourcePriorityTagsWhereUniqueInput!
    create: DevopsResourcePriorityTagsCreateInput!
    update: DevopsResourcePriorityTagsUpdateInput!
}

input DevopsResourcePriorityTagsWhereFilterInput {
    OR: [DevopsResourcePriorityTagsWhereFilterInput]
    NOT: [DevopsResourcePriorityTagsWhereFilterInput]
    AND: [DevopsResourcePriorityTagsWhereFilterInput]
    id: IntFilterInput
    key: StringFilterInput
    value: StringFilterInput
    count: IntFilterInput
    tag_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsResourcePriorityTagsWhereUniqueInput {
    id: Int
}

type DevopsRulesTable {
    rule_id: Int!
    rule_source: String
    rule: String
    base_importance: Int
    base_urgency: Int
}

input DevopsRulesTableConnectOrCreateInput {
    where: DevopsRulesTableWhereUniqueInput!
    create: DevopsRulesTableCreateInput!
}

input DevopsRulesTableCreateInput {
    rule_source: String
    rule: String
    base_importance: Int
    base_urgency: Int
}

input DevopsRulesTableCreateManyInput {
    rule_source: String
    rule: String
    base_importance: Int
    base_urgency: Int
}

input DevopsRulesTableDeleteManyInput {
    where: DevopsRulesTableWhereFilterInput!
}

input DevopsRulesTableDeleteUniqueInput {
    where: DevopsRulesTableWhereUniqueInput!
}

input DevopsRulesTableFilterRelationsInput {
    every: DevopsRulesTableWhereFilterInput
    none: DevopsRulesTableWhereFilterInput
    some: DevopsRulesTableWhereFilterInput
}

input DevopsRulesTableOrderByInput {
    rule_id: OrderByArg
    rule_source: OrderByArg
    rule: OrderByArg
    base_importance: OrderByArg
    base_urgency: OrderByArg
}

input DevopsRulesTableUpdateInput {
    rule_source: String
    rule: String
    base_importance: Int
    base_urgency: Int
}

input DevopsRulesTableUpdateManyInput {
    where: DevopsRulesTableWhereFilterInput!
    data: DevopsRulesTableUpdateInput!
}

input DevopsRulesTableUpdateUniqueInput {
    data: DevopsRulesTableUpdateInput!
    where: DevopsRulesTableWhereUniqueInput!
}

input DevopsRulesTableUpsertInput {
    create: DevopsRulesTableCreateInput!
    update: DevopsRulesTableUpdateInput!
}

input DevopsRulesTableUpsertUniqueInput {
    where: DevopsRulesTableWhereUniqueInput!
    create: DevopsRulesTableCreateInput!
    update: DevopsRulesTableUpdateInput!
}

input DevopsRulesTableWhereFilterInput {
    OR: [DevopsRulesTableWhereFilterInput]
    NOT: [DevopsRulesTableWhereFilterInput]
    AND: [DevopsRulesTableWhereFilterInput]
    rule_id: IntFilterInput
    rule_source: StringFilterInput
    rule: StringFilterInput
    base_importance: IntFilterInput
    base_urgency: IntFilterInput
}

input DevopsRulesTableWhereUniqueInput {
    rule_id: Int
}

type DevopsServicePriority {
    id: Int!
    resource_type: String
    resource_taws: String
    count: Int
    service_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsServicePriorityConnectOrCreateInput {
    where: DevopsServicePriorityWhereUniqueInput!
    create: DevopsServicePriorityCreateInput!
}

input DevopsServicePriorityCreateInput {
    resource_type: String
    resource_taws: String
    count: Int
    service_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsServicePriorityCreateManyInput {
    resource_type: String
    resource_taws: String
    count: Int
    service_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsServicePriorityDeleteManyInput {
    where: DevopsServicePriorityWhereFilterInput!
}

input DevopsServicePriorityDeleteUniqueInput {
    where: DevopsServicePriorityWhereUniqueInput!
}

input DevopsServicePriorityFilterRelationsInput {
    every: DevopsServicePriorityWhereFilterInput
    none: DevopsServicePriorityWhereFilterInput
    some: DevopsServicePriorityWhereFilterInput
}

input DevopsServicePriorityOrderByInput {
    id: OrderByArg
    resource_type: OrderByArg
    resource_taws: OrderByArg
    count: OrderByArg
    service_priority: OrderByArg
    dev_engineer_priority: OrderByArg
    devops_engineer_priority: OrderByArg
    dev_lead_priority: OrderByArg
}

input DevopsServicePriorityUpdateInput {
    resource_type: String
    resource_taws: String
    count: Int
    service_priority: Int
    dev_engineer_priority: Int
    devops_engineer_priority: Int
    dev_lead_priority: Int
}

input DevopsServicePriorityUpdateManyInput {
    where: DevopsServicePriorityWhereFilterInput!
    data: DevopsServicePriorityUpdateInput!
}

input DevopsServicePriorityUpdateUniqueInput {
    data: DevopsServicePriorityUpdateInput!
    where: DevopsServicePriorityWhereUniqueInput!
}

input DevopsServicePriorityUpsertInput {
    create: DevopsServicePriorityCreateInput!
    update: DevopsServicePriorityUpdateInput!
}

input DevopsServicePriorityUpsertUniqueInput {
    where: DevopsServicePriorityWhereUniqueInput!
    create: DevopsServicePriorityCreateInput!
    update: DevopsServicePriorityUpdateInput!
}

input DevopsServicePriorityWhereFilterInput {
    OR: [DevopsServicePriorityWhereFilterInput]
    NOT: [DevopsServicePriorityWhereFilterInput]
    AND: [DevopsServicePriorityWhereFilterInput]
    id: IntFilterInput
    resource_type: StringFilterInput
    resource_taws: StringFilterInput
    count: IntFilterInput
    service_priority: IntFilterInput
    dev_engineer_priority: IntFilterInput
    devops_engineer_priority: IntFilterInput
    dev_lead_priority: IntFilterInput
}

input DevopsServicePriorityWhereUniqueInput {
    id: Int
    resource_type: String
}

type Events {
    region: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    id: Int!
    time: AWSDateTime
    region_priority: Int
    service_priority: Int
    resource_priority: Int
    tag_priority: Int
    resource_arn: String
    quadrant: String
}

input EventsConnectOrCreateInput {
    where: EventsWhereUniqueInput!
    create: EventsCreateInput!
}

input EventsCreateInput {
    region: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    time: AWSDateTime
    region_priority: Int
    service_priority: Int
    resource_priority: Int
    tag_priority: Int
    resource_arn: String
    quadrant: String
}

input EventsCreateManyInput {
    region: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    time: AWSDateTime
    region_priority: Int
    service_priority: Int
    resource_priority: Int
    tag_priority: Int
    resource_arn: String
    quadrant: String
}

input EventsDeleteManyInput {
    where: EventsWhereFilterInput!
}

input EventsDeleteUniqueInput {
    where: EventsWhereUniqueInput!
}

input EventsFilterRelationsInput {
    every: EventsWhereFilterInput
    none: EventsWhereFilterInput
    some: EventsWhereFilterInput
}

input EventsOrderByInput {
    region: OrderByArg
    source: OrderByArg
    resource: OrderByArg
    action: OrderByArg
    state: OrderByArg
    costly_resource_avg: OrderByArg
    resource_priority_avg: OrderByArg
    detail_type: OrderByArg
    id: OrderByArg
    time: OrderByArg
    region_priority: OrderByArg
    service_priority: OrderByArg
    resource_priority: OrderByArg
    tag_priority: OrderByArg
    resource_arn: OrderByArg
    quadrant: OrderByArg
}

input EventsUpdateInput {
    region: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    time: AWSDateTime
    region_priority: Int
    service_priority: Int
    resource_priority: Int
    tag_priority: Int
    resource_arn: String
    quadrant: String
}

input EventsUpdateManyInput {
    where: EventsWhereFilterInput!
    data: EventsUpdateInput!
}

input EventsUpdateUniqueInput {
    data: EventsUpdateInput!
    where: EventsWhereUniqueInput!
}

input EventsUpsertInput {
    create: EventsCreateInput!
    update: EventsUpdateInput!
}

input EventsUpsertUniqueInput {
    where: EventsWhereUniqueInput!
    create: EventsCreateInput!
    update: EventsUpdateInput!
}

input EventsWhereFilterInput {
    OR: [EventsWhereFilterInput]
    NOT: [EventsWhereFilterInput]
    AND: [EventsWhereFilterInput]
    region: StringFilterInput
    source: StringFilterInput
    resource: StringFilterInput
    action: StringFilterInput
    state: StringFilterInput
    costly_resource_avg: IntFilterInput
    resource_priority_avg: IntFilterInput
    detail_type: StringFilterInput
    id: IntFilterInput
    time: AWSDateTimeFilterInput
    region_priority: IntFilterInput
    service_priority: IntFilterInput
    resource_priority: IntFilterInput
    tag_priority: IntFilterInput
    resource_arn: StringFilterInput
    quadrant: StringFilterInput
}

input EventsWhereUniqueInput {
    id: Int
}

input FloatFilterInput {
    equals: Float
    gt: Float
    gte: Float
    in: [Float!]
    lt: Float
    lte: Float
    not: FloatFilterInput
    notIn: [Float!]
}

input IntFilterInput {
    equals: Int
    gt: Int
    gte: Int
    in: [Int!]
    lt: Int
    lte: Int
    not: IntFilterInput
    notIn: [Int!]
}

type Mutation {
    # Create a new single AwsDevopsServicesList record.
    createAwsDevopsServicesList(
        data: AwsDevopsServicesListCreateInput!
    ): AwsDevopsServicesList

    # Create multiple new AwsDevopsServicesList records.
    createManyAwsDevopsServicesLists(
        data: [AwsDevopsServicesListCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single AwsDevopsServicesList record.
    updateAwsDevopsServicesList(
        where: AwsDevopsServicesListWhereUniqueInput!
        data: AwsDevopsServicesListUpdateInput!
    ): AwsDevopsServicesList

    # Update multiple existing AwsDevopsServicesList records.
    updateManyAwsDevopsServicesLists(
        where: AwsDevopsServicesListWhereFilterInput!
        data: AwsDevopsServicesListUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single AwsDevopsServicesList record.
    upsertAwsDevopsServicesList(
        data: AwsDevopsServicesListUpdateInput!
        where: AwsDevopsServicesListWhereUniqueInput!
    ): AwsDevopsServicesList

    # Delete a single AwsDevopsServicesList record.
    deleteAwsDevopsServicesList(
        where: AwsDevopsServicesListWhereUniqueInput!
    ): AwsDevopsServicesList

    # Delete multiple AwsDevopsServicesList records.
    deleteManyAwsDevopsServicesLists(
        where: AwsDevopsServicesListWhereFilterInput!
    ): BatchPayload

    # Create a new single CockpitTypes record.
    createCockpitTypes(
        data: CockpitTypesCreateInput!
    ): CockpitTypes

    # Create multiple new CockpitTypes records.
    createManyCockpitTypes(
        data: [CockpitTypesCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single CockpitTypes record.
    updateCockpitTypes(
        where: CockpitTypesWhereUniqueInput!
        data: CockpitTypesUpdateInput!
    ): CockpitTypes

    # Update multiple existing CockpitTypes records.
    updateManyCockpitTypes(
        where: CockpitTypesWhereFilterInput!
        data: CockpitTypesUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single CockpitTypes record.
    upsertCockpitTypes(
        data: CockpitTypesUpdateInput!
        where: CockpitTypesWhereUniqueInput!
    ): CockpitTypes

    # Delete a single CockpitTypes record.
    deleteCockpitTypes(
        where: CockpitTypesWhereUniqueInput!
    ): CockpitTypes

    # Delete multiple CockpitTypes records.
    deleteManyCockpitTypes(
        where: CockpitTypesWhereFilterInput!
    ): BatchPayload

    # Create a new single CodepipelineEvents record.
    createCodepipelineEvents(
        data: CodepipelineEventsCreateInput!
    ): CodepipelineEvents

    # Create multiple new CodepipelineEvents records.
    createManyCodepipelineEvents(
        data: [CodepipelineEventsCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single CodepipelineEvents record.
    updateCodepipelineEvents(
        where: CodepipelineEventsWhereUniqueInput!
        data: CodepipelineEventsUpdateInput!
    ): CodepipelineEvents

    # Update multiple existing CodepipelineEvents records.
    updateManyCodepipelineEvents(
        where: CodepipelineEventsWhereFilterInput!
        data: CodepipelineEventsUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single CodepipelineEvents record.
    upsertCodepipelineEvents(
        data: CodepipelineEventsUpdateInput!
        where: CodepipelineEventsWhereUniqueInput!
    ): CodepipelineEvents

    # Delete a single CodepipelineEvents record.
    deleteCodepipelineEvents(
        where: CodepipelineEventsWhereUniqueInput!
    ): CodepipelineEvents

    # Delete multiple CodepipelineEvents records.
    deleteManyCodepipelineEvents(
        where: CodepipelineEventsWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceAlarm record.
    createDevopsCostlyResourceAlarm(
        data: DevopsCostlyResourceAlarmCreateInput!
    ): DevopsCostlyResourceAlarm

    # Create multiple new DevopsCostlyResourceAlarm records.
    createManyDevopsCostlyResourceAlarms(
        data: [DevopsCostlyResourceAlarmCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceAlarm record.
    updateDevopsCostlyResourceAlarm(
        where: DevopsCostlyResourceAlarmWhereUniqueInput!
        data: DevopsCostlyResourceAlarmUpdateInput!
    ): DevopsCostlyResourceAlarm

    # Update multiple existing DevopsCostlyResourceAlarm records.
    updateManyDevopsCostlyResourceAlarms(
        where: DevopsCostlyResourceAlarmWhereFilterInput!
        data: DevopsCostlyResourceAlarmUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceAlarm record.
    upsertDevopsCostlyResourceAlarm(
        data: DevopsCostlyResourceAlarmUpdateInput!
        where: DevopsCostlyResourceAlarmWhereUniqueInput!
    ): DevopsCostlyResourceAlarm

    # Delete a single DevopsCostlyResourceAlarm record.
    deleteDevopsCostlyResourceAlarm(
        where: DevopsCostlyResourceAlarmWhereUniqueInput!
    ): DevopsCostlyResourceAlarm

    # Delete multiple DevopsCostlyResourceAlarm records.
    deleteManyDevopsCostlyResourceAlarms(
        where: DevopsCostlyResourceAlarmWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceCloudtrail record.
    createDevopsCostlyResourceCloudtrail(
        data: DevopsCostlyResourceCloudtrailCreateInput!
    ): DevopsCostlyResourceCloudtrail

    # Create multiple new DevopsCostlyResourceCloudtrail records.
    createManyDevopsCostlyResourceCloudtrails(
        data: [DevopsCostlyResourceCloudtrailCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceCloudtrail record.
    updateDevopsCostlyResourceCloudtrail(
        where: DevopsCostlyResourceCloudtrailWhereUniqueInput!
        data: DevopsCostlyResourceCloudtrailUpdateInput!
    ): DevopsCostlyResourceCloudtrail

    # Update multiple existing DevopsCostlyResourceCloudtrail records.
    updateManyDevopsCostlyResourceCloudtrails(
        where: DevopsCostlyResourceCloudtrailWhereFilterInput!
        data: DevopsCostlyResourceCloudtrailUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceCloudtrail record.
    upsertDevopsCostlyResourceCloudtrail(
        data: DevopsCostlyResourceCloudtrailUpdateInput!
        where: DevopsCostlyResourceCloudtrailWhereUniqueInput!
    ): DevopsCostlyResourceCloudtrail

    # Delete a single DevopsCostlyResourceCloudtrail record.
    deleteDevopsCostlyResourceCloudtrail(
        where: DevopsCostlyResourceCloudtrailWhereUniqueInput!
    ): DevopsCostlyResourceCloudtrail

    # Delete multiple DevopsCostlyResourceCloudtrail records.
    deleteManyDevopsCostlyResourceCloudtrails(
        where: DevopsCostlyResourceCloudtrailWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceCodebuild record.
    createDevopsCostlyResourceCodebuild(
        data: DevopsCostlyResourceCodebuildCreateInput!
    ): DevopsCostlyResourceCodebuild

    # Create multiple new DevopsCostlyResourceCodebuild records.
    createManyDevopsCostlyResourceCodebuilds(
        data: [DevopsCostlyResourceCodebuildCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceCodebuild record.
    updateDevopsCostlyResourceCodebuild(
        where: DevopsCostlyResourceCodebuildWhereUniqueInput!
        data: DevopsCostlyResourceCodebuildUpdateInput!
    ): DevopsCostlyResourceCodebuild

    # Update multiple existing DevopsCostlyResourceCodebuild records.
    updateManyDevopsCostlyResourceCodebuilds(
        where: DevopsCostlyResourceCodebuildWhereFilterInput!
        data: DevopsCostlyResourceCodebuildUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceCodebuild record.
    upsertDevopsCostlyResourceCodebuild(
        data: DevopsCostlyResourceCodebuildUpdateInput!
        where: DevopsCostlyResourceCodebuildWhereUniqueInput!
    ): DevopsCostlyResourceCodebuild

    # Delete a single DevopsCostlyResourceCodebuild record.
    deleteDevopsCostlyResourceCodebuild(
        where: DevopsCostlyResourceCodebuildWhereUniqueInput!
    ): DevopsCostlyResourceCodebuild

    # Delete multiple DevopsCostlyResourceCodebuild records.
    deleteManyDevopsCostlyResourceCodebuilds(
        where: DevopsCostlyResourceCodebuildWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceCodepipeline record.
    createDevopsCostlyResourceCodepipeline(
        data: DevopsCostlyResourceCodepipelineCreateInput!
    ): DevopsCostlyResourceCodepipeline

    # Create multiple new DevopsCostlyResourceCodepipeline records.
    createManyDevopsCostlyResourceCodepipelines(
        data: [DevopsCostlyResourceCodepipelineCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceCodepipeline record.
    updateDevopsCostlyResourceCodepipeline(
        where: DevopsCostlyResourceCodepipelineWhereUniqueInput!
        data: DevopsCostlyResourceCodepipelineUpdateInput!
    ): DevopsCostlyResourceCodepipeline

    # Update multiple existing DevopsCostlyResourceCodepipeline records.
    updateManyDevopsCostlyResourceCodepipelines(
        where: DevopsCostlyResourceCodepipelineWhereFilterInput!
        data: DevopsCostlyResourceCodepipelineUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceCodepipeline record.
    upsertDevopsCostlyResourceCodepipeline(
        data: DevopsCostlyResourceCodepipelineUpdateInput!
        where: DevopsCostlyResourceCodepipelineWhereUniqueInput!
    ): DevopsCostlyResourceCodepipeline

    # Delete a single DevopsCostlyResourceCodepipeline record.
    deleteDevopsCostlyResourceCodepipeline(
        where: DevopsCostlyResourceCodepipelineWhereUniqueInput!
    ): DevopsCostlyResourceCodepipeline

    # Delete multiple DevopsCostlyResourceCodepipeline records.
    deleteManyDevopsCostlyResourceCodepipelines(
        where: DevopsCostlyResourceCodepipelineWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceLambda record.
    createDevopsCostlyResourceLambda(
        data: DevopsCostlyResourceLambdaCreateInput!
    ): DevopsCostlyResourceLambda

    # Create multiple new DevopsCostlyResourceLambda records.
    createManyDevopsCostlyResourceLambdas(
        data: [DevopsCostlyResourceLambdaCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceLambda record.
    updateDevopsCostlyResourceLambda(
        where: DevopsCostlyResourceLambdaWhereUniqueInput!
        data: DevopsCostlyResourceLambdaUpdateInput!
    ): DevopsCostlyResourceLambda

    # Update multiple existing DevopsCostlyResourceLambda records.
    updateManyDevopsCostlyResourceLambdas(
        where: DevopsCostlyResourceLambdaWhereFilterInput!
        data: DevopsCostlyResourceLambdaUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceLambda record.
    upsertDevopsCostlyResourceLambda(
        data: DevopsCostlyResourceLambdaUpdateInput!
        where: DevopsCostlyResourceLambdaWhereUniqueInput!
    ): DevopsCostlyResourceLambda

    # Delete a single DevopsCostlyResourceLambda record.
    deleteDevopsCostlyResourceLambda(
        where: DevopsCostlyResourceLambdaWhereUniqueInput!
    ): DevopsCostlyResourceLambda

    # Delete multiple DevopsCostlyResourceLambda records.
    deleteManyDevopsCostlyResourceLambdas(
        where: DevopsCostlyResourceLambdaWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceSsm record.
    createDevopsCostlyResourceSsm(
        data: DevopsCostlyResourceSsmCreateInput!
    ): DevopsCostlyResourceSsm

    # Create multiple new DevopsCostlyResourceSsm records.
    createManyDevopsCostlyResourceSsms(
        data: [DevopsCostlyResourceSsmCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceSsm record.
    updateDevopsCostlyResourceSsm(
        where: DevopsCostlyResourceSsmWhereUniqueInput!
        data: DevopsCostlyResourceSsmUpdateInput!
    ): DevopsCostlyResourceSsm

    # Update multiple existing DevopsCostlyResourceSsm records.
    updateManyDevopsCostlyResourceSsms(
        where: DevopsCostlyResourceSsmWhereFilterInput!
        data: DevopsCostlyResourceSsmUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceSsm record.
    upsertDevopsCostlyResourceSsm(
        data: DevopsCostlyResourceSsmUpdateInput!
        where: DevopsCostlyResourceSsmWhereUniqueInput!
    ): DevopsCostlyResourceSsm

    # Delete a single DevopsCostlyResourceSsm record.
    deleteDevopsCostlyResourceSsm(
        where: DevopsCostlyResourceSsmWhereUniqueInput!
    ): DevopsCostlyResourceSsm

    # Delete multiple DevopsCostlyResourceSsm records.
    deleteManyDevopsCostlyResourceSsms(
        where: DevopsCostlyResourceSsmWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsDefaultServicePriority record.
    createDevopsDefaultServicePriority(
        data: DevopsDefaultServicePriorityCreateInput!
    ): DevopsDefaultServicePriority

    # Create multiple new DevopsDefaultServicePriority records.
    createManyDevopsDefaultServicePriorities(
        data: [DevopsDefaultServicePriorityCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsDefaultServicePriority record.
    updateDevopsDefaultServicePriority(
        where: DevopsDefaultServicePriorityWhereUniqueInput!
        data: DevopsDefaultServicePriorityUpdateInput!
    ): DevopsDefaultServicePriority

    # Update multiple existing DevopsDefaultServicePriority records.
    updateManyDevopsDefaultServicePriorities(
        where: DevopsDefaultServicePriorityWhereFilterInput!
        data: DevopsDefaultServicePriorityUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsDefaultServicePriority record.
    upsertDevopsDefaultServicePriority(
        data: DevopsDefaultServicePriorityUpdateInput!
        where: DevopsDefaultServicePriorityWhereUniqueInput!
    ): DevopsDefaultServicePriority

    # Delete a single DevopsDefaultServicePriority record.
    deleteDevopsDefaultServicePriority(
        where: DevopsDefaultServicePriorityWhereUniqueInput!
    ): DevopsDefaultServicePriority

    # Delete multiple DevopsDefaultServicePriority records.
    deleteManyDevopsDefaultServicePriorities(
        where: DevopsDefaultServicePriorityWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsRegionPriority record.
    createDevopsRegionPriority(
        data: DevopsRegionPriorityCreateInput!
    ): DevopsRegionPriority

    # Create multiple new DevopsRegionPriority records.
    createManyDevopsRegionPriorities(
        data: [DevopsRegionPriorityCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsRegionPriority record.
    updateDevopsRegionPriority(
        where: DevopsRegionPriorityWhereUniqueInput!
        data: DevopsRegionPriorityUpdateInput!
    ): DevopsRegionPriority

    # Update multiple existing DevopsRegionPriority records.
    updateManyDevopsRegionPriorities(
        where: DevopsRegionPriorityWhereFilterInput!
        data: DevopsRegionPriorityUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsRegionPriority record.
    upsertDevopsRegionPriority(
        data: DevopsRegionPriorityUpdateInput!
        where: DevopsRegionPriorityWhereUniqueInput!
    ): DevopsRegionPriority

    # Delete a single DevopsRegionPriority record.
    deleteDevopsRegionPriority(
        where: DevopsRegionPriorityWhereUniqueInput!
    ): DevopsRegionPriority

    # Delete multiple DevopsRegionPriority records.
    deleteManyDevopsRegionPriorities(
        where: DevopsRegionPriorityWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePriorityAlarm record.
    createDevopsResourcePriorityAlarm(
        data: DevopsResourcePriorityAlarmCreateInput!
    ): DevopsResourcePriorityAlarm

    # Create multiple new DevopsResourcePriorityAlarm records.
    createManyDevopsResourcePriorityAlarms(
        data: [DevopsResourcePriorityAlarmCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePriorityAlarm record.
    updateDevopsResourcePriorityAlarm(
        where: DevopsResourcePriorityAlarmWhereUniqueInput!
        data: DevopsResourcePriorityAlarmUpdateInput!
    ): DevopsResourcePriorityAlarm

    # Update multiple existing DevopsResourcePriorityAlarm records.
    updateManyDevopsResourcePriorityAlarms(
        where: DevopsResourcePriorityAlarmWhereFilterInput!
        data: DevopsResourcePriorityAlarmUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePriorityAlarm record.
    upsertDevopsResourcePriorityAlarm(
        data: DevopsResourcePriorityAlarmUpdateInput!
        where: DevopsResourcePriorityAlarmWhereUniqueInput!
    ): DevopsResourcePriorityAlarm

    # Delete a single DevopsResourcePriorityAlarm record.
    deleteDevopsResourcePriorityAlarm(
        where: DevopsResourcePriorityAlarmWhereUniqueInput!
    ): DevopsResourcePriorityAlarm

    # Delete multiple DevopsResourcePriorityAlarm records.
    deleteManyDevopsResourcePriorityAlarms(
        where: DevopsResourcePriorityAlarmWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePriorityCloudtrail record.
    createDevopsResourcePriorityCloudtrail(
        data: DevopsResourcePriorityCloudtrailCreateInput!
    ): DevopsResourcePriorityCloudtrail

    # Create multiple new DevopsResourcePriorityCloudtrail records.
    createManyDevopsResourcePriorityCloudtrails(
        data: [DevopsResourcePriorityCloudtrailCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePriorityCloudtrail record.
    updateDevopsResourcePriorityCloudtrail(
        where: DevopsResourcePriorityCloudtrailWhereUniqueInput!
        data: DevopsResourcePriorityCloudtrailUpdateInput!
    ): DevopsResourcePriorityCloudtrail

    # Update multiple existing DevopsResourcePriorityCloudtrail records.
    updateManyDevopsResourcePriorityCloudtrails(
        where: DevopsResourcePriorityCloudtrailWhereFilterInput!
        data: DevopsResourcePriorityCloudtrailUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePriorityCloudtrail record.
    upsertDevopsResourcePriorityCloudtrail(
        data: DevopsResourcePriorityCloudtrailUpdateInput!
        where: DevopsResourcePriorityCloudtrailWhereUniqueInput!
    ): DevopsResourcePriorityCloudtrail

    # Delete a single DevopsResourcePriorityCloudtrail record.
    deleteDevopsResourcePriorityCloudtrail(
        where: DevopsResourcePriorityCloudtrailWhereUniqueInput!
    ): DevopsResourcePriorityCloudtrail

    # Delete multiple DevopsResourcePriorityCloudtrail records.
    deleteManyDevopsResourcePriorityCloudtrails(
        where: DevopsResourcePriorityCloudtrailWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePriorityCodebuild record.
    createDevopsResourcePriorityCodebuild(
        data: DevopsResourcePriorityCodebuildCreateInput!
    ): DevopsResourcePriorityCodebuild

    # Create multiple new DevopsResourcePriorityCodebuild records.
    createManyDevopsResourcePriorityCodebuilds(
        data: [DevopsResourcePriorityCodebuildCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePriorityCodebuild record.
    updateDevopsResourcePriorityCodebuild(
        where: DevopsResourcePriorityCodebuildWhereUniqueInput!
        data: DevopsResourcePriorityCodebuildUpdateInput!
    ): DevopsResourcePriorityCodebuild

    # Update multiple existing DevopsResourcePriorityCodebuild records.
    updateManyDevopsResourcePriorityCodebuilds(
        where: DevopsResourcePriorityCodebuildWhereFilterInput!
        data: DevopsResourcePriorityCodebuildUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePriorityCodebuild record.
    upsertDevopsResourcePriorityCodebuild(
        data: DevopsResourcePriorityCodebuildUpdateInput!
        where: DevopsResourcePriorityCodebuildWhereUniqueInput!
    ): DevopsResourcePriorityCodebuild

    # Delete a single DevopsResourcePriorityCodebuild record.
    deleteDevopsResourcePriorityCodebuild(
        where: DevopsResourcePriorityCodebuildWhereUniqueInput!
    ): DevopsResourcePriorityCodebuild

    # Delete multiple DevopsResourcePriorityCodebuild records.
    deleteManyDevopsResourcePriorityCodebuilds(
        where: DevopsResourcePriorityCodebuildWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePriorityCodepipeline record.
    createDevopsResourcePriorityCodepipeline(
        data: DevopsResourcePriorityCodepipelineCreateInput!
    ): DevopsResourcePriorityCodepipeline

    # Create multiple new DevopsResourcePriorityCodepipeline records.
    createManyDevopsResourcePriorityCodepipelines(
        data: [DevopsResourcePriorityCodepipelineCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePriorityCodepipeline record.
    updateDevopsResourcePriorityCodepipeline(
        where: DevopsResourcePriorityCodepipelineWhereUniqueInput!
        data: DevopsResourcePriorityCodepipelineUpdateInput!
    ): DevopsResourcePriorityCodepipeline

    # Update multiple existing DevopsResourcePriorityCodepipeline records.
    updateManyDevopsResourcePriorityCodepipelines(
        where: DevopsResourcePriorityCodepipelineWhereFilterInput!
        data: DevopsResourcePriorityCodepipelineUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePriorityCodepipeline record.
    upsertDevopsResourcePriorityCodepipeline(
        data: DevopsResourcePriorityCodepipelineUpdateInput!
        where: DevopsResourcePriorityCodepipelineWhereUniqueInput!
    ): DevopsResourcePriorityCodepipeline

    # Delete a single DevopsResourcePriorityCodepipeline record.
    deleteDevopsResourcePriorityCodepipeline(
        where: DevopsResourcePriorityCodepipelineWhereUniqueInput!
    ): DevopsResourcePriorityCodepipeline

    # Delete multiple DevopsResourcePriorityCodepipeline records.
    deleteManyDevopsResourcePriorityCodepipelines(
        where: DevopsResourcePriorityCodepipelineWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePriorityLambda record.
    createDevopsResourcePriorityLambda(
        data: DevopsResourcePriorityLambdaCreateInput!
    ): DevopsResourcePriorityLambda

    # Create multiple new DevopsResourcePriorityLambda records.
    createManyDevopsResourcePriorityLambdas(
        data: [DevopsResourcePriorityLambdaCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePriorityLambda record.
    updateDevopsResourcePriorityLambda(
        where: DevopsResourcePriorityLambdaWhereUniqueInput!
        data: DevopsResourcePriorityLambdaUpdateInput!
    ): DevopsResourcePriorityLambda

    # Update multiple existing DevopsResourcePriorityLambda records.
    updateManyDevopsResourcePriorityLambdas(
        where: DevopsResourcePriorityLambdaWhereFilterInput!
        data: DevopsResourcePriorityLambdaUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePriorityLambda record.
    upsertDevopsResourcePriorityLambda(
        data: DevopsResourcePriorityLambdaUpdateInput!
        where: DevopsResourcePriorityLambdaWhereUniqueInput!
    ): DevopsResourcePriorityLambda

    # Delete a single DevopsResourcePriorityLambda record.
    deleteDevopsResourcePriorityLambda(
        where: DevopsResourcePriorityLambdaWhereUniqueInput!
    ): DevopsResourcePriorityLambda

    # Delete multiple DevopsResourcePriorityLambda records.
    deleteManyDevopsResourcePriorityLambdas(
        where: DevopsResourcePriorityLambdaWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePrioritySsm record.
    createDevopsResourcePrioritySsm(
        data: DevopsResourcePrioritySsmCreateInput!
    ): DevopsResourcePrioritySsm

    # Create multiple new DevopsResourcePrioritySsm records.
    createManyDevopsResourcePrioritySsms(
        data: [DevopsResourcePrioritySsmCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePrioritySsm record.
    updateDevopsResourcePrioritySsm(
        where: DevopsResourcePrioritySsmWhereUniqueInput!
        data: DevopsResourcePrioritySsmUpdateInput!
    ): DevopsResourcePrioritySsm

    # Update multiple existing DevopsResourcePrioritySsm records.
    updateManyDevopsResourcePrioritySsms(
        where: DevopsResourcePrioritySsmWhereFilterInput!
        data: DevopsResourcePrioritySsmUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePrioritySsm record.
    upsertDevopsResourcePrioritySsm(
        data: DevopsResourcePrioritySsmUpdateInput!
        where: DevopsResourcePrioritySsmWhereUniqueInput!
    ): DevopsResourcePrioritySsm

    # Delete a single DevopsResourcePrioritySsm record.
    deleteDevopsResourcePrioritySsm(
        where: DevopsResourcePrioritySsmWhereUniqueInput!
    ): DevopsResourcePrioritySsm

    # Delete multiple DevopsResourcePrioritySsm records.
    deleteManyDevopsResourcePrioritySsms(
        where: DevopsResourcePrioritySsmWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePriorityTags record.
    createDevopsResourcePriorityTags(
        data: DevopsResourcePriorityTagsCreateInput!
    ): DevopsResourcePriorityTags

    # Create multiple new DevopsResourcePriorityTags records.
    createManyDevopsResourcePriorityTags(
        data: [DevopsResourcePriorityTagsCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePriorityTags record.
    updateDevopsResourcePriorityTags(
        where: DevopsResourcePriorityTagsWhereUniqueInput!
        data: DevopsResourcePriorityTagsUpdateInput!
    ): DevopsResourcePriorityTags

    # Update multiple existing DevopsResourcePriorityTags records.
    updateManyDevopsResourcePriorityTags(
        where: DevopsResourcePriorityTagsWhereFilterInput!
        data: DevopsResourcePriorityTagsUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePriorityTags record.
    upsertDevopsResourcePriorityTags(
        data: DevopsResourcePriorityTagsUpdateInput!
        where: DevopsResourcePriorityTagsWhereUniqueInput!
    ): DevopsResourcePriorityTags

    # Delete a single DevopsResourcePriorityTags record.
    deleteDevopsResourcePriorityTags(
        where: DevopsResourcePriorityTagsWhereUniqueInput!
    ): DevopsResourcePriorityTags

    # Delete multiple DevopsResourcePriorityTags records.
    deleteManyDevopsResourcePriorityTags(
        where: DevopsResourcePriorityTagsWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsRulesTable record.
    createDevopsRulesTable(
        data: DevopsRulesTableCreateInput!
    ): DevopsRulesTable

    # Create multiple new DevopsRulesTable records.
    createManyDevopsRulesTables(
        data: [DevopsRulesTableCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsRulesTable record.
    updateDevopsRulesTable(
        where: DevopsRulesTableWhereUniqueInput!
        data: DevopsRulesTableUpdateInput!
    ): DevopsRulesTable

    # Update multiple existing DevopsRulesTable records.
    updateManyDevopsRulesTables(
        where: DevopsRulesTableWhereFilterInput!
        data: DevopsRulesTableUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsRulesTable record.
    upsertDevopsRulesTable(
        data: DevopsRulesTableUpdateInput!
        where: DevopsRulesTableWhereUniqueInput!
    ): DevopsRulesTable

    # Delete a single DevopsRulesTable record.
    deleteDevopsRulesTable(
        where: DevopsRulesTableWhereUniqueInput!
    ): DevopsRulesTable

    # Delete multiple DevopsRulesTable records.
    deleteManyDevopsRulesTables(
        where: DevopsRulesTableWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsServicePriority record.
    createDevopsServicePriority(
        data: DevopsServicePriorityCreateInput!
    ): DevopsServicePriority

    # Create multiple new DevopsServicePriority records.
    createManyDevopsServicePriorities(
        data: [DevopsServicePriorityCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsServicePriority record.
    updateDevopsServicePriority(
        where: DevopsServicePriorityWhereUniqueInput!
        data: DevopsServicePriorityUpdateInput!
    ): DevopsServicePriority

    # Update multiple existing DevopsServicePriority records.
    updateManyDevopsServicePriorities(
        where: DevopsServicePriorityWhereFilterInput!
        data: DevopsServicePriorityUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsServicePriority record.
    upsertDevopsServicePriority(
        data: DevopsServicePriorityUpdateInput!
        where: DevopsServicePriorityWhereUniqueInput!
    ): DevopsServicePriority

    # Delete a single DevopsServicePriority record.
    deleteDevopsServicePriority(
        where: DevopsServicePriorityWhereUniqueInput!
    ): DevopsServicePriority

    # Delete multiple DevopsServicePriority records.
    deleteManyDevopsServicePriorities(
        where: DevopsServicePriorityWhereFilterInput!
    ): BatchPayload

    # Create a new single Events record.
    createEvents(data: EventsCreateInput!): Events

    # Create multiple new Events records.
    createManyEvents(
        data: [EventsCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single Events record.
    updateEvents(
        where: EventsWhereUniqueInput!
        data: EventsUpdateInput!
    ): Events

    # Update multiple existing Events records.
    updateManyEvents(
        where: EventsWhereFilterInput!
        data: EventsUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single Events record.
    upsertEvents(
        data: EventsUpdateInput!
        where: EventsWhereUniqueInput!
    ): Events

    # Delete a single Events record.
    deleteEvents(where: EventsWhereUniqueInput!): Events

    # Delete multiple Events records.
    deleteManyEvents(
        where: EventsWhereFilterInput!
    ): BatchPayload

    # Create a new single ReclassificationEvents record.
    createReclassificationEvents(
        data: ReclassificationEventsCreateInput!
    ): ReclassificationEvents

    # Create multiple new ReclassificationEvents records.
    createManyReclassificationEvents(
        data: [ReclassificationEventsCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single ReclassificationEvents record.
    updateReclassificationEvents(
        where: ReclassificationEventsWhereUniqueInput!
        data: ReclassificationEventsUpdateInput!
    ): ReclassificationEvents

    # Update multiple existing ReclassificationEvents records.
    updateManyReclassificationEvents(
        where: ReclassificationEventsWhereFilterInput!
        data: ReclassificationEventsUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single ReclassificationEvents record.
    upsertReclassificationEvents(
        data: ReclassificationEventsUpdateInput!
        where: ReclassificationEventsWhereUniqueInput!
    ): ReclassificationEvents

    # Delete a single ReclassificationEvents record.
    deleteReclassificationEvents(
        where: ReclassificationEventsWhereUniqueInput!
    ): ReclassificationEvents

    # Delete multiple ReclassificationEvents records.
    deleteManyReclassificationEvents(
        where: ReclassificationEventsWhereFilterInput!
    ): BatchPayload

    # Create a new single RfTesting record.
    createRfTesting(data: RfTestingCreateInput!): RfTesting

    # Create multiple new RfTesting records.
    createManyRfTestings(
        data: [RfTestingCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single RfTesting record.
    updateRfTesting(
        where: RfTestingWhereUniqueInput!
        data: RfTestingUpdateInput!
    ): RfTesting

    # Update multiple existing RfTesting records.
    updateManyRfTestings(
        where: RfTestingWhereFilterInput!
        data: RfTestingUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single RfTesting record.
    upsertRfTesting(
        data: RfTestingUpdateInput!
        where: RfTestingWhereUniqueInput!
    ): RfTesting

    # Delete a single RfTesting record.
    deleteRfTesting(
        where: RfTestingWhereUniqueInput!
    ): RfTesting

    # Delete multiple RfTesting records.
    deleteManyRfTestings(
        where: RfTestingWhereFilterInput!
    ): BatchPayload

    # Create a new single RfTraining record.
    createRfTraining(
        data: RfTrainingCreateInput!
    ): RfTraining

    # Create multiple new RfTraining records.
    createManyRfTrainings(
        data: [RfTrainingCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single RfTraining record.
    updateRfTraining(
        where: RfTrainingWhereUniqueInput!
        data: RfTrainingUpdateInput!
    ): RfTraining

    # Update multiple existing RfTraining records.
    updateManyRfTrainings(
        where: RfTrainingWhereFilterInput!
        data: RfTrainingUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single RfTraining record.
    upsertRfTraining(
        data: RfTrainingUpdateInput!
        where: RfTrainingWhereUniqueInput!
    ): RfTraining

    # Delete a single RfTraining record.
    deleteRfTraining(
        where: RfTrainingWhereUniqueInput!
    ): RfTraining

    # Delete multiple RfTraining records.
    deleteManyRfTrainings(
        where: RfTrainingWhereFilterInput!
    ): BatchPayload

    # Create a new single TenantActionsTrainingSet record.
    createTenantActionsTrainingSet(
        data: TenantActionsTrainingSetCreateInput!
    ): TenantActionsTrainingSet

    # Create multiple new TenantActionsTrainingSet records.
    createManyTenantActionsTrainingSets(
        data: [TenantActionsTrainingSetCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single TenantActionsTrainingSet record.
    updateTenantActionsTrainingSet(
        where: TenantActionsTrainingSetWhereUniqueInput!
        data: TenantActionsTrainingSetUpdateInput!
    ): TenantActionsTrainingSet

    # Update multiple existing TenantActionsTrainingSet records.
    updateManyTenantActionsTrainingSets(
        where: TenantActionsTrainingSetWhereFilterInput!
        data: TenantActionsTrainingSetUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single TenantActionsTrainingSet record.
    upsertTenantActionsTrainingSet(
        data: TenantActionsTrainingSetUpdateInput!
        where: TenantActionsTrainingSetWhereUniqueInput!
    ): TenantActionsTrainingSet

    # Delete a single TenantActionsTrainingSet record.
    deleteTenantActionsTrainingSet(
        where: TenantActionsTrainingSetWhereUniqueInput!
    ): TenantActionsTrainingSet

    # Delete multiple TenantActionsTrainingSet records.
    deleteManyTenantActionsTrainingSets(
        where: TenantActionsTrainingSetWhereFilterInput!
    ): BatchPayload

    # Create a new single Tenants record.
    createTenants(data: TenantsCreateInput!): Tenants

    # Create multiple new Tenants records.
    createManyTenants(
        data: [TenantsCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single Tenants record.
    updateTenants(
        where: TenantsWhereUniqueInput!
        data: TenantsUpdateInput!
    ): Tenants

    # Update multiple existing Tenants records.
    updateManyTenants(
        where: TenantsWhereFilterInput!
        data: TenantsUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single Tenants record.
    upsertTenants(
        data: TenantsUpdateInput!
        where: TenantsWhereUniqueInput!
    ): Tenants

    # Delete a single Tenants record.
    deleteTenants(where: TenantsWhereUniqueInput!): Tenants

    # Delete multiple Tenants records.
    deleteManyTenants(
        where: TenantsWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceCodecommit record.
    createDevopsCostlyResourceCodecommit(
        data: DevopsCostlyResourceCodecommitCreateInput!
    ): DevopsCostlyResourceCodecommit

    # Create multiple new DevopsCostlyResourceCodecommit records.
    createManyDevopsCostlyResourceCodecommits(
        data: [DevopsCostlyResourceCodecommitCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceCodecommit record.
    updateDevopsCostlyResourceCodecommit(
        where: DevopsCostlyResourceCodecommitWhereUniqueInput!
        data: DevopsCostlyResourceCodecommitUpdateInput!
    ): DevopsCostlyResourceCodecommit

    # Update multiple existing DevopsCostlyResourceCodecommit records.
    updateManyDevopsCostlyResourceCodecommits(
        where: DevopsCostlyResourceCodecommitWhereFilterInput!
        data: DevopsCostlyResourceCodecommitUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceCodecommit record.
    upsertDevopsCostlyResourceCodecommit(
        data: DevopsCostlyResourceCodecommitUpdateInput!
        where: DevopsCostlyResourceCodecommitWhereUniqueInput!
    ): DevopsCostlyResourceCodecommit

    # Delete a single DevopsCostlyResourceCodecommit record.
    deleteDevopsCostlyResourceCodecommit(
        where: DevopsCostlyResourceCodecommitWhereUniqueInput!
    ): DevopsCostlyResourceCodecommit

    # Delete multiple DevopsCostlyResourceCodecommit records.
    deleteManyDevopsCostlyResourceCodecommits(
        where: DevopsCostlyResourceCodecommitWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePriorityCloudformation record.
    createDevopsResourcePriorityCloudformation(
        data: DevopsResourcePriorityCloudformationCreateInput!
    ): DevopsResourcePriorityCloudformation

    # Create multiple new DevopsResourcePriorityCloudformation records.
    createManyDevopsResourcePriorityCloudformations(
        data: [DevopsResourcePriorityCloudformationCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePriorityCloudformation record.
    updateDevopsResourcePriorityCloudformation(
        where: DevopsResourcePriorityCloudformationWhereUniqueInput!
        data: DevopsResourcePriorityCloudformationUpdateInput!
    ): DevopsResourcePriorityCloudformation

    # Update multiple existing DevopsResourcePriorityCloudformation records.
    updateManyDevopsResourcePriorityCloudformations(
        where: DevopsResourcePriorityCloudformationWhereFilterInput!
        data: DevopsResourcePriorityCloudformationUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePriorityCloudformation record.
    upsertDevopsResourcePriorityCloudformation(
        data: DevopsResourcePriorityCloudformationUpdateInput!
        where: DevopsResourcePriorityCloudformationWhereUniqueInput!
    ): DevopsResourcePriorityCloudformation

    # Delete a single DevopsResourcePriorityCloudformation record.
    deleteDevopsResourcePriorityCloudformation(
        where: DevopsResourcePriorityCloudformationWhereUniqueInput!
    ): DevopsResourcePriorityCloudformation

    # Delete multiple DevopsResourcePriorityCloudformation records.
    deleteManyDevopsResourcePriorityCloudformations(
        where: DevopsResourcePriorityCloudformationWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceEcsService record.
    createDevopsCostlyResourceEcsService(
        data: DevopsCostlyResourceEcsServiceCreateInput!
    ): DevopsCostlyResourceEcsService

    # Create multiple new DevopsCostlyResourceEcsService records.
    createManyDevopsCostlyResourceEcsServices(
        data: [DevopsCostlyResourceEcsServiceCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceEcsService record.
    updateDevopsCostlyResourceEcsService(
        where: DevopsCostlyResourceEcsServiceWhereUniqueInput!
        data: DevopsCostlyResourceEcsServiceUpdateInput!
    ): DevopsCostlyResourceEcsService

    # Update multiple existing DevopsCostlyResourceEcsService records.
    updateManyDevopsCostlyResourceEcsServices(
        where: DevopsCostlyResourceEcsServiceWhereFilterInput!
        data: DevopsCostlyResourceEcsServiceUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceEcsService record.
    upsertDevopsCostlyResourceEcsService(
        data: DevopsCostlyResourceEcsServiceUpdateInput!
        where: DevopsCostlyResourceEcsServiceWhereUniqueInput!
    ): DevopsCostlyResourceEcsService

    # Delete a single DevopsCostlyResourceEcsService record.
    deleteDevopsCostlyResourceEcsService(
        where: DevopsCostlyResourceEcsServiceWhereUniqueInput!
    ): DevopsCostlyResourceEcsService

    # Delete multiple DevopsCostlyResourceEcsService records.
    deleteManyDevopsCostlyResourceEcsServices(
        where: DevopsCostlyResourceEcsServiceWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsCostlyResourceEcsTask record.
    createDevopsCostlyResourceEcsTask(
        data: DevopsCostlyResourceEcsTaskCreateInput!
    ): DevopsCostlyResourceEcsTask

    # Create multiple new DevopsCostlyResourceEcsTask records.
    createManyDevopsCostlyResourceEcsTasks(
        data: [DevopsCostlyResourceEcsTaskCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsCostlyResourceEcsTask record.
    updateDevopsCostlyResourceEcsTask(
        where: DevopsCostlyResourceEcsTaskWhereUniqueInput!
        data: DevopsCostlyResourceEcsTaskUpdateInput!
    ): DevopsCostlyResourceEcsTask

    # Update multiple existing DevopsCostlyResourceEcsTask records.
    updateManyDevopsCostlyResourceEcsTasks(
        where: DevopsCostlyResourceEcsTaskWhereFilterInput!
        data: DevopsCostlyResourceEcsTaskUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsCostlyResourceEcsTask record.
    upsertDevopsCostlyResourceEcsTask(
        data: DevopsCostlyResourceEcsTaskUpdateInput!
        where: DevopsCostlyResourceEcsTaskWhereUniqueInput!
    ): DevopsCostlyResourceEcsTask

    # Delete a single DevopsCostlyResourceEcsTask record.
    deleteDevopsCostlyResourceEcsTask(
        where: DevopsCostlyResourceEcsTaskWhereUniqueInput!
    ): DevopsCostlyResourceEcsTask

    # Delete multiple DevopsCostlyResourceEcsTask records.
    deleteManyDevopsCostlyResourceEcsTasks(
        where: DevopsCostlyResourceEcsTaskWhereFilterInput!
    ): BatchPayload

    # Create a new single DevopsResourcePriorityEcsService record.
    createDevopsResourcePriorityEcsService(
        data: DevopsResourcePriorityEcsServiceCreateInput!
    ): DevopsResourcePriorityEcsService

    # Create multiple new DevopsResourcePriorityEcsService records.
    createManyDevopsResourcePriorityEcsServices(
        data: [DevopsResourcePriorityEcsServiceCreateManyInput!]
        skipDuplicates: Boolean
    ): BatchPayload

    # Update an existing single DevopsResourcePriorityEcsService record.
    updateDevopsResourcePriorityEcsService(
        where: DevopsResourcePriorityEcsServiceWhereUniqueInput!
        data: DevopsResourcePriorityEcsServiceUpdateInput!
    ): DevopsResourcePriorityEcsService

    # Update multiple existing DevopsResourcePriorityEcsService records.
    updateManyDevopsResourcePriorityEcsServices(
        where: DevopsResourcePriorityEcsServiceWhereFilterInput!
        data: DevopsResourcePriorityEcsServiceUpdateInput!
    ): BatchPayload

    # Update an existing or create a new single DevopsResourcePriorityEcsService record.
    upsertDevopsResourcePriorityEcsService(
        data: DevopsResourcePriorityEcsServiceUpdateInput!
        where: DevopsResourcePriorityEcsServiceWhereUniqueInput!
    ): DevopsResourcePriorityEcsService

    # Delete a single DevopsResourcePriorityEcsService record.
    deleteDevopsResourcePriorityEcsService(
        where: DevopsResourcePriorityEcsServiceWhereUniqueInput!
    ): DevopsResourcePriorityEcsService

    # Delete multiple DevopsResourcePriorityEcsService records.
    deleteManyDevopsResourcePriorityEcsServices(
        where: DevopsResourcePriorityEcsServiceWhereFilterInput!
    ): BatchPayload
}

enum OrderByArg {
    ASC
    DESC
}

type Query {
    # Find a single AwsDevopsServicesList record by unique identifier.
    getAwsDevopsServicesList(
        where: AwsDevopsServicesListWhereUniqueInput!
    ): AwsDevopsServicesList

    # Find many AwsDevopsServicesList records (optional query filters).
    listAwsDevopsServicesLists(
        where: AwsDevopsServicesListWhereFilterInput
        orderBy: [AwsDevopsServicesListOrderByInput]
        skip: Int
        take: Int
    ): [AwsDevopsServicesList]

    # Count all AwsDevopsServicesList records (optional query filters).
    countAwsDevopsServicesLists(
        where: AwsDevopsServicesListWhereFilterInput
        orderBy: [AwsDevopsServicesListOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single CockpitTypes record by unique identifier.
    getCockpitTypes(
        where: CockpitTypesWhereUniqueInput!
    ): CockpitTypes

    # Find many CockpitTypes records (optional query filters).
    listCockpitTypes(
        where: CockpitTypesWhereFilterInput
        orderBy: [CockpitTypesOrderByInput]
        skip: Int
        take: Int
    ): [CockpitTypes]

    # Count all CockpitTypes records (optional query filters).
    countCockpitTypes(
        where: CockpitTypesWhereFilterInput
        orderBy: [CockpitTypesOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single CodepipelineEvents record by unique identifier.
    getCodepipelineEvents(
        where: CodepipelineEventsWhereUniqueInput!
    ): CodepipelineEvents

    # Find many CodepipelineEvents records (optional query filters).
    listCodepipelineEvents(
        where: CodepipelineEventsWhereFilterInput
        orderBy: [CodepipelineEventsOrderByInput]
        skip: Int
        take: Int
    ): [CodepipelineEvents]

    # Count all CodepipelineEvents records (optional query filters).
    countCodepipelineEvents(
        where: CodepipelineEventsWhereFilterInput
        orderBy: [CodepipelineEventsOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceAlarm record by unique identifier.
    getDevopsCostlyResourceAlarm(
        where: DevopsCostlyResourceAlarmWhereUniqueInput!
    ): DevopsCostlyResourceAlarm

    # Find many DevopsCostlyResourceAlarm records (optional query filters).
    listDevopsCostlyResourceAlarms(
        where: DevopsCostlyResourceAlarmWhereFilterInput
        orderBy: [DevopsCostlyResourceAlarmOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceAlarm]

    # Count all DevopsCostlyResourceAlarm records (optional query filters).
    countDevopsCostlyResourceAlarms(
        where: DevopsCostlyResourceAlarmWhereFilterInput
        orderBy: [DevopsCostlyResourceAlarmOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceCloudtrail record by unique identifier.
    getDevopsCostlyResourceCloudtrail(
        where: DevopsCostlyResourceCloudtrailWhereUniqueInput!
    ): DevopsCostlyResourceCloudtrail

    # Find many DevopsCostlyResourceCloudtrail records (optional query filters).
    listDevopsCostlyResourceCloudtrails(
        where: DevopsCostlyResourceCloudtrailWhereFilterInput
        orderBy: [DevopsCostlyResourceCloudtrailOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceCloudtrail]

    # Count all DevopsCostlyResourceCloudtrail records (optional query filters).
    countDevopsCostlyResourceCloudtrails(
        where: DevopsCostlyResourceCloudtrailWhereFilterInput
        orderBy: [DevopsCostlyResourceCloudtrailOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceCodebuild record by unique identifier.
    getDevopsCostlyResourceCodebuild(
        where: DevopsCostlyResourceCodebuildWhereUniqueInput!
    ): DevopsCostlyResourceCodebuild

    # Find many DevopsCostlyResourceCodebuild records (optional query filters).
    listDevopsCostlyResourceCodebuilds(
        where: DevopsCostlyResourceCodebuildWhereFilterInput
        orderBy: [DevopsCostlyResourceCodebuildOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceCodebuild]

    # Count all DevopsCostlyResourceCodebuild records (optional query filters).
    countDevopsCostlyResourceCodebuilds(
        where: DevopsCostlyResourceCodebuildWhereFilterInput
        orderBy: [DevopsCostlyResourceCodebuildOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceCodepipeline record by unique identifier.
    getDevopsCostlyResourceCodepipeline(
        where: DevopsCostlyResourceCodepipelineWhereUniqueInput!
    ): DevopsCostlyResourceCodepipeline

    # Find many DevopsCostlyResourceCodepipeline records (optional query filters).
    listDevopsCostlyResourceCodepipelines(
        where: DevopsCostlyResourceCodepipelineWhereFilterInput
        orderBy: [DevopsCostlyResourceCodepipelineOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceCodepipeline]

    # Count all DevopsCostlyResourceCodepipeline records (optional query filters).
    countDevopsCostlyResourceCodepipelines(
        where: DevopsCostlyResourceCodepipelineWhereFilterInput
        orderBy: [DevopsCostlyResourceCodepipelineOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceLambda record by unique identifier.
    getDevopsCostlyResourceLambda(
        where: DevopsCostlyResourceLambdaWhereUniqueInput!
    ): DevopsCostlyResourceLambda

    # Find many DevopsCostlyResourceLambda records (optional query filters).
    listDevopsCostlyResourceLambdas(
        where: DevopsCostlyResourceLambdaWhereFilterInput
        orderBy: [DevopsCostlyResourceLambdaOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceLambda]

    # Count all DevopsCostlyResourceLambda records (optional query filters).
    countDevopsCostlyResourceLambdas(
        where: DevopsCostlyResourceLambdaWhereFilterInput
        orderBy: [DevopsCostlyResourceLambdaOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceSsm record by unique identifier.
    getDevopsCostlyResourceSsm(
        where: DevopsCostlyResourceSsmWhereUniqueInput!
    ): DevopsCostlyResourceSsm

    # Find many DevopsCostlyResourceSsm records (optional query filters).
    listDevopsCostlyResourceSsms(
        where: DevopsCostlyResourceSsmWhereFilterInput
        orderBy: [DevopsCostlyResourceSsmOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceSsm]

    # Count all DevopsCostlyResourceSsm records (optional query filters).
    countDevopsCostlyResourceSsms(
        where: DevopsCostlyResourceSsmWhereFilterInput
        orderBy: [DevopsCostlyResourceSsmOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsDefaultServicePriority record by unique identifier.
    getDevopsDefaultServicePriority(
        where: DevopsDefaultServicePriorityWhereUniqueInput!
    ): DevopsDefaultServicePriority

    # Find many DevopsDefaultServicePriority records (optional query filters).
    listDevopsDefaultServicePriorities(
        where: DevopsDefaultServicePriorityWhereFilterInput
        orderBy: [DevopsDefaultServicePriorityOrderByInput]
        skip: Int
        take: Int
    ): [DevopsDefaultServicePriority]

    # Count all DevopsDefaultServicePriority records (optional query filters).
    countDevopsDefaultServicePriorities(
        where: DevopsDefaultServicePriorityWhereFilterInput
        orderBy: [DevopsDefaultServicePriorityOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsRegionPriority record by unique identifier.
    getDevopsRegionPriority(
        where: DevopsRegionPriorityWhereUniqueInput!
    ): DevopsRegionPriority

    # Find many DevopsRegionPriority records (optional query filters).
    listDevopsRegionPriorities(
        where: DevopsRegionPriorityWhereFilterInput
        orderBy: [DevopsRegionPriorityOrderByInput]
        skip: Int
        take: Int
    ): [DevopsRegionPriority]

    # Count all DevopsRegionPriority records (optional query filters).
    countDevopsRegionPriorities(
        where: DevopsRegionPriorityWhereFilterInput
        orderBy: [DevopsRegionPriorityOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePriorityAlarm record by unique identifier.
    getDevopsResourcePriorityAlarm(
        where: DevopsResourcePriorityAlarmWhereUniqueInput!
    ): DevopsResourcePriorityAlarm

    # Find many DevopsResourcePriorityAlarm records (optional query filters).
    listDevopsResourcePriorityAlarms(
        where: DevopsResourcePriorityAlarmWhereFilterInput
        orderBy: [DevopsResourcePriorityAlarmOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePriorityAlarm]

    # Count all DevopsResourcePriorityAlarm records (optional query filters).
    countDevopsResourcePriorityAlarms(
        where: DevopsResourcePriorityAlarmWhereFilterInput
        orderBy: [DevopsResourcePriorityAlarmOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePriorityCloudtrail record by unique identifier.
    getDevopsResourcePriorityCloudtrail(
        where: DevopsResourcePriorityCloudtrailWhereUniqueInput!
    ): DevopsResourcePriorityCloudtrail

    # Find many DevopsResourcePriorityCloudtrail records (optional query filters).
    listDevopsResourcePriorityCloudtrails(
        where: DevopsResourcePriorityCloudtrailWhereFilterInput
        orderBy: [DevopsResourcePriorityCloudtrailOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePriorityCloudtrail]

    # Count all DevopsResourcePriorityCloudtrail records (optional query filters).
    countDevopsResourcePriorityCloudtrails(
        where: DevopsResourcePriorityCloudtrailWhereFilterInput
        orderBy: [DevopsResourcePriorityCloudtrailOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePriorityCodebuild record by unique identifier.
    getDevopsResourcePriorityCodebuild(
        where: DevopsResourcePriorityCodebuildWhereUniqueInput!
    ): DevopsResourcePriorityCodebuild

    # Find many DevopsResourcePriorityCodebuild records (optional query filters).
    listDevopsResourcePriorityCodebuilds(
        where: DevopsResourcePriorityCodebuildWhereFilterInput
        orderBy: [DevopsResourcePriorityCodebuildOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePriorityCodebuild]

    # Count all DevopsResourcePriorityCodebuild records (optional query filters).
    countDevopsResourcePriorityCodebuilds(
        where: DevopsResourcePriorityCodebuildWhereFilterInput
        orderBy: [DevopsResourcePriorityCodebuildOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePriorityCodepipeline record by unique identifier.
    getDevopsResourcePriorityCodepipeline(
        where: DevopsResourcePriorityCodepipelineWhereUniqueInput!
    ): DevopsResourcePriorityCodepipeline

    # Find many DevopsResourcePriorityCodepipeline records (optional query filters).
    listDevopsResourcePriorityCodepipelines(
        where: DevopsResourcePriorityCodepipelineWhereFilterInput
        orderBy: [DevopsResourcePriorityCodepipelineOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePriorityCodepipeline]

    # Count all DevopsResourcePriorityCodepipeline records (optional query filters).
    countDevopsResourcePriorityCodepipelines(
        where: DevopsResourcePriorityCodepipelineWhereFilterInput
        orderBy: [DevopsResourcePriorityCodepipelineOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePriorityLambda record by unique identifier.
    getDevopsResourcePriorityLambda(
        where: DevopsResourcePriorityLambdaWhereUniqueInput!
    ): DevopsResourcePriorityLambda

    # Find many DevopsResourcePriorityLambda records (optional query filters).
    listDevopsResourcePriorityLambdas(
        where: DevopsResourcePriorityLambdaWhereFilterInput
        orderBy: [DevopsResourcePriorityLambdaOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePriorityLambda]

    # Count all DevopsResourcePriorityLambda records (optional query filters).
    countDevopsResourcePriorityLambdas(
        where: DevopsResourcePriorityLambdaWhereFilterInput
        orderBy: [DevopsResourcePriorityLambdaOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePrioritySsm record by unique identifier.
    getDevopsResourcePrioritySsm(
        where: DevopsResourcePrioritySsmWhereUniqueInput!
    ): DevopsResourcePrioritySsm

    # Find many DevopsResourcePrioritySsm records (optional query filters).
    listDevopsResourcePrioritySsms(
        where: DevopsResourcePrioritySsmWhereFilterInput
        orderBy: [DevopsResourcePrioritySsmOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePrioritySsm]

    # Count all DevopsResourcePrioritySsm records (optional query filters).
    countDevopsResourcePrioritySsms(
        where: DevopsResourcePrioritySsmWhereFilterInput
        orderBy: [DevopsResourcePrioritySsmOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePriorityTags record by unique identifier.
    getDevopsResourcePriorityTags(
        where: DevopsResourcePriorityTagsWhereUniqueInput!
    ): DevopsResourcePriorityTags

    # Find many DevopsResourcePriorityTags records (optional query filters).
    listDevopsResourcePriorityTags(
        where: DevopsResourcePriorityTagsWhereFilterInput
        orderBy: [DevopsResourcePriorityTagsOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePriorityTags]

    # Count all DevopsResourcePriorityTags records (optional query filters).
    countDevopsResourcePriorityTags(
        where: DevopsResourcePriorityTagsWhereFilterInput
        orderBy: [DevopsResourcePriorityTagsOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsRulesTable record by unique identifier.
    getDevopsRulesTable(
        where: DevopsRulesTableWhereUniqueInput!
    ): DevopsRulesTable

    # Find many DevopsRulesTable records (optional query filters).
    listDevopsRulesTables(
        where: DevopsRulesTableWhereFilterInput
        orderBy: [DevopsRulesTableOrderByInput]
        skip: Int
        take: Int
    ): [DevopsRulesTable]

    # Count all DevopsRulesTable records (optional query filters).
    countDevopsRulesTables(
        where: DevopsRulesTableWhereFilterInput
        orderBy: [DevopsRulesTableOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsServicePriority record by unique identifier.
    getDevopsServicePriority(
        where: DevopsServicePriorityWhereUniqueInput!
    ): DevopsServicePriority

    # Find many DevopsServicePriority records (optional query filters).
    listDevopsServicePriorities(
        where: DevopsServicePriorityWhereFilterInput
        orderBy: [DevopsServicePriorityOrderByInput]
        skip: Int
        take: Int
    ): [DevopsServicePriority]

    # Count all DevopsServicePriority records (optional query filters).
    countDevopsServicePriorities(
        where: DevopsServicePriorityWhereFilterInput
        orderBy: [DevopsServicePriorityOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single Events record by unique identifier.
    getEvents(where: EventsWhereUniqueInput!): Events

    # Find many Events records (optional query filters).
    listEvents(
        where: EventsWhereFilterInput
        orderBy: [EventsOrderByInput]
        skip: Int
        take: Int
    ): [Events]

    # Count all Events records (optional query filters).
    countEvents(
        where: EventsWhereFilterInput
        orderBy: [EventsOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single ReclassificationEvents record by unique identifier.
    getReclassificationEvents(
        where: ReclassificationEventsWhereUniqueInput!
    ): ReclassificationEvents

    # Find many ReclassificationEvents records (optional query filters).
    listReclassificationEvents(
        where: ReclassificationEventsWhereFilterInput
        orderBy: [ReclassificationEventsOrderByInput]
        skip: Int
        take: Int
    ): [ReclassificationEvents]

    # Count all ReclassificationEvents records (optional query filters).
    countReclassificationEvents(
        where: ReclassificationEventsWhereFilterInput
        orderBy: [ReclassificationEventsOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single RfTesting record by unique identifier.
    getRfTesting(
        where: RfTestingWhereUniqueInput!
    ): RfTesting

    # Find many RfTesting records (optional query filters).
    listRfTestings(
        where: RfTestingWhereFilterInput
        orderBy: [RfTestingOrderByInput]
        skip: Int
        take: Int
    ): [RfTesting]

    # Count all RfTesting records (optional query filters).
    countRfTestings(
        where: RfTestingWhereFilterInput
        orderBy: [RfTestingOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single RfTraining record by unique identifier.
    getRfTraining(
        where: RfTrainingWhereUniqueInput!
    ): RfTraining

    # Find many RfTraining records (optional query filters).
    listRfTrainings(
        where: RfTrainingWhereFilterInput
        orderBy: [RfTrainingOrderByInput]
        skip: Int
        take: Int
    ): [RfTraining]

    # Count all RfTraining records (optional query filters).
    countRfTrainings(
        where: RfTrainingWhereFilterInput
        orderBy: [RfTrainingOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single TenantActionsTrainingSet record by unique identifier.
    getTenantActionsTrainingSet(
        where: TenantActionsTrainingSetWhereUniqueInput!
    ): TenantActionsTrainingSet

    # Find many TenantActionsTrainingSet records (optional query filters).
    listTenantActionsTrainingSets(
        where: TenantActionsTrainingSetWhereFilterInput
        orderBy: [TenantActionsTrainingSetOrderByInput]
        skip: Int
        take: Int
    ): [TenantActionsTrainingSet]

    # Count all TenantActionsTrainingSet records (optional query filters).
    countTenantActionsTrainingSets(
        where: TenantActionsTrainingSetWhereFilterInput
        orderBy: [TenantActionsTrainingSetOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single Tenants record by unique identifier.
    getTenants(where: TenantsWhereUniqueInput!): Tenants

    # Find many Tenants records (optional query filters).
    listTenants(
        where: TenantsWhereFilterInput
        orderBy: [TenantsOrderByInput]
        skip: Int
        take: Int
    ): [Tenants]

    # Count all Tenants records (optional query filters).
    countTenants(
        where: TenantsWhereFilterInput
        orderBy: [TenantsOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceCodecommit record by unique identifier.
    getDevopsCostlyResourceCodecommit(
        where: DevopsCostlyResourceCodecommitWhereUniqueInput!
    ): DevopsCostlyResourceCodecommit

    # Find many DevopsCostlyResourceCodecommit records (optional query filters).
    listDevopsCostlyResourceCodecommits(
        where: DevopsCostlyResourceCodecommitWhereFilterInput
        orderBy: [DevopsCostlyResourceCodecommitOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceCodecommit]

    # Count all DevopsCostlyResourceCodecommit records (optional query filters).
    countDevopsCostlyResourceCodecommits(
        where: DevopsCostlyResourceCodecommitWhereFilterInput
        orderBy: [DevopsCostlyResourceCodecommitOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePriorityCloudformation record by unique identifier.
    getDevopsResourcePriorityCloudformation(
        where: DevopsResourcePriorityCloudformationWhereUniqueInput!
    ): DevopsResourcePriorityCloudformation

    # Find many DevopsResourcePriorityCloudformation records (optional query filters).
    listDevopsResourcePriorityCloudformations(
        where: DevopsResourcePriorityCloudformationWhereFilterInput
        orderBy: [DevopsResourcePriorityCloudformationOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePriorityCloudformation]

    # Count all DevopsResourcePriorityCloudformation records (optional query filters).
    countDevopsResourcePriorityCloudformations(
        where: DevopsResourcePriorityCloudformationWhereFilterInput
        orderBy: [DevopsResourcePriorityCloudformationOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceEcsService record by unique identifier.
    getDevopsCostlyResourceEcsService(
        where: DevopsCostlyResourceEcsServiceWhereUniqueInput!
    ): DevopsCostlyResourceEcsService

    # Find many DevopsCostlyResourceEcsService records (optional query filters).
    listDevopsCostlyResourceEcsServices(
        where: DevopsCostlyResourceEcsServiceWhereFilterInput
        orderBy: [DevopsCostlyResourceEcsServiceOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceEcsService]

    # Count all DevopsCostlyResourceEcsService records (optional query filters).
    countDevopsCostlyResourceEcsServices(
        where: DevopsCostlyResourceEcsServiceWhereFilterInput
        orderBy: [DevopsCostlyResourceEcsServiceOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsCostlyResourceEcsTask record by unique identifier.
    getDevopsCostlyResourceEcsTask(
        where: DevopsCostlyResourceEcsTaskWhereUniqueInput!
    ): DevopsCostlyResourceEcsTask

    # Find many DevopsCostlyResourceEcsTask records (optional query filters).
    listDevopsCostlyResourceEcsTasks(
        where: DevopsCostlyResourceEcsTaskWhereFilterInput
        orderBy: [DevopsCostlyResourceEcsTaskOrderByInput]
        skip: Int
        take: Int
    ): [DevopsCostlyResourceEcsTask]

    # Count all DevopsCostlyResourceEcsTask records (optional query filters).
    countDevopsCostlyResourceEcsTasks(
        where: DevopsCostlyResourceEcsTaskWhereFilterInput
        orderBy: [DevopsCostlyResourceEcsTaskOrderByInput]
        skip: Int
        take: Int
    ): Int

    # Find a single DevopsResourcePriorityEcsService record by unique identifier.
    getDevopsResourcePriorityEcsService(
        where: DevopsResourcePriorityEcsServiceWhereUniqueInput!
    ): DevopsResourcePriorityEcsService

    # Find many DevopsResourcePriorityEcsService records (optional query filters).
    listDevopsResourcePriorityEcsServices(
        where: DevopsResourcePriorityEcsServiceWhereFilterInput
        orderBy: [DevopsResourcePriorityEcsServiceOrderByInput]
        skip: Int
        take: Int
    ): [DevopsResourcePriorityEcsService]

    # Count all DevopsResourcePriorityEcsService records (optional query filters).
    countDevopsResourcePriorityEcsServices(
        where: DevopsResourcePriorityEcsServiceWhereFilterInput
        orderBy: [DevopsResourcePriorityEcsServiceOrderByInput]
        skip: Int
        take: Int
    ): Int
}

type ReclassificationEvents {
    region: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    id: Int!
    time: AWSDateTime
    region_priority: Int
    service_priority: Int
    resource_priority: Int
    tag_priority: Int
    resource_arn: String
    quadrant: String
}

input ReclassificationEventsConnectOrCreateInput {
    where: ReclassificationEventsWhereUniqueInput!
    create: ReclassificationEventsCreateInput!
}

input ReclassificationEventsCreateInput {
    region: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    time: AWSDateTime
    region_priority: Int
    service_priority: Int
    resource_priority: Int
    tag_priority: Int
    resource_arn: String
    quadrant: String
}

input ReclassificationEventsCreateManyInput {
    region: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    time: AWSDateTime
    region_priority: Int
    service_priority: Int
    resource_priority: Int
    tag_priority: Int
    resource_arn: String
    quadrant: String
}

input ReclassificationEventsDeleteManyInput {
    where: ReclassificationEventsWhereFilterInput!
}

input ReclassificationEventsDeleteUniqueInput {
    where: ReclassificationEventsWhereUniqueInput!
}

input ReclassificationEventsFilterRelationsInput {
    every: ReclassificationEventsWhereFilterInput
    none: ReclassificationEventsWhereFilterInput
    some: ReclassificationEventsWhereFilterInput
}

input ReclassificationEventsOrderByInput {
    region: OrderByArg
    source: OrderByArg
    resource: OrderByArg
    action: OrderByArg
    state: OrderByArg
    costly_resource_avg: OrderByArg
    resource_priority_avg: OrderByArg
    detail_type: OrderByArg
    id: OrderByArg
    time: OrderByArg
    region_priority: OrderByArg
    service_priority: OrderByArg
    resource_priority: OrderByArg
    tag_priority: OrderByArg
    resource_arn: OrderByArg
    quadrant: OrderByArg
}

input ReclassificationEventsUpdateInput {
    region: String
    source: String
    resource: String
    action: String
    state: String
    costly_resource_avg: Int
    resource_priority_avg: Int
    detail_type: String
    time: AWSDateTime
    region_priority: Int
    service_priority: Int
    resource_priority: Int
    tag_priority: Int
    resource_arn: String
    quadrant: String
}

input ReclassificationEventsUpdateManyInput {
    where: ReclassificationEventsWhereFilterInput!
    data: ReclassificationEventsUpdateInput!
}

input ReclassificationEventsUpdateUniqueInput {
    data: ReclassificationEventsUpdateInput!
    where: ReclassificationEventsWhereUniqueInput!
}

input ReclassificationEventsUpsertInput {
    create: ReclassificationEventsCreateInput!
    update: ReclassificationEventsUpdateInput!
}

input ReclassificationEventsUpsertUniqueInput {
    where: ReclassificationEventsWhereUniqueInput!
    create: ReclassificationEventsCreateInput!
    update: ReclassificationEventsUpdateInput!
}

input ReclassificationEventsWhereFilterInput {
    OR: [ReclassificationEventsWhereFilterInput]
    NOT: [ReclassificationEventsWhereFilterInput]
    AND: [ReclassificationEventsWhereFilterInput]
    region: StringFilterInput
    source: StringFilterInput
    resource: StringFilterInput
    action: StringFilterInput
    state: StringFilterInput
    costly_resource_avg: IntFilterInput
    resource_priority_avg: IntFilterInput
    detail_type: StringFilterInput
    id: IntFilterInput
    time: AWSDateTimeFilterInput
    region_priority: IntFilterInput
    service_priority: IntFilterInput
    resource_priority: IntFilterInput
    tag_priority: IntFilterInput
    resource_arn: StringFilterInput
    quadrant: StringFilterInput
}

input ReclassificationEventsWhereUniqueInput {
    id: Int
}

type RfTesting {
    id: Int!
    time: AWSDateTime
    region: String
    region_priority: Int
    event_source: String
    service_priority: Int
    resource_name: String
    resource_prioirty: String
    resource_arn: String
    the_event: String
    event_state: String
    costly_resource_value: Int
    tag_priority: Int
    quadrant: String
}

input RfTestingConnectOrCreateInput {
    where: RfTestingWhereUniqueInput!
    create: RfTestingCreateInput!
}

input RfTestingCreateInput {
    time: AWSDateTime
    region: String
    region_priority: Int
    event_source: String
    service_priority: Int
    resource_name: String
    resource_prioirty: String
    resource_arn: String
    the_event: String
    event_state: String
    costly_resource_value: Int
    tag_priority: Int
    quadrant: String
}

input RfTestingCreateManyInput {
    time: AWSDateTime
    region: String
    region_priority: Int
    event_source: String
    service_priority: Int
    resource_name: String
    resource_prioirty: String
    resource_arn: String
    the_event: String
    event_state: String
    costly_resource_value: Int
    tag_priority: Int
    quadrant: String
}

input RfTestingDeleteManyInput {
    where: RfTestingWhereFilterInput!
}

input RfTestingDeleteUniqueInput {
    where: RfTestingWhereUniqueInput!
}

input RfTestingFilterRelationsInput {
    every: RfTestingWhereFilterInput
    none: RfTestingWhereFilterInput
    some: RfTestingWhereFilterInput
}

input RfTestingOrderByInput {
    id: OrderByArg
    time: OrderByArg
    region: OrderByArg
    region_priority: OrderByArg
    event_source: OrderByArg
    service_priority: OrderByArg
    resource_name: OrderByArg
    resource_prioirty: OrderByArg
    resource_arn: OrderByArg
    the_event: OrderByArg
    event_state: OrderByArg
    costly_resource_value: OrderByArg
    tag_priority: OrderByArg
    quadrant: OrderByArg
}

input RfTestingUpdateInput {
    time: AWSDateTime
    region: String
    region_priority: Int
    event_source: String
    service_priority: Int
    resource_name: String
    resource_prioirty: String
    resource_arn: String
    the_event: String
    event_state: String
    costly_resource_value: Int
    tag_priority: Int
    quadrant: String
}

input RfTestingUpdateManyInput {
    where: RfTestingWhereFilterInput!
    data: RfTestingUpdateInput!
}

input RfTestingUpdateUniqueInput {
    data: RfTestingUpdateInput!
    where: RfTestingWhereUniqueInput!
}

input RfTestingUpsertInput {
    create: RfTestingCreateInput!
    update: RfTestingUpdateInput!
}

input RfTestingUpsertUniqueInput {
    where: RfTestingWhereUniqueInput!
    create: RfTestingCreateInput!
    update: RfTestingUpdateInput!
}

input RfTestingWhereFilterInput {
    OR: [RfTestingWhereFilterInput]
    NOT: [RfTestingWhereFilterInput]
    AND: [RfTestingWhereFilterInput]
    id: IntFilterInput
    time: AWSDateTimeFilterInput
    region: StringFilterInput
    region_priority: IntFilterInput
    event_source: StringFilterInput
    service_priority: IntFilterInput
    resource_name: StringFilterInput
    resource_prioirty: StringFilterInput
    resource_arn: StringFilterInput
    the_event: StringFilterInput
    event_state: StringFilterInput
    costly_resource_value: IntFilterInput
    tag_priority: IntFilterInput
    quadrant: StringFilterInput
}

input RfTestingWhereUniqueInput {
    id: Int
}

type RfTraining {
    id: Int!
    time: AWSDateTime
    region: String
    region_priority: Int
    event_source: String
    service_priority: Int
    resource_name: String
    resource_prioirty: String
    resource_arn: String
    the_event: String
    event_state: String
    costly_resource_value: Int
    tag_priority: Int
    quadrant: String
}

input RfTrainingConnectOrCreateInput {
    where: RfTrainingWhereUniqueInput!
    create: RfTrainingCreateInput!
}

input RfTrainingCreateInput {
    time: AWSDateTime
    region: String
    region_priority: Int
    event_source: String
    service_priority: Int
    resource_name: String
    resource_prioirty: String
    resource_arn: String
    the_event: String
    event_state: String
    costly_resource_value: Int
    tag_priority: Int
    quadrant: String
}

input RfTrainingCreateManyInput {
    time: AWSDateTime
    region: String
    region_priority: Int
    event_source: String
    service_priority: Int
    resource_name: String
    resource_prioirty: String
    resource_arn: String
    the_event: String
    event_state: String
    costly_resource_value: Int
    tag_priority: Int
    quadrant: String
}

input RfTrainingDeleteManyInput {
    where: RfTrainingWhereFilterInput!
}

input RfTrainingDeleteUniqueInput {
    where: RfTrainingWhereUniqueInput!
}

input RfTrainingFilterRelationsInput {
    every: RfTrainingWhereFilterInput
    none: RfTrainingWhereFilterInput
    some: RfTrainingWhereFilterInput
}

input RfTrainingOrderByInput {
    id: OrderByArg
    time: OrderByArg
    region: OrderByArg
    region_priority: OrderByArg
    event_source: OrderByArg
    service_priority: OrderByArg
    resource_name: OrderByArg
    resource_prioirty: OrderByArg
    resource_arn: OrderByArg
    the_event: OrderByArg
    event_state: OrderByArg
    costly_resource_value: OrderByArg
    tag_priority: OrderByArg
    quadrant: OrderByArg
}

input RfTrainingUpdateInput {
    time: AWSDateTime
    region: String
    region_priority: Int
    event_source: String
    service_priority: Int
    resource_name: String
    resource_prioirty: String
    resource_arn: String
    the_event: String
    event_state: String
    costly_resource_value: Int
    tag_priority: Int
    quadrant: String
}

input RfTrainingUpdateManyInput {
    where: RfTrainingWhereFilterInput!
    data: RfTrainingUpdateInput!
}

input RfTrainingUpdateUniqueInput {
    data: RfTrainingUpdateInput!
    where: RfTrainingWhereUniqueInput!
}

input RfTrainingUpsertInput {
    create: RfTrainingCreateInput!
    update: RfTrainingUpdateInput!
}

input RfTrainingUpsertUniqueInput {
    where: RfTrainingWhereUniqueInput!
    create: RfTrainingCreateInput!
    update: RfTrainingUpdateInput!
}

input RfTrainingWhereFilterInput {
    OR: [RfTrainingWhereFilterInput]
    NOT: [RfTrainingWhereFilterInput]
    AND: [RfTrainingWhereFilterInput]
    id: IntFilterInput
    time: AWSDateTimeFilterInput
    region: StringFilterInput
    region_priority: IntFilterInput
    event_source: StringFilterInput
    service_priority: IntFilterInput
    resource_name: StringFilterInput
    resource_prioirty: StringFilterInput
    resource_arn: StringFilterInput
    the_event: StringFilterInput
    event_state: StringFilterInput
    costly_resource_value: IntFilterInput
    tag_priority: IntFilterInput
    quadrant: StringFilterInput
}

input RfTrainingWhereUniqueInput {
    id: Int
}

input StringFilterInput {
    contains: String
    endsWith: String
    equals: String
    in: [String!]
    not: StringFilterInput
    notIn: [String!]
    startsWith: String
}

type Subscription {
    # Triggered from `createAwsDevopsServicesList` mutation (excl.
    # `createManyAwsDevopsServicesLists` and `upsertAwsDevopsServicesList`).
    onCreatedAwsDevopsServicesList(
        id: Int
    ): AwsDevopsServicesList
        @aws_subscribe(
            mutations: ["createAwsDevopsServicesList"]
        )

    # Triggered from `updateAwsDevopsServicesList` mutation (excl.
    # `updateManyAwsDevopsServicesLists` and `upsertAwsDevopsServicesList`).
    onUpdatedAwsDevopsServicesList(
        id: Int
    ): AwsDevopsServicesList
        @aws_subscribe(
            mutations: ["updateAwsDevopsServicesList"]
        )

    # Triggered from `upsertAwsDevopsServicesList` mutation.
    onUpsertedAwsDevopsServicesList(
        id: Int
    ): AwsDevopsServicesList
        @aws_subscribe(
            mutations: ["upsertAwsDevopsServicesList"]
        )

    # Triggered from `deleteAwsDevopsServicesList` mutation (excl. `deleteManyAwsDevopsServicesLists`).
    onDeletedAwsDevopsServicesList(
        id: Int
    ): AwsDevopsServicesList
        @aws_subscribe(
            mutations: ["deleteAwsDevopsServicesList"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyAwsDevopsServicesLists`).
    onMutatedAwsDevopsServicesList(
        id: Int
    ): AwsDevopsServicesList
        @aws_subscribe(
            mutations: [
                "createAwsDevopsServicesList"
                "updateAwsDevopsServicesList"
                "upsertAwsDevopsServicesList"
                "deleteAwsDevopsServicesList"
            ]
        )

    # Triggered from `createManyAwsDevopsServicesLists` mutation.
    onCreatedManyAwsDevopsServicesLists: BatchPayload
        @aws_subscribe(
            mutations: ["createManyAwsDevopsServicesLists"]
        )

    # Triggered from `updateManyAwsDevopsServicesLists` mutation.
    onUpdatedManyAwsDevopsServicesLists: BatchPayload
        @aws_subscribe(
            mutations: ["updateManyAwsDevopsServicesLists"]
        )

    # Triggered from `deleteManyAwsDevopsServicesLists` mutation.
    onDeletedManyAwsDevopsServicesLists: BatchPayload
        @aws_subscribe(
            mutations: ["deleteManyAwsDevopsServicesLists"]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyAwsDevopsServicesLists: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyAwsDevopsServicesLists"
                "updateManyAwsDevopsServicesLists"
                "deleteManyAwsDevopsServicesLists"
            ]
        )

    # Triggered from `createCockpitTypes` mutation (excl. `createManyCockpitTypes` and `upsertCockpitTypes`).
    onCreatedCockpitTypes(id: Int): CockpitTypes
        @aws_subscribe(mutations: ["createCockpitTypes"])

    # Triggered from `updateCockpitTypes` mutation (excl. `updateManyCockpitTypes` and `upsertCockpitTypes`).
    onUpdatedCockpitTypes(id: Int): CockpitTypes
        @aws_subscribe(mutations: ["updateCockpitTypes"])

    # Triggered from `upsertCockpitTypes` mutation.
    onUpsertedCockpitTypes(id: Int): CockpitTypes
        @aws_subscribe(mutations: ["upsertCockpitTypes"])

    # Triggered from `deleteCockpitTypes` mutation (excl. `deleteManyCockpitTypes`).
    onDeletedCockpitTypes(id: Int): CockpitTypes
        @aws_subscribe(mutations: ["deleteCockpitTypes"])

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyCockpitTypes`).
    onMutatedCockpitTypes(id: Int): CockpitTypes
        @aws_subscribe(
            mutations: [
                "createCockpitTypes"
                "updateCockpitTypes"
                "upsertCockpitTypes"
                "deleteCockpitTypes"
            ]
        )

    # Triggered from `createManyCockpitTypes` mutation.
    onCreatedManyCockpitTypes: BatchPayload
        @aws_subscribe(
            mutations: ["createManyCockpitTypes"]
        )

    # Triggered from `updateManyCockpitTypes` mutation.
    onUpdatedManyCockpitTypes: BatchPayload
        @aws_subscribe(
            mutations: ["updateManyCockpitTypes"]
        )

    # Triggered from `deleteManyCockpitTypes` mutation.
    onDeletedManyCockpitTypes: BatchPayload
        @aws_subscribe(
            mutations: ["deleteManyCockpitTypes"]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyCockpitTypes: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyCockpitTypes"
                "updateManyCockpitTypes"
                "deleteManyCockpitTypes"
            ]
        )

    # Triggered from `createCodepipelineEvents` mutation (excl. `createManyCodepipelineEvents` and `upsertCodepipelineEvents`).
    onCreatedCodepipelineEvents(
        id: Int
    ): CodepipelineEvents
        @aws_subscribe(
            mutations: ["createCodepipelineEvents"]
        )

    # Triggered from `updateCodepipelineEvents` mutation (excl. `updateManyCodepipelineEvents` and `upsertCodepipelineEvents`).
    onUpdatedCodepipelineEvents(
        id: Int
    ): CodepipelineEvents
        @aws_subscribe(
            mutations: ["updateCodepipelineEvents"]
        )

    # Triggered from `upsertCodepipelineEvents` mutation.
    onUpsertedCodepipelineEvents(
        id: Int
    ): CodepipelineEvents
        @aws_subscribe(
            mutations: ["upsertCodepipelineEvents"]
        )

    # Triggered from `deleteCodepipelineEvents` mutation (excl. `deleteManyCodepipelineEvents`).
    onDeletedCodepipelineEvents(
        id: Int
    ): CodepipelineEvents
        @aws_subscribe(
            mutations: ["deleteCodepipelineEvents"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyCodepipelineEvents`).
    onMutatedCodepipelineEvents(
        id: Int
    ): CodepipelineEvents
        @aws_subscribe(
            mutations: [
                "createCodepipelineEvents"
                "updateCodepipelineEvents"
                "upsertCodepipelineEvents"
                "deleteCodepipelineEvents"
            ]
        )

    # Triggered from `createManyCodepipelineEvents` mutation.
    onCreatedManyCodepipelineEvents: BatchPayload
        @aws_subscribe(
            mutations: ["createManyCodepipelineEvents"]
        )

    # Triggered from `updateManyCodepipelineEvents` mutation.
    onUpdatedManyCodepipelineEvents: BatchPayload
        @aws_subscribe(
            mutations: ["updateManyCodepipelineEvents"]
        )

    # Triggered from `deleteManyCodepipelineEvents` mutation.
    onDeletedManyCodepipelineEvents: BatchPayload
        @aws_subscribe(
            mutations: ["deleteManyCodepipelineEvents"]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyCodepipelineEvents: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyCodepipelineEvents"
                "updateManyCodepipelineEvents"
                "deleteManyCodepipelineEvents"
            ]
        )

    # Triggered from `createDevopsCostlyResourceAlarm` mutation (excl.
    # `createManyDevopsCostlyResourceAlarms` and `upsertDevopsCostlyResourceAlarm`).
    onCreatedDevopsCostlyResourceAlarm(
        id: Int
        alarm_name: String
    ): DevopsCostlyResourceAlarm
        @aws_subscribe(
            mutations: ["createDevopsCostlyResourceAlarm"]
        )

    # Triggered from `updateDevopsCostlyResourceAlarm` mutation (excl.
    # `updateManyDevopsCostlyResourceAlarms` and `upsertDevopsCostlyResourceAlarm`).
    onUpdatedDevopsCostlyResourceAlarm(
        id: Int
        alarm_name: String
    ): DevopsCostlyResourceAlarm
        @aws_subscribe(
            mutations: ["updateDevopsCostlyResourceAlarm"]
        )

    # Triggered from `upsertDevopsCostlyResourceAlarm` mutation.
    onUpsertedDevopsCostlyResourceAlarm(
        id: Int
        alarm_name: String
    ): DevopsCostlyResourceAlarm
        @aws_subscribe(
            mutations: ["upsertDevopsCostlyResourceAlarm"]
        )

    # Triggered from `deleteDevopsCostlyResourceAlarm` mutation (excl. `deleteManyDevopsCostlyResourceAlarms`).
    onDeletedDevopsCostlyResourceAlarm(
        id: Int
        alarm_name: String
    ): DevopsCostlyResourceAlarm
        @aws_subscribe(
            mutations: ["deleteDevopsCostlyResourceAlarm"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceAlarms`).
    onMutatedDevopsCostlyResourceAlarm(
        id: Int
        alarm_name: String
    ): DevopsCostlyResourceAlarm
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceAlarm"
                "updateDevopsCostlyResourceAlarm"
                "upsertDevopsCostlyResourceAlarm"
                "deleteDevopsCostlyResourceAlarm"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceAlarms` mutation.
    onCreatedManyDevopsCostlyResourceAlarms: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceAlarms"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceAlarms` mutation.
    onUpdatedManyDevopsCostlyResourceAlarms: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceAlarms"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceAlarms` mutation.
    onDeletedManyDevopsCostlyResourceAlarms: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceAlarms"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceAlarms: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceAlarms"
                "updateManyDevopsCostlyResourceAlarms"
                "deleteManyDevopsCostlyResourceAlarms"
            ]
        )

    # Triggered from `createDevopsCostlyResourceCloudtrail` mutation (excl.
    # `createManyDevopsCostlyResourceCloudtrails` and
    # `upsertDevopsCostlyResourceCloudtrail`).
    onCreatedDevopsCostlyResourceCloudtrail(
        id: Int
        trail_name: String
    ): DevopsCostlyResourceCloudtrail
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceCloudtrail"
            ]
        )

    # Triggered from `updateDevopsCostlyResourceCloudtrail` mutation (excl.
    # `updateManyDevopsCostlyResourceCloudtrails` and
    # `upsertDevopsCostlyResourceCloudtrail`).
    onUpdatedDevopsCostlyResourceCloudtrail(
        id: Int
        trail_name: String
    ): DevopsCostlyResourceCloudtrail
        @aws_subscribe(
            mutations: [
                "updateDevopsCostlyResourceCloudtrail"
            ]
        )

    # Triggered from `upsertDevopsCostlyResourceCloudtrail` mutation.
    onUpsertedDevopsCostlyResourceCloudtrail(
        id: Int
        trail_name: String
    ): DevopsCostlyResourceCloudtrail
        @aws_subscribe(
            mutations: [
                "upsertDevopsCostlyResourceCloudtrail"
            ]
        )

    # Triggered from `deleteDevopsCostlyResourceCloudtrail` mutation (excl. `deleteManyDevopsCostlyResourceCloudtrails`).
    onDeletedDevopsCostlyResourceCloudtrail(
        id: Int
        trail_name: String
    ): DevopsCostlyResourceCloudtrail
        @aws_subscribe(
            mutations: [
                "deleteDevopsCostlyResourceCloudtrail"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceCloudtrails`).
    onMutatedDevopsCostlyResourceCloudtrail(
        id: Int
        trail_name: String
    ): DevopsCostlyResourceCloudtrail
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceCloudtrail"
                "updateDevopsCostlyResourceCloudtrail"
                "upsertDevopsCostlyResourceCloudtrail"
                "deleteDevopsCostlyResourceCloudtrail"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceCloudtrails` mutation.
    onCreatedManyDevopsCostlyResourceCloudtrails: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceCloudtrails"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceCloudtrails` mutation.
    onUpdatedManyDevopsCostlyResourceCloudtrails: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceCloudtrails"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceCloudtrails` mutation.
    onDeletedManyDevopsCostlyResourceCloudtrails: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceCloudtrails"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceCloudtrails: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceCloudtrails"
                "updateManyDevopsCostlyResourceCloudtrails"
                "deleteManyDevopsCostlyResourceCloudtrails"
            ]
        )

    # Triggered from `createDevopsCostlyResourceCodebuild` mutation (excl.
    # `createManyDevopsCostlyResourceCodebuilds` and
    # `upsertDevopsCostlyResourceCodebuild`).
    onCreatedDevopsCostlyResourceCodebuild(
        id: Int
        project_name: String
    ): DevopsCostlyResourceCodebuild
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceCodebuild"
            ]
        )

    # Triggered from `updateDevopsCostlyResourceCodebuild` mutation (excl.
    # `updateManyDevopsCostlyResourceCodebuilds` and
    # `upsertDevopsCostlyResourceCodebuild`).
    onUpdatedDevopsCostlyResourceCodebuild(
        id: Int
        project_name: String
    ): DevopsCostlyResourceCodebuild
        @aws_subscribe(
            mutations: [
                "updateDevopsCostlyResourceCodebuild"
            ]
        )

    # Triggered from `upsertDevopsCostlyResourceCodebuild` mutation.
    onUpsertedDevopsCostlyResourceCodebuild(
        id: Int
        project_name: String
    ): DevopsCostlyResourceCodebuild
        @aws_subscribe(
            mutations: [
                "upsertDevopsCostlyResourceCodebuild"
            ]
        )

    # Triggered from `deleteDevopsCostlyResourceCodebuild` mutation (excl. `deleteManyDevopsCostlyResourceCodebuilds`).
    onDeletedDevopsCostlyResourceCodebuild(
        id: Int
        project_name: String
    ): DevopsCostlyResourceCodebuild
        @aws_subscribe(
            mutations: [
                "deleteDevopsCostlyResourceCodebuild"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceCodebuilds`).
    onMutatedDevopsCostlyResourceCodebuild(
        id: Int
        project_name: String
    ): DevopsCostlyResourceCodebuild
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceCodebuild"
                "updateDevopsCostlyResourceCodebuild"
                "upsertDevopsCostlyResourceCodebuild"
                "deleteDevopsCostlyResourceCodebuild"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceCodebuilds` mutation.
    onCreatedManyDevopsCostlyResourceCodebuilds: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceCodebuilds"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceCodebuilds` mutation.
    onUpdatedManyDevopsCostlyResourceCodebuilds: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceCodebuilds"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceCodebuilds` mutation.
    onDeletedManyDevopsCostlyResourceCodebuilds: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceCodebuilds"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceCodebuilds: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceCodebuilds"
                "updateManyDevopsCostlyResourceCodebuilds"
                "deleteManyDevopsCostlyResourceCodebuilds"
            ]
        )

    # Triggered from `createDevopsCostlyResourceCodepipeline` mutation (excl.
    # `createManyDevopsCostlyResourceCodepipelines` and
    # `upsertDevopsCostlyResourceCodepipeline`).
    onCreatedDevopsCostlyResourceCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsCostlyResourceCodepipeline
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceCodepipeline"
            ]
        )

    # Triggered from `updateDevopsCostlyResourceCodepipeline` mutation (excl.
    # `updateManyDevopsCostlyResourceCodepipelines` and
    # `upsertDevopsCostlyResourceCodepipeline`).
    onUpdatedDevopsCostlyResourceCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsCostlyResourceCodepipeline
        @aws_subscribe(
            mutations: [
                "updateDevopsCostlyResourceCodepipeline"
            ]
        )

    # Triggered from `upsertDevopsCostlyResourceCodepipeline` mutation.
    onUpsertedDevopsCostlyResourceCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsCostlyResourceCodepipeline
        @aws_subscribe(
            mutations: [
                "upsertDevopsCostlyResourceCodepipeline"
            ]
        )

    # Triggered from `deleteDevopsCostlyResourceCodepipeline` mutation (excl. `deleteManyDevopsCostlyResourceCodepipelines`).
    onDeletedDevopsCostlyResourceCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsCostlyResourceCodepipeline
        @aws_subscribe(
            mutations: [
                "deleteDevopsCostlyResourceCodepipeline"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceCodepipelines`).
    onMutatedDevopsCostlyResourceCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsCostlyResourceCodepipeline
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceCodepipeline"
                "updateDevopsCostlyResourceCodepipeline"
                "upsertDevopsCostlyResourceCodepipeline"
                "deleteDevopsCostlyResourceCodepipeline"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceCodepipelines` mutation.
    onCreatedManyDevopsCostlyResourceCodepipelines: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceCodepipelines"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceCodepipelines` mutation.
    onUpdatedManyDevopsCostlyResourceCodepipelines: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceCodepipelines"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceCodepipelines` mutation.
    onDeletedManyDevopsCostlyResourceCodepipelines: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceCodepipelines"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceCodepipelines: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceCodepipelines"
                "updateManyDevopsCostlyResourceCodepipelines"
                "deleteManyDevopsCostlyResourceCodepipelines"
            ]
        )

    # Triggered from `createDevopsCostlyResourceLambda` mutation (excl.
    # `createManyDevopsCostlyResourceLambdas` and
    # `upsertDevopsCostlyResourceLambda`).
    onCreatedDevopsCostlyResourceLambda(
        id: Int
        function_name: String
    ): DevopsCostlyResourceLambda
        @aws_subscribe(
            mutations: ["createDevopsCostlyResourceLambda"]
        )

    # Triggered from `updateDevopsCostlyResourceLambda` mutation (excl.
    # `updateManyDevopsCostlyResourceLambdas` and
    # `upsertDevopsCostlyResourceLambda`).
    onUpdatedDevopsCostlyResourceLambda(
        id: Int
        function_name: String
    ): DevopsCostlyResourceLambda
        @aws_subscribe(
            mutations: ["updateDevopsCostlyResourceLambda"]
        )

    # Triggered from `upsertDevopsCostlyResourceLambda` mutation.
    onUpsertedDevopsCostlyResourceLambda(
        id: Int
        function_name: String
    ): DevopsCostlyResourceLambda
        @aws_subscribe(
            mutations: ["upsertDevopsCostlyResourceLambda"]
        )

    # Triggered from `deleteDevopsCostlyResourceLambda` mutation (excl. `deleteManyDevopsCostlyResourceLambdas`).
    onDeletedDevopsCostlyResourceLambda(
        id: Int
        function_name: String
    ): DevopsCostlyResourceLambda
        @aws_subscribe(
            mutations: ["deleteDevopsCostlyResourceLambda"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceLambdas`).
    onMutatedDevopsCostlyResourceLambda(
        id: Int
        function_name: String
    ): DevopsCostlyResourceLambda
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceLambda"
                "updateDevopsCostlyResourceLambda"
                "upsertDevopsCostlyResourceLambda"
                "deleteDevopsCostlyResourceLambda"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceLambdas` mutation.
    onCreatedManyDevopsCostlyResourceLambdas: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceLambdas"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceLambdas` mutation.
    onUpdatedManyDevopsCostlyResourceLambdas: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceLambdas"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceLambdas` mutation.
    onDeletedManyDevopsCostlyResourceLambdas: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceLambdas"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceLambdas: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceLambdas"
                "updateManyDevopsCostlyResourceLambdas"
                "deleteManyDevopsCostlyResourceLambdas"
            ]
        )

    # Triggered from `createDevopsCostlyResourceSsm` mutation (excl.
    # `createManyDevopsCostlyResourceSsms` and `upsertDevopsCostlyResourceSsm`).
    onCreatedDevopsCostlyResourceSsm(
        id: Int
    ): DevopsCostlyResourceSsm
        @aws_subscribe(
            mutations: ["createDevopsCostlyResourceSsm"]
        )

    # Triggered from `updateDevopsCostlyResourceSsm` mutation (excl.
    # `updateManyDevopsCostlyResourceSsms` and `upsertDevopsCostlyResourceSsm`).
    onUpdatedDevopsCostlyResourceSsm(
        id: Int
    ): DevopsCostlyResourceSsm
        @aws_subscribe(
            mutations: ["updateDevopsCostlyResourceSsm"]
        )

    # Triggered from `upsertDevopsCostlyResourceSsm` mutation.
    onUpsertedDevopsCostlyResourceSsm(
        id: Int
    ): DevopsCostlyResourceSsm
        @aws_subscribe(
            mutations: ["upsertDevopsCostlyResourceSsm"]
        )

    # Triggered from `deleteDevopsCostlyResourceSsm` mutation (excl. `deleteManyDevopsCostlyResourceSsms`).
    onDeletedDevopsCostlyResourceSsm(
        id: Int
    ): DevopsCostlyResourceSsm
        @aws_subscribe(
            mutations: ["deleteDevopsCostlyResourceSsm"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceSsms`).
    onMutatedDevopsCostlyResourceSsm(
        id: Int
    ): DevopsCostlyResourceSsm
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceSsm"
                "updateDevopsCostlyResourceSsm"
                "upsertDevopsCostlyResourceSsm"
                "deleteDevopsCostlyResourceSsm"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceSsms` mutation.
    onCreatedManyDevopsCostlyResourceSsms: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceSsms"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceSsms` mutation.
    onUpdatedManyDevopsCostlyResourceSsms: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceSsms"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceSsms` mutation.
    onDeletedManyDevopsCostlyResourceSsms: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceSsms"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceSsms: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceSsms"
                "updateManyDevopsCostlyResourceSsms"
                "deleteManyDevopsCostlyResourceSsms"
            ]
        )

    # Triggered from `createDevopsDefaultServicePriority` mutation (excl.
    # `createManyDevopsDefaultServicePriorities` and
    # `upsertDevopsDefaultServicePriority`).
    onCreatedDevopsDefaultServicePriority(
        id: Int
        resource_type: String
    ): DevopsDefaultServicePriority
        @aws_subscribe(
            mutations: [
                "createDevopsDefaultServicePriority"
            ]
        )

    # Triggered from `updateDevopsDefaultServicePriority` mutation (excl.
    # `updateManyDevopsDefaultServicePriorities` and
    # `upsertDevopsDefaultServicePriority`).
    onUpdatedDevopsDefaultServicePriority(
        id: Int
        resource_type: String
    ): DevopsDefaultServicePriority
        @aws_subscribe(
            mutations: [
                "updateDevopsDefaultServicePriority"
            ]
        )

    # Triggered from `upsertDevopsDefaultServicePriority` mutation.
    onUpsertedDevopsDefaultServicePriority(
        id: Int
        resource_type: String
    ): DevopsDefaultServicePriority
        @aws_subscribe(
            mutations: [
                "upsertDevopsDefaultServicePriority"
            ]
        )

    # Triggered from `deleteDevopsDefaultServicePriority` mutation (excl. `deleteManyDevopsDefaultServicePriorities`).
    onDeletedDevopsDefaultServicePriority(
        id: Int
        resource_type: String
    ): DevopsDefaultServicePriority
        @aws_subscribe(
            mutations: [
                "deleteDevopsDefaultServicePriority"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsDefaultServicePriorities`).
    onMutatedDevopsDefaultServicePriority(
        id: Int
        resource_type: String
    ): DevopsDefaultServicePriority
        @aws_subscribe(
            mutations: [
                "createDevopsDefaultServicePriority"
                "updateDevopsDefaultServicePriority"
                "upsertDevopsDefaultServicePriority"
                "deleteDevopsDefaultServicePriority"
            ]
        )

    # Triggered from `createManyDevopsDefaultServicePriorities` mutation.
    onCreatedManyDevopsDefaultServicePriorities: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsDefaultServicePriorities"
            ]
        )

    # Triggered from `updateManyDevopsDefaultServicePriorities` mutation.
    onUpdatedManyDevopsDefaultServicePriorities: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsDefaultServicePriorities"
            ]
        )

    # Triggered from `deleteManyDevopsDefaultServicePriorities` mutation.
    onDeletedManyDevopsDefaultServicePriorities: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsDefaultServicePriorities"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsDefaultServicePriorities: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsDefaultServicePriorities"
                "updateManyDevopsDefaultServicePriorities"
                "deleteManyDevopsDefaultServicePriorities"
            ]
        )

    # Triggered from `createDevopsRegionPriority` mutation (excl.
    # `createManyDevopsRegionPriorities` and `upsertDevopsRegionPriority`).
    onCreatedDevopsRegionPriority(
        id: Int
        region: String
    ): DevopsRegionPriority
        @aws_subscribe(
            mutations: ["createDevopsRegionPriority"]
        )

    # Triggered from `updateDevopsRegionPriority` mutation (excl.
    # `updateManyDevopsRegionPriorities` and `upsertDevopsRegionPriority`).
    onUpdatedDevopsRegionPriority(
        id: Int
        region: String
    ): DevopsRegionPriority
        @aws_subscribe(
            mutations: ["updateDevopsRegionPriority"]
        )

    # Triggered from `upsertDevopsRegionPriority` mutation.
    onUpsertedDevopsRegionPriority(
        id: Int
        region: String
    ): DevopsRegionPriority
        @aws_subscribe(
            mutations: ["upsertDevopsRegionPriority"]
        )

    # Triggered from `deleteDevopsRegionPriority` mutation (excl. `deleteManyDevopsRegionPriorities`).
    onDeletedDevopsRegionPriority(
        id: Int
        region: String
    ): DevopsRegionPriority
        @aws_subscribe(
            mutations: ["deleteDevopsRegionPriority"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsRegionPriorities`).
    onMutatedDevopsRegionPriority(
        id: Int
        region: String
    ): DevopsRegionPriority
        @aws_subscribe(
            mutations: [
                "createDevopsRegionPriority"
                "updateDevopsRegionPriority"
                "upsertDevopsRegionPriority"
                "deleteDevopsRegionPriority"
            ]
        )

    # Triggered from `createManyDevopsRegionPriorities` mutation.
    onCreatedManyDevopsRegionPriorities: BatchPayload
        @aws_subscribe(
            mutations: ["createManyDevopsRegionPriorities"]
        )

    # Triggered from `updateManyDevopsRegionPriorities` mutation.
    onUpdatedManyDevopsRegionPriorities: BatchPayload
        @aws_subscribe(
            mutations: ["updateManyDevopsRegionPriorities"]
        )

    # Triggered from `deleteManyDevopsRegionPriorities` mutation.
    onDeletedManyDevopsRegionPriorities: BatchPayload
        @aws_subscribe(
            mutations: ["deleteManyDevopsRegionPriorities"]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsRegionPriorities: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsRegionPriorities"
                "updateManyDevopsRegionPriorities"
                "deleteManyDevopsRegionPriorities"
            ]
        )

    # Triggered from `createDevopsResourcePriorityAlarm` mutation (excl.
    # `createManyDevopsResourcePriorityAlarms` and
    # `upsertDevopsResourcePriorityAlarm`).
    onCreatedDevopsResourcePriorityAlarm(
        id: Int
        alarm_name: String
    ): DevopsResourcePriorityAlarm
        @aws_subscribe(
            mutations: ["createDevopsResourcePriorityAlarm"]
        )

    # Triggered from `updateDevopsResourcePriorityAlarm` mutation (excl.
    # `updateManyDevopsResourcePriorityAlarms` and
    # `upsertDevopsResourcePriorityAlarm`).
    onUpdatedDevopsResourcePriorityAlarm(
        id: Int
        alarm_name: String
    ): DevopsResourcePriorityAlarm
        @aws_subscribe(
            mutations: ["updateDevopsResourcePriorityAlarm"]
        )

    # Triggered from `upsertDevopsResourcePriorityAlarm` mutation.
    onUpsertedDevopsResourcePriorityAlarm(
        id: Int
        alarm_name: String
    ): DevopsResourcePriorityAlarm
        @aws_subscribe(
            mutations: ["upsertDevopsResourcePriorityAlarm"]
        )

    # Triggered from `deleteDevopsResourcePriorityAlarm` mutation (excl. `deleteManyDevopsResourcePriorityAlarms`).
    onDeletedDevopsResourcePriorityAlarm(
        id: Int
        alarm_name: String
    ): DevopsResourcePriorityAlarm
        @aws_subscribe(
            mutations: ["deleteDevopsResourcePriorityAlarm"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePriorityAlarms`).
    onMutatedDevopsResourcePriorityAlarm(
        id: Int
        alarm_name: String
    ): DevopsResourcePriorityAlarm
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityAlarm"
                "updateDevopsResourcePriorityAlarm"
                "upsertDevopsResourcePriorityAlarm"
                "deleteDevopsResourcePriorityAlarm"
            ]
        )

    # Triggered from `createManyDevopsResourcePriorityAlarms` mutation.
    onCreatedManyDevopsResourcePriorityAlarms: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityAlarms"
            ]
        )

    # Triggered from `updateManyDevopsResourcePriorityAlarms` mutation.
    onUpdatedManyDevopsResourcePriorityAlarms: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePriorityAlarms"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePriorityAlarms` mutation.
    onDeletedManyDevopsResourcePriorityAlarms: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePriorityAlarms"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePriorityAlarms: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityAlarms"
                "updateManyDevopsResourcePriorityAlarms"
                "deleteManyDevopsResourcePriorityAlarms"
            ]
        )

    # Triggered from `createDevopsResourcePriorityCloudtrail` mutation (excl.
    # `createManyDevopsResourcePriorityCloudtrails` and
    # `upsertDevopsResourcePriorityCloudtrail`).
    onCreatedDevopsResourcePriorityCloudtrail(
        id: Int
        trail_name: String
    ): DevopsResourcePriorityCloudtrail
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityCloudtrail"
            ]
        )

    # Triggered from `updateDevopsResourcePriorityCloudtrail` mutation (excl.
    # `updateManyDevopsResourcePriorityCloudtrails` and
    # `upsertDevopsResourcePriorityCloudtrail`).
    onUpdatedDevopsResourcePriorityCloudtrail(
        id: Int
        trail_name: String
    ): DevopsResourcePriorityCloudtrail
        @aws_subscribe(
            mutations: [
                "updateDevopsResourcePriorityCloudtrail"
            ]
        )

    # Triggered from `upsertDevopsResourcePriorityCloudtrail` mutation.
    onUpsertedDevopsResourcePriorityCloudtrail(
        id: Int
        trail_name: String
    ): DevopsResourcePriorityCloudtrail
        @aws_subscribe(
            mutations: [
                "upsertDevopsResourcePriorityCloudtrail"
            ]
        )

    # Triggered from `deleteDevopsResourcePriorityCloudtrail` mutation (excl. `deleteManyDevopsResourcePriorityCloudtrails`).
    onDeletedDevopsResourcePriorityCloudtrail(
        id: Int
        trail_name: String
    ): DevopsResourcePriorityCloudtrail
        @aws_subscribe(
            mutations: [
                "deleteDevopsResourcePriorityCloudtrail"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePriorityCloudtrails`).
    onMutatedDevopsResourcePriorityCloudtrail(
        id: Int
        trail_name: String
    ): DevopsResourcePriorityCloudtrail
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityCloudtrail"
                "updateDevopsResourcePriorityCloudtrail"
                "upsertDevopsResourcePriorityCloudtrail"
                "deleteDevopsResourcePriorityCloudtrail"
            ]
        )

    # Triggered from `createManyDevopsResourcePriorityCloudtrails` mutation.
    onCreatedManyDevopsResourcePriorityCloudtrails: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityCloudtrails"
            ]
        )

    # Triggered from `updateManyDevopsResourcePriorityCloudtrails` mutation.
    onUpdatedManyDevopsResourcePriorityCloudtrails: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePriorityCloudtrails"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePriorityCloudtrails` mutation.
    onDeletedManyDevopsResourcePriorityCloudtrails: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePriorityCloudtrails"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePriorityCloudtrails: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityCloudtrails"
                "updateManyDevopsResourcePriorityCloudtrails"
                "deleteManyDevopsResourcePriorityCloudtrails"
            ]
        )

    # Triggered from `createDevopsResourcePriorityCodebuild` mutation (excl.
    # `createManyDevopsResourcePriorityCodebuilds` and
    # `upsertDevopsResourcePriorityCodebuild`).
    onCreatedDevopsResourcePriorityCodebuild(
        id: Int
        project_name: String
    ): DevopsResourcePriorityCodebuild
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityCodebuild"
            ]
        )

    # Triggered from `updateDevopsResourcePriorityCodebuild` mutation (excl.
    # `updateManyDevopsResourcePriorityCodebuilds` and
    # `upsertDevopsResourcePriorityCodebuild`).
    onUpdatedDevopsResourcePriorityCodebuild(
        id: Int
        project_name: String
    ): DevopsResourcePriorityCodebuild
        @aws_subscribe(
            mutations: [
                "updateDevopsResourcePriorityCodebuild"
            ]
        )

    # Triggered from `upsertDevopsResourcePriorityCodebuild` mutation.
    onUpsertedDevopsResourcePriorityCodebuild(
        id: Int
        project_name: String
    ): DevopsResourcePriorityCodebuild
        @aws_subscribe(
            mutations: [
                "upsertDevopsResourcePriorityCodebuild"
            ]
        )

    # Triggered from `deleteDevopsResourcePriorityCodebuild` mutation (excl. `deleteManyDevopsResourcePriorityCodebuilds`).
    onDeletedDevopsResourcePriorityCodebuild(
        id: Int
        project_name: String
    ): DevopsResourcePriorityCodebuild
        @aws_subscribe(
            mutations: [
                "deleteDevopsResourcePriorityCodebuild"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePriorityCodebuilds`).
    onMutatedDevopsResourcePriorityCodebuild(
        id: Int
        project_name: String
    ): DevopsResourcePriorityCodebuild
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityCodebuild"
                "updateDevopsResourcePriorityCodebuild"
                "upsertDevopsResourcePriorityCodebuild"
                "deleteDevopsResourcePriorityCodebuild"
            ]
        )

    # Triggered from `createManyDevopsResourcePriorityCodebuilds` mutation.
    onCreatedManyDevopsResourcePriorityCodebuilds: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityCodebuilds"
            ]
        )

    # Triggered from `updateManyDevopsResourcePriorityCodebuilds` mutation.
    onUpdatedManyDevopsResourcePriorityCodebuilds: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePriorityCodebuilds"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePriorityCodebuilds` mutation.
    onDeletedManyDevopsResourcePriorityCodebuilds: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePriorityCodebuilds"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePriorityCodebuilds: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityCodebuilds"
                "updateManyDevopsResourcePriorityCodebuilds"
                "deleteManyDevopsResourcePriorityCodebuilds"
            ]
        )

    # Triggered from `createDevopsResourcePriorityCodepipeline` mutation (excl.
    # `createManyDevopsResourcePriorityCodepipelines` and
    # `upsertDevopsResourcePriorityCodepipeline`).
    onCreatedDevopsResourcePriorityCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsResourcePriorityCodepipeline
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityCodepipeline"
            ]
        )

    # Triggered from `updateDevopsResourcePriorityCodepipeline` mutation (excl.
    # `updateManyDevopsResourcePriorityCodepipelines` and
    # `upsertDevopsResourcePriorityCodepipeline`).
    onUpdatedDevopsResourcePriorityCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsResourcePriorityCodepipeline
        @aws_subscribe(
            mutations: [
                "updateDevopsResourcePriorityCodepipeline"
            ]
        )

    # Triggered from `upsertDevopsResourcePriorityCodepipeline` mutation.
    onUpsertedDevopsResourcePriorityCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsResourcePriorityCodepipeline
        @aws_subscribe(
            mutations: [
                "upsertDevopsResourcePriorityCodepipeline"
            ]
        )

    # Triggered from `deleteDevopsResourcePriorityCodepipeline` mutation (excl.
    # `deleteManyDevopsResourcePriorityCodepipelines`).
    onDeletedDevopsResourcePriorityCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsResourcePriorityCodepipeline
        @aws_subscribe(
            mutations: [
                "deleteDevopsResourcePriorityCodepipeline"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePriorityCodepipelines`).
    onMutatedDevopsResourcePriorityCodepipeline(
        id: Int
        pipeline_name: String
    ): DevopsResourcePriorityCodepipeline
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityCodepipeline"
                "updateDevopsResourcePriorityCodepipeline"
                "upsertDevopsResourcePriorityCodepipeline"
                "deleteDevopsResourcePriorityCodepipeline"
            ]
        )

    # Triggered from `createManyDevopsResourcePriorityCodepipelines` mutation.
    onCreatedManyDevopsResourcePriorityCodepipelines: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityCodepipelines"
            ]
        )

    # Triggered from `updateManyDevopsResourcePriorityCodepipelines` mutation.
    onUpdatedManyDevopsResourcePriorityCodepipelines: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePriorityCodepipelines"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePriorityCodepipelines` mutation.
    onDeletedManyDevopsResourcePriorityCodepipelines: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePriorityCodepipelines"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePriorityCodepipelines: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityCodepipelines"
                "updateManyDevopsResourcePriorityCodepipelines"
                "deleteManyDevopsResourcePriorityCodepipelines"
            ]
        )

    # Triggered from `createDevopsResourcePriorityLambda` mutation (excl.
    # `createManyDevopsResourcePriorityLambdas` and
    # `upsertDevopsResourcePriorityLambda`).
    onCreatedDevopsResourcePriorityLambda(
        id: Int
        function_name: String
    ): DevopsResourcePriorityLambda
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityLambda"
            ]
        )

    # Triggered from `updateDevopsResourcePriorityLambda` mutation (excl.
    # `updateManyDevopsResourcePriorityLambdas` and
    # `upsertDevopsResourcePriorityLambda`).
    onUpdatedDevopsResourcePriorityLambda(
        id: Int
        function_name: String
    ): DevopsResourcePriorityLambda
        @aws_subscribe(
            mutations: [
                "updateDevopsResourcePriorityLambda"
            ]
        )

    # Triggered from `upsertDevopsResourcePriorityLambda` mutation.
    onUpsertedDevopsResourcePriorityLambda(
        id: Int
        function_name: String
    ): DevopsResourcePriorityLambda
        @aws_subscribe(
            mutations: [
                "upsertDevopsResourcePriorityLambda"
            ]
        )

    # Triggered from `deleteDevopsResourcePriorityLambda` mutation (excl. `deleteManyDevopsResourcePriorityLambdas`).
    onDeletedDevopsResourcePriorityLambda(
        id: Int
        function_name: String
    ): DevopsResourcePriorityLambda
        @aws_subscribe(
            mutations: [
                "deleteDevopsResourcePriorityLambda"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePriorityLambdas`).
    onMutatedDevopsResourcePriorityLambda(
        id: Int
        function_name: String
    ): DevopsResourcePriorityLambda
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityLambda"
                "updateDevopsResourcePriorityLambda"
                "upsertDevopsResourcePriorityLambda"
                "deleteDevopsResourcePriorityLambda"
            ]
        )

    # Triggered from `createManyDevopsResourcePriorityLambdas` mutation.
    onCreatedManyDevopsResourcePriorityLambdas: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityLambdas"
            ]
        )

    # Triggered from `updateManyDevopsResourcePriorityLambdas` mutation.
    onUpdatedManyDevopsResourcePriorityLambdas: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePriorityLambdas"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePriorityLambdas` mutation.
    onDeletedManyDevopsResourcePriorityLambdas: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePriorityLambdas"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePriorityLambdas: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityLambdas"
                "updateManyDevopsResourcePriorityLambdas"
                "deleteManyDevopsResourcePriorityLambdas"
            ]
        )

    # Triggered from `createDevopsResourcePrioritySsm` mutation (excl.
    # `createManyDevopsResourcePrioritySsms` and `upsertDevopsResourcePrioritySsm`).
    onCreatedDevopsResourcePrioritySsm(
        id: Int
    ): DevopsResourcePrioritySsm
        @aws_subscribe(
            mutations: ["createDevopsResourcePrioritySsm"]
        )

    # Triggered from `updateDevopsResourcePrioritySsm` mutation (excl.
    # `updateManyDevopsResourcePrioritySsms` and `upsertDevopsResourcePrioritySsm`).
    onUpdatedDevopsResourcePrioritySsm(
        id: Int
    ): DevopsResourcePrioritySsm
        @aws_subscribe(
            mutations: ["updateDevopsResourcePrioritySsm"]
        )

    # Triggered from `upsertDevopsResourcePrioritySsm` mutation.
    onUpsertedDevopsResourcePrioritySsm(
        id: Int
    ): DevopsResourcePrioritySsm
        @aws_subscribe(
            mutations: ["upsertDevopsResourcePrioritySsm"]
        )

    # Triggered from `deleteDevopsResourcePrioritySsm` mutation (excl. `deleteManyDevopsResourcePrioritySsms`).
    onDeletedDevopsResourcePrioritySsm(
        id: Int
    ): DevopsResourcePrioritySsm
        @aws_subscribe(
            mutations: ["deleteDevopsResourcePrioritySsm"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePrioritySsms`).
    onMutatedDevopsResourcePrioritySsm(
        id: Int
    ): DevopsResourcePrioritySsm
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePrioritySsm"
                "updateDevopsResourcePrioritySsm"
                "upsertDevopsResourcePrioritySsm"
                "deleteDevopsResourcePrioritySsm"
            ]
        )

    # Triggered from `createManyDevopsResourcePrioritySsms` mutation.
    onCreatedManyDevopsResourcePrioritySsms: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePrioritySsms"
            ]
        )

    # Triggered from `updateManyDevopsResourcePrioritySsms` mutation.
    onUpdatedManyDevopsResourcePrioritySsms: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePrioritySsms"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePrioritySsms` mutation.
    onDeletedManyDevopsResourcePrioritySsms: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePrioritySsms"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePrioritySsms: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePrioritySsms"
                "updateManyDevopsResourcePrioritySsms"
                "deleteManyDevopsResourcePrioritySsms"
            ]
        )

    # Triggered from `createDevopsResourcePriorityTags` mutation (excl.
    # `createManyDevopsResourcePriorityTags` and
    # `upsertDevopsResourcePriorityTags`).
    onCreatedDevopsResourcePriorityTags(
        id: Int
    ): DevopsResourcePriorityTags
        @aws_subscribe(
            mutations: ["createDevopsResourcePriorityTags"]
        )

    # Triggered from `updateDevopsResourcePriorityTags` mutation (excl.
    # `updateManyDevopsResourcePriorityTags` and
    # `upsertDevopsResourcePriorityTags`).
    onUpdatedDevopsResourcePriorityTags(
        id: Int
    ): DevopsResourcePriorityTags
        @aws_subscribe(
            mutations: ["updateDevopsResourcePriorityTags"]
        )

    # Triggered from `upsertDevopsResourcePriorityTags` mutation.
    onUpsertedDevopsResourcePriorityTags(
        id: Int
    ): DevopsResourcePriorityTags
        @aws_subscribe(
            mutations: ["upsertDevopsResourcePriorityTags"]
        )

    # Triggered from `deleteDevopsResourcePriorityTags` mutation (excl. `deleteManyDevopsResourcePriorityTags`).
    onDeletedDevopsResourcePriorityTags(
        id: Int
    ): DevopsResourcePriorityTags
        @aws_subscribe(
            mutations: ["deleteDevopsResourcePriorityTags"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePriorityTags`).
    onMutatedDevopsResourcePriorityTags(
        id: Int
    ): DevopsResourcePriorityTags
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityTags"
                "updateDevopsResourcePriorityTags"
                "upsertDevopsResourcePriorityTags"
                "deleteDevopsResourcePriorityTags"
            ]
        )

    # Triggered from `createManyDevopsResourcePriorityTags` mutation.
    onCreatedManyDevopsResourcePriorityTags: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityTags"
            ]
        )

    # Triggered from `updateManyDevopsResourcePriorityTags` mutation.
    onUpdatedManyDevopsResourcePriorityTags: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePriorityTags"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePriorityTags` mutation.
    onDeletedManyDevopsResourcePriorityTags: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePriorityTags"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePriorityTags: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityTags"
                "updateManyDevopsResourcePriorityTags"
                "deleteManyDevopsResourcePriorityTags"
            ]
        )

    # Triggered from `createDevopsRulesTable` mutation (excl. `createManyDevopsRulesTables` and `upsertDevopsRulesTable`).
    onCreatedDevopsRulesTable(
        rule_id: Int
    ): DevopsRulesTable
        @aws_subscribe(
            mutations: ["createDevopsRulesTable"]
        )

    # Triggered from `updateDevopsRulesTable` mutation (excl. `updateManyDevopsRulesTables` and `upsertDevopsRulesTable`).
    onUpdatedDevopsRulesTable(
        rule_id: Int
    ): DevopsRulesTable
        @aws_subscribe(
            mutations: ["updateDevopsRulesTable"]
        )

    # Triggered from `upsertDevopsRulesTable` mutation.
    onUpsertedDevopsRulesTable(
        rule_id: Int
    ): DevopsRulesTable
        @aws_subscribe(
            mutations: ["upsertDevopsRulesTable"]
        )

    # Triggered from `deleteDevopsRulesTable` mutation (excl. `deleteManyDevopsRulesTables`).
    onDeletedDevopsRulesTable(
        rule_id: Int
    ): DevopsRulesTable
        @aws_subscribe(
            mutations: ["deleteDevopsRulesTable"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsRulesTables`).
    onMutatedDevopsRulesTable(
        rule_id: Int
    ): DevopsRulesTable
        @aws_subscribe(
            mutations: [
                "createDevopsRulesTable"
                "updateDevopsRulesTable"
                "upsertDevopsRulesTable"
                "deleteDevopsRulesTable"
            ]
        )

    # Triggered from `createManyDevopsRulesTables` mutation.
    onCreatedManyDevopsRulesTables: BatchPayload
        @aws_subscribe(
            mutations: ["createManyDevopsRulesTables"]
        )

    # Triggered from `updateManyDevopsRulesTables` mutation.
    onUpdatedManyDevopsRulesTables: BatchPayload
        @aws_subscribe(
            mutations: ["updateManyDevopsRulesTables"]
        )

    # Triggered from `deleteManyDevopsRulesTables` mutation.
    onDeletedManyDevopsRulesTables: BatchPayload
        @aws_subscribe(
            mutations: ["deleteManyDevopsRulesTables"]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsRulesTables: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsRulesTables"
                "updateManyDevopsRulesTables"
                "deleteManyDevopsRulesTables"
            ]
        )

    # Triggered from `createDevopsServicePriority` mutation (excl.
    # `createManyDevopsServicePriorities` and `upsertDevopsServicePriority`).
    onCreatedDevopsServicePriority(
        id: Int
        resource_type: String
    ): DevopsServicePriority
        @aws_subscribe(
            mutations: ["createDevopsServicePriority"]
        )

    # Triggered from `updateDevopsServicePriority` mutation (excl.
    # `updateManyDevopsServicePriorities` and `upsertDevopsServicePriority`).
    onUpdatedDevopsServicePriority(
        id: Int
        resource_type: String
    ): DevopsServicePriority
        @aws_subscribe(
            mutations: ["updateDevopsServicePriority"]
        )

    # Triggered from `upsertDevopsServicePriority` mutation.
    onUpsertedDevopsServicePriority(
        id: Int
        resource_type: String
    ): DevopsServicePriority
        @aws_subscribe(
            mutations: ["upsertDevopsServicePriority"]
        )

    # Triggered from `deleteDevopsServicePriority` mutation (excl. `deleteManyDevopsServicePriorities`).
    onDeletedDevopsServicePriority(
        id: Int
        resource_type: String
    ): DevopsServicePriority
        @aws_subscribe(
            mutations: ["deleteDevopsServicePriority"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsServicePriorities`).
    onMutatedDevopsServicePriority(
        id: Int
        resource_type: String
    ): DevopsServicePriority
        @aws_subscribe(
            mutations: [
                "createDevopsServicePriority"
                "updateDevopsServicePriority"
                "upsertDevopsServicePriority"
                "deleteDevopsServicePriority"
            ]
        )

    # Triggered from `createManyDevopsServicePriorities` mutation.
    onCreatedManyDevopsServicePriorities: BatchPayload
        @aws_subscribe(
            mutations: ["createManyDevopsServicePriorities"]
        )

    # Triggered from `updateManyDevopsServicePriorities` mutation.
    onUpdatedManyDevopsServicePriorities: BatchPayload
        @aws_subscribe(
            mutations: ["updateManyDevopsServicePriorities"]
        )

    # Triggered from `deleteManyDevopsServicePriorities` mutation.
    onDeletedManyDevopsServicePriorities: BatchPayload
        @aws_subscribe(
            mutations: ["deleteManyDevopsServicePriorities"]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsServicePriorities: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsServicePriorities"
                "updateManyDevopsServicePriorities"
                "deleteManyDevopsServicePriorities"
            ]
        )

    # Triggered from `createEvents` mutation (excl. `createManyEvents` and `upsertEvents`).
    onCreatedEvents(id: Int): Events
        @aws_subscribe(mutations: ["createEvents"])

    # Triggered from `updateEvents` mutation (excl. `updateManyEvents` and `upsertEvents`).
    onUpdatedEvents(id: Int): Events
        @aws_subscribe(mutations: ["updateEvents"])

    # Triggered from `upsertEvents` mutation.
    onUpsertedEvents(id: Int): Events
        @aws_subscribe(mutations: ["upsertEvents"])

    # Triggered from `deleteEvents` mutation (excl. `deleteManyEvents`).
    onDeletedEvents(id: Int): Events
        @aws_subscribe(mutations: ["deleteEvents"])

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyEvents`).
    onMutatedEvents(id: Int): Events
        @aws_subscribe(
            mutations: [
                "createEvents"
                "updateEvents"
                "upsertEvents"
                "deleteEvents"
            ]
        )

    # Triggered from `createManyEvents` mutation.
    onCreatedManyEvents: BatchPayload
        @aws_subscribe(mutations: ["createManyEvents"])

    # Triggered from `updateManyEvents` mutation.
    onUpdatedManyEvents: BatchPayload
        @aws_subscribe(mutations: ["updateManyEvents"])

    # Triggered from `deleteManyEvents` mutation.
    onDeletedManyEvents: BatchPayload
        @aws_subscribe(mutations: ["deleteManyEvents"])

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyEvents: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyEvents"
                "updateManyEvents"
                "deleteManyEvents"
            ]
        )

    # Triggered from `createReclassificationEvents` mutation (excl.
    # `createManyReclassificationEvents` and `upsertReclassificationEvents`).
    onCreatedReclassificationEvents(
        id: Int
    ): ReclassificationEvents
        @aws_subscribe(
            mutations: ["createReclassificationEvents"]
        )

    # Triggered from `updateReclassificationEvents` mutation (excl.
    # `updateManyReclassificationEvents` and `upsertReclassificationEvents`).
    onUpdatedReclassificationEvents(
        id: Int
    ): ReclassificationEvents
        @aws_subscribe(
            mutations: ["updateReclassificationEvents"]
        )

    # Triggered from `upsertReclassificationEvents` mutation.
    onUpsertedReclassificationEvents(
        id: Int
    ): ReclassificationEvents
        @aws_subscribe(
            mutations: ["upsertReclassificationEvents"]
        )

    # Triggered from `deleteReclassificationEvents` mutation (excl. `deleteManyReclassificationEvents`).
    onDeletedReclassificationEvents(
        id: Int
    ): ReclassificationEvents
        @aws_subscribe(
            mutations: ["deleteReclassificationEvents"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyReclassificationEvents`).
    onMutatedReclassificationEvents(
        id: Int
    ): ReclassificationEvents
        @aws_subscribe(
            mutations: [
                "createReclassificationEvents"
                "updateReclassificationEvents"
                "upsertReclassificationEvents"
                "deleteReclassificationEvents"
            ]
        )

    # Triggered from `createManyReclassificationEvents` mutation.
    onCreatedManyReclassificationEvents: BatchPayload
        @aws_subscribe(
            mutations: ["createManyReclassificationEvents"]
        )

    # Triggered from `updateManyReclassificationEvents` mutation.
    onUpdatedManyReclassificationEvents: BatchPayload
        @aws_subscribe(
            mutations: ["updateManyReclassificationEvents"]
        )

    # Triggered from `deleteManyReclassificationEvents` mutation.
    onDeletedManyReclassificationEvents: BatchPayload
        @aws_subscribe(
            mutations: ["deleteManyReclassificationEvents"]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyReclassificationEvents: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyReclassificationEvents"
                "updateManyReclassificationEvents"
                "deleteManyReclassificationEvents"
            ]
        )

    # Triggered from `createRfTesting` mutation (excl. `createManyRfTestings` and `upsertRfTesting`).
    onCreatedRfTesting(id: Int): RfTesting
        @aws_subscribe(mutations: ["createRfTesting"])

    # Triggered from `updateRfTesting` mutation (excl. `updateManyRfTestings` and `upsertRfTesting`).
    onUpdatedRfTesting(id: Int): RfTesting
        @aws_subscribe(mutations: ["updateRfTesting"])

    # Triggered from `upsertRfTesting` mutation.
    onUpsertedRfTesting(id: Int): RfTesting
        @aws_subscribe(mutations: ["upsertRfTesting"])

    # Triggered from `deleteRfTesting` mutation (excl. `deleteManyRfTestings`).
    onDeletedRfTesting(id: Int): RfTesting
        @aws_subscribe(mutations: ["deleteRfTesting"])

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyRfTestings`).
    onMutatedRfTesting(id: Int): RfTesting
        @aws_subscribe(
            mutations: [
                "createRfTesting"
                "updateRfTesting"
                "upsertRfTesting"
                "deleteRfTesting"
            ]
        )

    # Triggered from `createManyRfTestings` mutation.
    onCreatedManyRfTestings: BatchPayload
        @aws_subscribe(mutations: ["createManyRfTestings"])

    # Triggered from `updateManyRfTestings` mutation.
    onUpdatedManyRfTestings: BatchPayload
        @aws_subscribe(mutations: ["updateManyRfTestings"])

    # Triggered from `deleteManyRfTestings` mutation.
    onDeletedManyRfTestings: BatchPayload
        @aws_subscribe(mutations: ["deleteManyRfTestings"])

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyRfTestings: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyRfTestings"
                "updateManyRfTestings"
                "deleteManyRfTestings"
            ]
        )

    # Triggered from `createRfTraining` mutation (excl. `createManyRfTrainings` and `upsertRfTraining`).
    onCreatedRfTraining(id: Int): RfTraining
        @aws_subscribe(mutations: ["createRfTraining"])

    # Triggered from `updateRfTraining` mutation (excl. `updateManyRfTrainings` and `upsertRfTraining`).
    onUpdatedRfTraining(id: Int): RfTraining
        @aws_subscribe(mutations: ["updateRfTraining"])

    # Triggered from `upsertRfTraining` mutation.
    onUpsertedRfTraining(id: Int): RfTraining
        @aws_subscribe(mutations: ["upsertRfTraining"])

    # Triggered from `deleteRfTraining` mutation (excl. `deleteManyRfTrainings`).
    onDeletedRfTraining(id: Int): RfTraining
        @aws_subscribe(mutations: ["deleteRfTraining"])

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyRfTrainings`).
    onMutatedRfTraining(id: Int): RfTraining
        @aws_subscribe(
            mutations: [
                "createRfTraining"
                "updateRfTraining"
                "upsertRfTraining"
                "deleteRfTraining"
            ]
        )

    # Triggered from `createManyRfTrainings` mutation.
    onCreatedManyRfTrainings: BatchPayload
        @aws_subscribe(mutations: ["createManyRfTrainings"])

    # Triggered from `updateManyRfTrainings` mutation.
    onUpdatedManyRfTrainings: BatchPayload
        @aws_subscribe(mutations: ["updateManyRfTrainings"])

    # Triggered from `deleteManyRfTrainings` mutation.
    onDeletedManyRfTrainings: BatchPayload
        @aws_subscribe(mutations: ["deleteManyRfTrainings"])

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyRfTrainings: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyRfTrainings"
                "updateManyRfTrainings"
                "deleteManyRfTrainings"
            ]
        )

    # Triggered from `createTenantActionsTrainingSet` mutation (excl.
    # `createManyTenantActionsTrainingSets` and `upsertTenantActionsTrainingSet`).
    onCreatedTenantActionsTrainingSet(
        action_id: Int
    ): TenantActionsTrainingSet
        @aws_subscribe(
            mutations: ["createTenantActionsTrainingSet"]
        )

    # Triggered from `updateTenantActionsTrainingSet` mutation (excl.
    # `updateManyTenantActionsTrainingSets` and `upsertTenantActionsTrainingSet`).
    onUpdatedTenantActionsTrainingSet(
        action_id: Int
    ): TenantActionsTrainingSet
        @aws_subscribe(
            mutations: ["updateTenantActionsTrainingSet"]
        )

    # Triggered from `upsertTenantActionsTrainingSet` mutation.
    onUpsertedTenantActionsTrainingSet(
        action_id: Int
    ): TenantActionsTrainingSet
        @aws_subscribe(
            mutations: ["upsertTenantActionsTrainingSet"]
        )

    # Triggered from `deleteTenantActionsTrainingSet` mutation (excl. `deleteManyTenantActionsTrainingSets`).
    onDeletedTenantActionsTrainingSet(
        action_id: Int
    ): TenantActionsTrainingSet
        @aws_subscribe(
            mutations: ["deleteTenantActionsTrainingSet"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyTenantActionsTrainingSets`).
    onMutatedTenantActionsTrainingSet(
        action_id: Int
    ): TenantActionsTrainingSet
        @aws_subscribe(
            mutations: [
                "createTenantActionsTrainingSet"
                "updateTenantActionsTrainingSet"
                "upsertTenantActionsTrainingSet"
                "deleteTenantActionsTrainingSet"
            ]
        )

    # Triggered from `createManyTenantActionsTrainingSets` mutation.
    onCreatedManyTenantActionsTrainingSets: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyTenantActionsTrainingSets"
            ]
        )

    # Triggered from `updateManyTenantActionsTrainingSets` mutation.
    onUpdatedManyTenantActionsTrainingSets: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyTenantActionsTrainingSets"
            ]
        )

    # Triggered from `deleteManyTenantActionsTrainingSets` mutation.
    onDeletedManyTenantActionsTrainingSets: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyTenantActionsTrainingSets"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyTenantActionsTrainingSets: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyTenantActionsTrainingSets"
                "updateManyTenantActionsTrainingSets"
                "deleteManyTenantActionsTrainingSets"
            ]
        )

    # Triggered from `createTenants` mutation (excl. `createManyTenants` and `upsertTenants`).
    onCreatedTenants(id: Int): Tenants
        @aws_subscribe(mutations: ["createTenants"])

    # Triggered from `updateTenants` mutation (excl. `updateManyTenants` and `upsertTenants`).
    onUpdatedTenants(id: Int): Tenants
        @aws_subscribe(mutations: ["updateTenants"])

    # Triggered from `upsertTenants` mutation.
    onUpsertedTenants(id: Int): Tenants
        @aws_subscribe(mutations: ["upsertTenants"])

    # Triggered from `deleteTenants` mutation (excl. `deleteManyTenants`).
    onDeletedTenants(id: Int): Tenants
        @aws_subscribe(mutations: ["deleteTenants"])

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyTenants`).
    onMutatedTenants(id: Int): Tenants
        @aws_subscribe(
            mutations: [
                "createTenants"
                "updateTenants"
                "upsertTenants"
                "deleteTenants"
            ]
        )

    # Triggered from `createManyTenants` mutation.
    onCreatedManyTenants: BatchPayload
        @aws_subscribe(mutations: ["createManyTenants"])

    # Triggered from `updateManyTenants` mutation.
    onUpdatedManyTenants: BatchPayload
        @aws_subscribe(mutations: ["updateManyTenants"])

    # Triggered from `deleteManyTenants` mutation.
    onDeletedManyTenants: BatchPayload
        @aws_subscribe(mutations: ["deleteManyTenants"])

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyTenants: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyTenants"
                "updateManyTenants"
                "deleteManyTenants"
            ]
        )

    # Triggered from `createDevopsCostlyResourceCodecommit` mutation (excl.
    # `createManyDevopsCostlyResourceCodecommits` and
    # `upsertDevopsCostlyResourceCodecommit`).
    onCreatedDevopsCostlyResourceCodecommit(
        id: Int
    ): DevopsCostlyResourceCodecommit
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceCodecommit"
            ]
        )

    # Triggered from `updateDevopsCostlyResourceCodecommit` mutation (excl.
    # `updateManyDevopsCostlyResourceCodecommits` and
    # `upsertDevopsCostlyResourceCodecommit`).
    onUpdatedDevopsCostlyResourceCodecommit(
        id: Int
    ): DevopsCostlyResourceCodecommit
        @aws_subscribe(
            mutations: [
                "updateDevopsCostlyResourceCodecommit"
            ]
        )

    # Triggered from `upsertDevopsCostlyResourceCodecommit` mutation.
    onUpsertedDevopsCostlyResourceCodecommit(
        id: Int
    ): DevopsCostlyResourceCodecommit
        @aws_subscribe(
            mutations: [
                "upsertDevopsCostlyResourceCodecommit"
            ]
        )

    # Triggered from `deleteDevopsCostlyResourceCodecommit` mutation (excl. `deleteManyDevopsCostlyResourceCodecommits`).
    onDeletedDevopsCostlyResourceCodecommit(
        id: Int
    ): DevopsCostlyResourceCodecommit
        @aws_subscribe(
            mutations: [
                "deleteDevopsCostlyResourceCodecommit"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceCodecommits`).
    onMutatedDevopsCostlyResourceCodecommit(
        id: Int
    ): DevopsCostlyResourceCodecommit
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceCodecommit"
                "updateDevopsCostlyResourceCodecommit"
                "upsertDevopsCostlyResourceCodecommit"
                "deleteDevopsCostlyResourceCodecommit"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceCodecommits` mutation.
    onCreatedManyDevopsCostlyResourceCodecommits: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceCodecommits"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceCodecommits` mutation.
    onUpdatedManyDevopsCostlyResourceCodecommits: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceCodecommits"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceCodecommits` mutation.
    onDeletedManyDevopsCostlyResourceCodecommits: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceCodecommits"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceCodecommits: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceCodecommits"
                "updateManyDevopsCostlyResourceCodecommits"
                "deleteManyDevopsCostlyResourceCodecommits"
            ]
        )

    # Triggered from `createDevopsResourcePriorityCloudformation` mutation (excl.
    # `createManyDevopsResourcePriorityCloudformations` and
    # `upsertDevopsResourcePriorityCloudformation`).
    onCreatedDevopsResourcePriorityCloudformation(
        id: Int
        stack_name: String
    ): DevopsResourcePriorityCloudformation
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityCloudformation"
            ]
        )

    # Triggered from `updateDevopsResourcePriorityCloudformation` mutation (excl.
    # `updateManyDevopsResourcePriorityCloudformations` and
    # `upsertDevopsResourcePriorityCloudformation`).
    onUpdatedDevopsResourcePriorityCloudformation(
        id: Int
        stack_name: String
    ): DevopsResourcePriorityCloudformation
        @aws_subscribe(
            mutations: [
                "updateDevopsResourcePriorityCloudformation"
            ]
        )

    # Triggered from `upsertDevopsResourcePriorityCloudformation` mutation.
    onUpsertedDevopsResourcePriorityCloudformation(
        id: Int
        stack_name: String
    ): DevopsResourcePriorityCloudformation
        @aws_subscribe(
            mutations: [
                "upsertDevopsResourcePriorityCloudformation"
            ]
        )

    # Triggered from `deleteDevopsResourcePriorityCloudformation` mutation (excl.
    # `deleteManyDevopsResourcePriorityCloudformations`).
    onDeletedDevopsResourcePriorityCloudformation(
        id: Int
        stack_name: String
    ): DevopsResourcePriorityCloudformation
        @aws_subscribe(
            mutations: [
                "deleteDevopsResourcePriorityCloudformation"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePriorityCloudformations`).
    onMutatedDevopsResourcePriorityCloudformation(
        id: Int
        stack_name: String
    ): DevopsResourcePriorityCloudformation
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityCloudformation"
                "updateDevopsResourcePriorityCloudformation"
                "upsertDevopsResourcePriorityCloudformation"
                "deleteDevopsResourcePriorityCloudformation"
            ]
        )

    # Triggered from `createManyDevopsResourcePriorityCloudformations` mutation.
    onCreatedManyDevopsResourcePriorityCloudformations: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityCloudformations"
            ]
        )

    # Triggered from `updateManyDevopsResourcePriorityCloudformations` mutation.
    onUpdatedManyDevopsResourcePriorityCloudformations: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePriorityCloudformations"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePriorityCloudformations` mutation.
    onDeletedManyDevopsResourcePriorityCloudformations: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePriorityCloudformations"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePriorityCloudformations: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityCloudformations"
                "updateManyDevopsResourcePriorityCloudformations"
                "deleteManyDevopsResourcePriorityCloudformations"
            ]
        )

    # Triggered from `createDevopsCostlyResourceEcsService` mutation (excl.
    # `createManyDevopsCostlyResourceEcsServices` and
    # `upsertDevopsCostlyResourceEcsService`).
    onCreatedDevopsCostlyResourceEcsService(
        id: Int
    ): DevopsCostlyResourceEcsService
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceEcsService"
            ]
        )

    # Triggered from `updateDevopsCostlyResourceEcsService` mutation (excl.
    # `updateManyDevopsCostlyResourceEcsServices` and
    # `upsertDevopsCostlyResourceEcsService`).
    onUpdatedDevopsCostlyResourceEcsService(
        id: Int
    ): DevopsCostlyResourceEcsService
        @aws_subscribe(
            mutations: [
                "updateDevopsCostlyResourceEcsService"
            ]
        )

    # Triggered from `upsertDevopsCostlyResourceEcsService` mutation.
    onUpsertedDevopsCostlyResourceEcsService(
        id: Int
    ): DevopsCostlyResourceEcsService
        @aws_subscribe(
            mutations: [
                "upsertDevopsCostlyResourceEcsService"
            ]
        )

    # Triggered from `deleteDevopsCostlyResourceEcsService` mutation (excl. `deleteManyDevopsCostlyResourceEcsServices`).
    onDeletedDevopsCostlyResourceEcsService(
        id: Int
    ): DevopsCostlyResourceEcsService
        @aws_subscribe(
            mutations: [
                "deleteDevopsCostlyResourceEcsService"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceEcsServices`).
    onMutatedDevopsCostlyResourceEcsService(
        id: Int
    ): DevopsCostlyResourceEcsService
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceEcsService"
                "updateDevopsCostlyResourceEcsService"
                "upsertDevopsCostlyResourceEcsService"
                "deleteDevopsCostlyResourceEcsService"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceEcsServices` mutation.
    onCreatedManyDevopsCostlyResourceEcsServices: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceEcsServices"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceEcsServices` mutation.
    onUpdatedManyDevopsCostlyResourceEcsServices: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceEcsServices"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceEcsServices` mutation.
    onDeletedManyDevopsCostlyResourceEcsServices: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceEcsServices"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceEcsServices: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceEcsServices"
                "updateManyDevopsCostlyResourceEcsServices"
                "deleteManyDevopsCostlyResourceEcsServices"
            ]
        )

    # Triggered from `createDevopsCostlyResourceEcsTask` mutation (excl.
    # `createManyDevopsCostlyResourceEcsTasks` and
    # `upsertDevopsCostlyResourceEcsTask`).
    onCreatedDevopsCostlyResourceEcsTask(
        id: Int
    ): DevopsCostlyResourceEcsTask
        @aws_subscribe(
            mutations: ["createDevopsCostlyResourceEcsTask"]
        )

    # Triggered from `updateDevopsCostlyResourceEcsTask` mutation (excl.
    # `updateManyDevopsCostlyResourceEcsTasks` and
    # `upsertDevopsCostlyResourceEcsTask`).
    onUpdatedDevopsCostlyResourceEcsTask(
        id: Int
    ): DevopsCostlyResourceEcsTask
        @aws_subscribe(
            mutations: ["updateDevopsCostlyResourceEcsTask"]
        )

    # Triggered from `upsertDevopsCostlyResourceEcsTask` mutation.
    onUpsertedDevopsCostlyResourceEcsTask(
        id: Int
    ): DevopsCostlyResourceEcsTask
        @aws_subscribe(
            mutations: ["upsertDevopsCostlyResourceEcsTask"]
        )

    # Triggered from `deleteDevopsCostlyResourceEcsTask` mutation (excl. `deleteManyDevopsCostlyResourceEcsTasks`).
    onDeletedDevopsCostlyResourceEcsTask(
        id: Int
    ): DevopsCostlyResourceEcsTask
        @aws_subscribe(
            mutations: ["deleteDevopsCostlyResourceEcsTask"]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsCostlyResourceEcsTasks`).
    onMutatedDevopsCostlyResourceEcsTask(
        id: Int
    ): DevopsCostlyResourceEcsTask
        @aws_subscribe(
            mutations: [
                "createDevopsCostlyResourceEcsTask"
                "updateDevopsCostlyResourceEcsTask"
                "upsertDevopsCostlyResourceEcsTask"
                "deleteDevopsCostlyResourceEcsTask"
            ]
        )

    # Triggered from `createManyDevopsCostlyResourceEcsTasks` mutation.
    onCreatedManyDevopsCostlyResourceEcsTasks: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceEcsTasks"
            ]
        )

    # Triggered from `updateManyDevopsCostlyResourceEcsTasks` mutation.
    onUpdatedManyDevopsCostlyResourceEcsTasks: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsCostlyResourceEcsTasks"
            ]
        )

    # Triggered from `deleteManyDevopsCostlyResourceEcsTasks` mutation.
    onDeletedManyDevopsCostlyResourceEcsTasks: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsCostlyResourceEcsTasks"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsCostlyResourceEcsTasks: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsCostlyResourceEcsTasks"
                "updateManyDevopsCostlyResourceEcsTasks"
                "deleteManyDevopsCostlyResourceEcsTasks"
            ]
        )

    # Triggered from `createDevopsResourcePriorityEcsService` mutation (excl.
    # `createManyDevopsResourcePriorityEcsServices` and
    # `upsertDevopsResourcePriorityEcsService`).
    onCreatedDevopsResourcePriorityEcsService(
        id: Int
    ): DevopsResourcePriorityEcsService
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityEcsService"
            ]
        )

    # Triggered from `updateDevopsResourcePriorityEcsService` mutation (excl.
    # `updateManyDevopsResourcePriorityEcsServices` and
    # `upsertDevopsResourcePriorityEcsService`).
    onUpdatedDevopsResourcePriorityEcsService(
        id: Int
    ): DevopsResourcePriorityEcsService
        @aws_subscribe(
            mutations: [
                "updateDevopsResourcePriorityEcsService"
            ]
        )

    # Triggered from `upsertDevopsResourcePriorityEcsService` mutation.
    onUpsertedDevopsResourcePriorityEcsService(
        id: Int
    ): DevopsResourcePriorityEcsService
        @aws_subscribe(
            mutations: [
                "upsertDevopsResourcePriorityEcsService"
            ]
        )

    # Triggered from `deleteDevopsResourcePriorityEcsService` mutation (excl. `deleteManyDevopsResourcePriorityEcsServices`).
    onDeletedDevopsResourcePriorityEcsService(
        id: Int
    ): DevopsResourcePriorityEcsService
        @aws_subscribe(
            mutations: [
                "deleteDevopsResourcePriorityEcsService"
            ]
        )

    # Triggered from ANY SINGLE record mutation (excl. `on*ManyDevopsResourcePriorityEcsServices`).
    onMutatedDevopsResourcePriorityEcsService(
        id: Int
    ): DevopsResourcePriorityEcsService
        @aws_subscribe(
            mutations: [
                "createDevopsResourcePriorityEcsService"
                "updateDevopsResourcePriorityEcsService"
                "upsertDevopsResourcePriorityEcsService"
                "deleteDevopsResourcePriorityEcsService"
            ]
        )

    # Triggered from `createManyDevopsResourcePriorityEcsServices` mutation.
    onCreatedManyDevopsResourcePriorityEcsServices: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityEcsServices"
            ]
        )

    # Triggered from `updateManyDevopsResourcePriorityEcsServices` mutation.
    onUpdatedManyDevopsResourcePriorityEcsServices: BatchPayload
        @aws_subscribe(
            mutations: [
                "updateManyDevopsResourcePriorityEcsServices"
            ]
        )

    # Triggered from `deleteManyDevopsResourcePriorityEcsServices` mutation.
    onDeletedManyDevopsResourcePriorityEcsServices: BatchPayload
        @aws_subscribe(
            mutations: [
                "deleteManyDevopsResourcePriorityEcsServices"
            ]
        )

    # Triggered from ANY MULTIPLE records mutation (excl. single record mutations).
    onMutatedManyDevopsResourcePriorityEcsServices: BatchPayload
        @aws_subscribe(
            mutations: [
                "createManyDevopsResourcePriorityEcsServices"
                "updateManyDevopsResourcePriorityEcsServices"
                "deleteManyDevopsResourcePriorityEcsServices"
            ]
        )
}

type TenantActionsTrainingSet {
    action_id: Int!
    date: AWSDateTime!
    current_label: String
    new_label: String
    tenant_id: String!
}

input TenantActionsTrainingSetConnectOrCreateInput {
    where: TenantActionsTrainingSetWhereUniqueInput!
    create: TenantActionsTrainingSetCreateInput!
}

input TenantActionsTrainingSetCreateInput {
    date: AWSDateTime!
    current_label: String
    new_label: String
    tenant_id: String!
}

input TenantActionsTrainingSetCreateManyInput {
    date: AWSDateTime!
    current_label: String
    new_label: String
    tenant_id: String!
}

input TenantActionsTrainingSetDeleteManyInput {
    where: TenantActionsTrainingSetWhereFilterInput!
}

input TenantActionsTrainingSetDeleteUniqueInput {
    where: TenantActionsTrainingSetWhereUniqueInput!
}

input TenantActionsTrainingSetFilterRelationsInput {
    every: TenantActionsTrainingSetWhereFilterInput
    none: TenantActionsTrainingSetWhereFilterInput
    some: TenantActionsTrainingSetWhereFilterInput
}

input TenantActionsTrainingSetOrderByInput {
    action_id: OrderByArg
    date: OrderByArg
    current_label: OrderByArg
    new_label: OrderByArg
    tenant_id: OrderByArg
}

input TenantActionsTrainingSetUpdateInput {
    date: AWSDateTime
    current_label: String
    new_label: String
    tenant_id: String
}

input TenantActionsTrainingSetUpdateManyInput {
    where: TenantActionsTrainingSetWhereFilterInput!
    data: TenantActionsTrainingSetUpdateInput!
}

input TenantActionsTrainingSetUpdateUniqueInput {
    data: TenantActionsTrainingSetUpdateInput!
    where: TenantActionsTrainingSetWhereUniqueInput!
}

input TenantActionsTrainingSetUpsertInput {
    create: TenantActionsTrainingSetCreateInput!
    update: TenantActionsTrainingSetUpdateInput!
}

input TenantActionsTrainingSetUpsertUniqueInput {
    where: TenantActionsTrainingSetWhereUniqueInput!
    create: TenantActionsTrainingSetCreateInput!
    update: TenantActionsTrainingSetUpdateInput!
}

input TenantActionsTrainingSetWhereFilterInput {
    OR: [TenantActionsTrainingSetWhereFilterInput]
    NOT: [TenantActionsTrainingSetWhereFilterInput]
    AND: [TenantActionsTrainingSetWhereFilterInput]
    action_id: IntFilterInput
    date: AWSDateTimeFilterInput
    current_label: StringFilterInput
    new_label: StringFilterInput
    tenant_id: StringFilterInput
}

input TenantActionsTrainingSetWhereUniqueInput {
    action_id: Int
}

type Tenants {
    id: Int!
    tenant_id: String
    email: AWSEmail
    status: String
    subscription_type: String
}

input TenantsConnectOrCreateInput {
    where: TenantsWhereUniqueInput!
    create: TenantsCreateInput!
}

input TenantsCreateInput {
    tenant_id: String
    email: AWSEmail
    status: String
    subscription_type: String
}

input TenantsCreateManyInput {
    tenant_id: String
    email: AWSEmail
    status: String
    subscription_type: String
}

input TenantsDeleteManyInput {
    where: TenantsWhereFilterInput!
}

input TenantsDeleteUniqueInput {
    where: TenantsWhereUniqueInput!
}

input TenantsFilterRelationsInput {
    every: TenantsWhereFilterInput
    none: TenantsWhereFilterInput
    some: TenantsWhereFilterInput
}

input TenantsOrderByInput {
    id: OrderByArg
    tenant_id: OrderByArg
    email: OrderByArg
    status: OrderByArg
    subscription_type: OrderByArg
}

input TenantsUpdateInput {
    tenant_id: String
    email: AWSEmail
    status: String
    subscription_type: String
}

input TenantsUpdateManyInput {
    where: TenantsWhereFilterInput!
    data: TenantsUpdateInput!
}

input TenantsUpdateUniqueInput {
    data: TenantsUpdateInput!
    where: TenantsWhereUniqueInput!
}

input TenantsUpsertInput {
    create: TenantsCreateInput!
    update: TenantsUpdateInput!
}

input TenantsUpsertUniqueInput {
    where: TenantsWhereUniqueInput!
    create: TenantsCreateInput!
    update: TenantsUpdateInput!
}

input TenantsWhereFilterInput {
    OR: [TenantsWhereFilterInput]
    NOT: [TenantsWhereFilterInput]
    AND: [TenantsWhereFilterInput]
    id: IntFilterInput
    tenant_id: StringFilterInput
    email: AWSEmailFilterInput
    status: StringFilterInput
    subscription_type: StringFilterInput
}

input TenantsWhereUniqueInput {
    id: Int
}
